------1 VT_COB----------
create or replace PROCEDURE "PRC_MIG_CUST_DATAMOVE_VAM"
(OUT_STATUSCODE OUT VARCHAR2 ,
 OUT_STATUSDESC OUT VARCHAR2)
AS
LV_STATUSDESC VARCHAR2(2000);
BEGIN
DBMS_OUTPUT.PUT_LINE('PROCEDURE STARTED AT'||TO_CHAR(SYSDATE,'DD-MM-YYYY HH24:MI:SS'));

/*

SELECT COUNT(1),'STGVTCMCUST'				FROM VT_MIGRATION.STGVTCMCUST			UNION ALL
SELECT COUNT(1),'STGVTCMCUSTCIF'			FROM VT_MIGRATION.STGVTCMCUSTCIF         UNION ALL
SELECT COUNT(1),'STGVTCMCUSTACC'			FROM VT_MIGRATION.STGVTCMCUSTACC         UNION ALL
SELECT COUNT(1),'STGVTCMCUSTACCCIF'			FROM VT_MIGRATION.STGVTCMCUSTACCCIF      UNION ALL
SELECT COUNT(1),'STGVTCMCUSTCHRG'			FROM VT_MIGRATION.STGVTCMCUSTCHRG        UNION ALL
SELECT COUNT(1),'STGVTCMCUSTSVCMAP'			FROM VT_MIGRATION.STGVTCMCUSTSVCMAP      UNION ALL
SELECT COUNT(1),'STGVTCMCUSTSVCCONFIG'		FROM VT_MIGRATION.STGVTCMCUSTSVCCONFIG   UNION ALL
SELECT COUNT(1),'STGVTCMCUSTSVCACCCONFIG'	FROM VT_MIGRATION.STGVTCMCUSTSVCACCCONFIG;
*/

/*
SELECT COUNT(1),'MIGVTCMCUST'				FROM VAM_MIGVTCMCUST			 UNION ALL
SELECT COUNT(1),'MIGVTCMCUSTCIF'			FROM VAM_MIGVTCMCUSTCIF          UNION ALL
SELECT COUNT(1),'MIGVTCMCUSTACC'			FROM VAM_MIGVTCMCUSTACC          UNION ALL
SELECT COUNT(1),'MIGVTCMCUSTACCCIF'			FROM VAM_MIGVTCMCUSTACCCIF       UNION ALL
SELECT COUNT(1),'MIGVTCMCUSTCHRG'			FROM VAM_MIGVTCMCUSTCHRG         UNION ALL
SELECT COUNT(1),'MIGVTCMCUSTPRDMAP'			FROM VAM_MIGVTCMCUSTPRDMAP       UNION ALL
SELECT COUNT(1),'MIGVTSMSVC'			    FROM VAM_MIGVTSMSVC              UNION ALL
SELECT COUNT(1),'MIGVTCMCUSTSUBPRDMAP'      FROM VAM_MIGVTCMCUSTSUBPRDMAP    UNION ALL
SELECT COUNT(1),'MIGVTCMCUSTPRDCONFIG'		FROM VAM_MIGVTCMCUSTPRDCONFIG    UNION ALL
SELECT COUNT(1),'MIGVTSMSVCCONFIG'		    FROM VAM_MIGVTSMSVCCONFIG        UNION ALL
SELECT COUNT(1),'MIGVTCMCUSTSUBPRDCONFIG'   FROM VAM_MIGVTCMCUSTSUBPRDCONFIG       UNION ALL
SELECT COUNT(1),'MIGVTCMCUSTPRDACCCONFIG'	FROM VAM_MIGVTCMCUSTPRDACCCONFIG;
*/


 /*  VAM_MIGVTCMSTCUST	*/
INSERT INTO VAM_MIGVTCMSTCUST
(
STCUSTID,                  CIFNO,                       GCIFNO,                             CORPORATEID,
PARENTCIFNO,               CUSTNAME,                    BANKCODE,                           SUBSCRIBDATE,
SUBSHORTNAME,              SUBLONGNAME,                 ADDLINE1,                           ADDLINE2,
ADDLINE3,                  CITY,                        COUNTRYID,                          COUNTRYCODE,
EMAIL,                     MOBILE,                      TELNO,                              FAXNO,
PRICNTFNAME,               PRICNTMNAME,                 PRICNTLNAME,                        PRICNTEMAIL,
PRICNTMOBILE,              PRICNTTELNO,                 SECCNTFNAME,                        SECCNTMNAME,
SECCNTLNAME,               SECCNTEMAIL,                 SECCNTMOBILE,                       SECCNTTELNO,
BNKCNTFNAME,               BNKCNTMNAME,                 BNKCNTLNAME,                        BNKCNTEMAIL,
BNKCNTMOBILE,              BNKCNTTELNO,                 PRICNTMOBCODE,                      PRICNTELTAREACD,
PRICNTTELCNTRYCD,          SECCNTMOBCODE,               SECCNTTELAREACD,                    SECCNTTELCNTRYCD,
INCREMENTUPLOAD,           THRESHOLDLIMIT,              RECONEXCBY,                         OTHERBANKRECON,
EIPPSERVICES,              INTAPPR,                     AUTHZAPR,                           INDESTPATH,
OUTDESTPATH,               MAXFILESIZE,                 PERTRANFILESIZE,                    SMSFLAG,
EMAILFLAG,                 IMRFLAG,                     VAFLAG,                             FILEUPLFLAG,
CHRGACCID,                 STATUS,                      CRTBY,                              CRTDATE,
CRTIP,                     APPDATE,                     APPBY,                              APPIP,
MDYDATE,                   MDYBY,                       MDYIP,                              REMARKS,
BNKCNTMOBCODE,             BNKCNTTELAREACD,             BNKCNTTELCNTRYCD,                   EMAILOPTFLAG,
CUSTKEY,                   REGURL,                      INVURL,                             USERURL,
CHECKERREMARKS,            CHRGFLAG,                    SETUPFEECHRGTYPE,                   SETUPFEECHRGAMT,
SETUPFEECHRGVATPER,        PARTNERREGFEETYPE,           PARTNERREGFEEAMT,                   PARTNERREGFEEPER,
PERTXNFEETYPE,             PERTXNFEEAMT,                PERTXNFEEVAT,                       VAAMCFEETYPE,
VAAMCFEEAMT,               VAAMCFEEVAT,                 CHARGEFROM,                         EXECDATE,
CBXSYNCDATE,               CBXSYNCBATCHRUNID,           ALERTSVCFLAG,                       PAYOUTSVCFLAG,
POBOCOBOSVCFLAG,           RCMSSVCFLAG,                 SADADSVCFLAG,                       RCDSVCFLAG,
DELEGATION,                TRNFILEAPPRFLAG,             TRNFILEPARTIALFAILUREFLAG,          VERIFIERINTERVENTION,
VASETUPFEECHRGAMT,         VASETUPFEECHRGVATPER,        VACREATIONCHRGAMT,                  VACREATIONFEECHRGVATPER,
POBOSETUPFEECHRGAMT,       POBOSETUPFEECHRGVATPER,      SADADBILLPAY,                       GOVTPAY,
INVPAY,                    CAPTURECRN,                  CUSTREFNO,                          SCANNINGBY,
PAYADVUPLOAD,              BENREGAPPR,                  DEALREFNO,                          WPSSVCFLAG,
WPSKSA,                    WPSBAH,                      WPSUAE,                             INVPRINTFLAG,
DIGITSIGNCER,              SECURITYCER,                 ENCTYPE,                            AUTOTRIGGER,
KEYSENDDATE,               H2HMAKERID,                  ONBOARDFLAG,                        TRANSACTIONID,
UPDATEDFLAG,               ISDELETED,                   OLDSTCUSTID,                        OLDGCIFNO,
MIGSTATUSCODE,             MIGSTATUSDESC,
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID
)
SELECT
STCUSTID,                  CIFNO,                       GCIFNO,                             CORPORATEID,
PARENTCIFNO,               CUSTNAME,                    BANKCODE,                           TO_CHAR(TO_DATE(SUBSCRIBDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),
SUBSHORTNAME,              SUBLONGNAME,                 ADDLINE1,                           ADDLINE2,
ADDLINE3,                  CITY,                        1,                                  COUNTRYCODE,
EMAIL,                     MOBILE,                      TELNO,                              FAXNO,
PRICNTFNAME,               PRICNTMNAME,                 PRICNTLNAME,                        PRICNTEMAIL,
PRICNTMOBILE,              PRICNTTELNO,                 SECCNTFNAME,                        SECCNTMNAME,
SECCNTLNAME,               SECCNTEMAIL,                 SECCNTMOBILE,                       SECCNTTELNO,
BNKCNTFNAME,               BNKCNTMNAME,                 BNKCNTLNAME,                        BNKCNTEMAIL,
BNKCNTMOBILE,              BNKCNTTELNO,                 PRICNTMOBCODE,                      PRICNTELTAREACD,
PRICNTTELCNTRYCD,          SECCNTMOBCODE,               SECCNTTELAREACD,                    SECCNTTELCNTRYCD,
INCREMENTUPLOAD,           THRESHOLDLIMIT,              RECONEXCBY,                         OTHERBANKRECON,
EIPPSERVICES,              INTAPPR,                     AUTHZAPR,                           INDESTPATH,
OUTDESTPATH,               MAXFILESIZE,                 PERTRANFILESIZE,                    SMSFLAG,
EMAILFLAG,                 IMRFLAG,                     VAFLAG,                             FILEUPLFLAG,
CHRGACCID,                 STATUS,                      CRTBY,                              TO_CHAR(TO_DATE(CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),
CRTIP,                     TO_CHAR(TO_DATE(APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                     APPBY,                              APPIP,
TO_CHAR(TO_DATE(MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                   MDYBY,                       MDYIP,                              REMARKS,
BNKCNTMOBCODE,             BNKCNTTELAREACD,             BNKCNTTELCNTRYCD,                   EMAILOPTFLAG,
CUSTKEY,                   REGURL,                      INVURL,                             USERURL,
CHECKERREMARKS,            CHRGFLAG,                    SETUPFEECHRGTYPE,                   SETUPFEECHRGAMT,
SETUPFEECHRGVATPER,        PARTNERREGFEETYPE,           PARTNERREGFEEAMT,                   PARTNERREGFEEPER,
PERTXNFEETYPE,             PERTXNFEEAMT,                PERTXNFEEVAT,                       VAAMCFEETYPE,
VAAMCFEEAMT,               VAAMCFEEVAT,                 CHARGEFROM,                         EXECDATE,
TO_CHAR(TO_DATE(CBXSYNCDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),               CBXSYNCBATCHRUNID,           ALERTSVCFLAG,                       PAYOUTSVCFLAG,
POBOCOBOSVCFLAG,           RCMSSVCFLAG,                 SADADSVCFLAG,                       RCDSVCFLAG,
DELEGATION,                TRNFILEAPPRFLAG,             TRNFILEPARTIALFAILUREFLAG,          VERIFIERINTERVENTION,
VASETUPFEECHRGAMT,         VASETUPFEECHRGVATPER,        VACREATIONCHRGAMT,                  VACREATIONFEECHRGVATPER,
POBOSETUPFEECHRGAMT,       POBOSETUPFEECHRGVATPER,      SADADBILLPAY,                       GOVTPAY,
INVPAY,                    CAPTURECRN,                  CUSTREFNO,                          SCANNINGBY,
PAYADVUPLOAD,              BENREGAPPR,                  DEALREFNO,                          WPSSVCFLAG,
WPSKSA,                    WPSBAH,                      WPSUAE,                             INVPRINTFLAG,
DIGITSIGNCER,              SECURITYCER,                 ENCTYPE,                            AUTOTRIGGER,
TO_CHAR(TO_DATE(KEYSENDDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),               H2HMAKERID,                  ONBOARDFLAG,                        TRANSACTIONID,
UPDATEDFLAG,               ISDELETED,                   STCUSTID,                           GCIFNO,
'P','',
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID
FROM VT_MIGRATION.STGVTCMSTCUST;

 /* VTCMSTCUSTCIF */
----DATA WILL BE THERE IN GCN HENCE COMMENTING---------
 INSERT INTO VAM_MIGVTCMSTCUSTCIF
 (
STCIFID,               CIFNO,                        STCUSTID,                     STATUS,
CRTBY,                 CRTDATE,                      CRTIP,                        APPDATE,
APPBY,                 APPIP,                        MDYDATE,                      MDYBY,
MDYIP,                 CIFNAME,                      BRANCH,                       PRIMARYCIF,
CBXSYNCDATE,           CBXSYNCBATCHRUNID,            COUNTRYCODE2,                 ONBOARDFLAG,
UPDATEDFLAG,           ISDELETED,                    GCIFNO,                       OLDCIFNO,
OLDGCIFNO,
MIGSTATUSCODE,             MIGSTATUSDESC,
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID
)
SELECT

STCIFID,               CIFNO,                        STCUSTID,                     STATUS,
CRTBY,                 TO_CHAR(TO_DATE(CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                      CRTIP,                        TO_CHAR(TO_DATE(APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),
APPBY,                 APPIP,                        TO_CHAR(TO_DATE(MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                      MDYBY,
MDYIP,                 CIFNAME,                      BRANCH,                       PRIMARYCIF,
TO_CHAR(TO_DATE(CBXSYNCDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),           CBXSYNCBATCHRUNID,            'AE',                 ONBOARDFLAG,
UPDATEDFLAG,           ISDELETED,                    GCIFNO,                       CIFNO,
GCIFNO,
'P','',
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID
FROM VT_MIGRATION.STGVTCMSTCUSTCIF;

 /*  VTCMSTCUSTACC */

INSERT INTO VAM_MIGVTCMSTCUSTACC
(
STACCID,                       ACCNO,                      IBAN,                     ACCNAME,
ACCTYPE,                       EMAIL,                      CURRENCY,                 BRANCHCODE,
ACCSTATUS,                     STATUS,                     CRTBY,                    CRTDATE,
CRTIP,                         MDYDATE,                    MDYBY,                    MDYIP,
CHRGFLAG,                      IMRCHRGTYPE,                IMRCHRGAMT,               PERUSRCHRGTYPE,
PERUSRCHRGAMT,                 SETUPFEECHRGTYPE,           SETUPFEECHRGAMT,          VATCHRGTYPE,
VATCHRGAMT,                    SETUPFEECHRGVATPER,         PARTNERREGFEETYPE,        PARTNERREGFEEAMT,
PARTNERREGFEEPER,              PERTXNFEETYPE,              PERTXNFEEAMT,             PERTXNFEEVAT,
VAAMCFEETYPE,                  VAAMCFEEAMT,                VAAMCFEEVAT,              CHARGEFROM,
EXECDATE,                      CBXSYNCDATE,                CBXSYNCBATCHRUNID,        COUNTRYCODE2,
CLOSURE_FLAG,                  NO_CREDIT,                  NO_DEBIT,                 BLOCKED,
DORMANT,                       STOP_PAYMENT,               DELINGUENCY_STATUS,       STPFLAG,
NONSTPFLAG,                    AUTOTRIGGER,                ACCCHECK,                 HNIFLAG,
SEGMENT,                       ONBOARDFLAG,                TRANSACTIONID,            ISDELETED,
UPDATEDFLAG,                   MIGSTATUSCODE,
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID
)

SELECT
STACCID,                       ACCNO,                      IBAN,                     ACCNAME,
ACCTYPE,                       EMAIL,                      CURRENCY,                 BRANCHCODE,
ACCSTATUS,                     STATUS,                     CRTBY,                    TO_CHAR(TO_DATE(CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),
CRTIP,                         TO_CHAR(TO_DATE(MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                    MDYBY,                    MDYIP,
CHRGFLAG,                      IMRCHRGTYPE,                IMRCHRGAMT,               PERUSRCHRGTYPE,
PERUSRCHRGAMT,                 SETUPFEECHRGTYPE,           SETUPFEECHRGAMT,          VATCHRGTYPE,
VATCHRGAMT,                    SETUPFEECHRGVATPER,         PARTNERREGFEETYPE,        PARTNERREGFEEAMT,
PARTNERREGFEEPER,              PERTXNFEETYPE,              PERTXNFEEAMT,             PERTXNFEEVAT,
VAAMCFEETYPE,                  VAAMCFEEAMT,                VAAMCFEEVAT,              CHARGEFROM,
EXECDATE,                      TO_CHAR(TO_DATE(CBXSYNCDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                CBXSYNCBATCHRUNID,        COUNTRYCODE2,
CLOSURE_FLAG,                  NO_CREDIT,                  NO_DEBIT,                 BLOCKED,
DORMANT,                       STOP_PAYMENT,               DELINGUENCY_STATUS,       STPFLAG,
NONSTPFLAG,                    AUTOTRIGGER,                ACCCHECK,                 HNIFLAG,
SEGMENT,                       ONBOARDFLAG,                TRANSACTIONID,            ISDELETED,
UPDATEDFLAG,                   'P',
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID
FROM VT_MIGRATION.STGVTCMSTCUSTACC;

 /*  VTCMSTCUSTACCCIF  */

INSERT INTO VAM_MIGVTCMSTCUSTACCCIF
(
STACCCIFID,                     STCUSTID,                        STCIFID,                    STACCID,
STATUS,                         CRTBY,                           CRTDATE,                    CRTIP,
APPDATE,                        APPBY,                           APPIP,                      MDYDATE,
MDYBY,                          MDYIP,                           ISDELETED,                  ONBOARDFLAG,
GCIFNO,                         ACCNO,                           CIFNO,                      UPDATEDFLAG,
OLDACCNO,                       OLDCIFNO,                        OLDGCIFNO,
MIGSTATUSCODE,             MIGSTATUSDESC,
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID
)
SELECT

STACCCIFID,                     STCUSTID,                        STCIFID,                    STACCID,
STATUS,                         CRTBY,                           TO_CHAR(TO_DATE(CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                    CRTIP,
TO_CHAR(TO_DATE(APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                        APPBY,                           APPIP,                      TO_CHAR(TO_DATE(MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),
MDYBY,                          MDYIP,                           ISDELETED,                  ONBOARDFLAG,
GCIFNO,                         ACCNO,                           CIFNO,                      UPDATEDFLAG,
ACCNO,                          CIFNO,                           GCIFNO,
'P','',
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID
FROM VT_MIGRATION.STGVTCMSTCUSTACCCIF ;

 /* VTCMCUST */
 INSERT INTO VAM_MIGVTCMCUST
 (
 CUSTID,                       CIFNO,                   GCIFNO,                         CORPORATEID,
PARENTCIFNO,                   CUSTNAME,                BANKCODE,                       SUBSCRIBDATE,
SUBSHORTNAME,                  SUBLONGNAME,             ADDLINE1,                       ADDLINE2,
ADDLINE3,                      CITY,                    COUNTRYID,                      COUNTRYCODE,
EMAIL,                         MOBILE,                  TELNO,                          FAXNO,
PRICNTFNAME,                   PRICNTMNAME,             PRICNTLNAME,                    PRICNTEMAIL,
PRICNTMOBILE,                  PRICNTTELNO,             SECCNTFNAME,                    SECCNTMNAME,
SECCNTLNAME,                   SECCNTEMAIL,             SECCNTMOBILE,                   SECCNTTELNO,
BNKCNTFNAME,                   BNKCNTMNAME,             BNKCNTLNAME,                    BNKCNTEMAIL,
BNKCNTMOBILE,                  BNKCNTTELNO,             PRICNTMOBCODE,                  PRICNTELTAREACD,
PRICNTTELCNTRYCD,              SECCNTMOBCODE,           SECCNTTELAREACD,                SECCNTTELCNTRYCD,
INCREMENTUPLOAD,               THRESHOLDLIMIT,          RECONEXCBY,                     OTHERBANKRECON,
EIPPSERVICES,                  INTAPPR,                 AUTHZAPR,                       INDESTPATH,
OUTDESTPATH,                   MAXFILESIZE,             PERTRANFILESIZE,                SMSFLAG,
EMAILFLAG,                     IMRFLAG,                 VAFLAG,                         FILEUPLFLAG,
CHRGACCID,                     STATUS,                  CRTBY,                          CRTDATE,
CRTIP,                         APPDATE,                 APPBY,                          APPIP,
MDYDATE,                       MDYBY,                   MDYIP,                          REMARKS,
BNKCNTMOBCODE,                 BNKCNTTELAREACD,         BNKCNTTELCNTRYCD,               EMAILOPTFLAG,
CUSTKEY,                       REGURL,                  INVURL,                         USERURL,
CHECKERREMARKS,                CHRGFLAG,                SETUPFEECHRGTYPE,               SETUPFEECHRGAMT,
SETUPFEECHRGVATPER,            PARTNERREGFEETYPE,       PARTNERREGFEEAMT,               PARTNERREGFEEPER,
PERTXNFEETYPE,                 PERTXNFEEAMT,            PERTXNFEEVAT,                   VAAMCFEETYPE,
VAAMCFEEAMT,                   VAAMCFEEVAT,             CHARGEFROM,                     EXECDATE,
CBXSYNCDATE,                   CBXSYNCBATCHRUNID,       ALERTSVCFLAG,                   PAYOUTSVCFLAG,
POBOCOBOSVCFLAG,               RCMSSVCFLAG,             SADADSVCFLAG,                   RCDSVCFLAG,
DELEGATION,                    TRNFILEAPPRFLAG,         TRNFILEPARTIALFAILUREFLAG,      VERIFIERINTERVENTION,
VASETUPFEECHRGAMT,             VASETUPFEECHRGVATPER,    VACREATIONCHRGAMT,              VACREATIONFEECHRGVATPER,
POBOSETUPFEECHRGAMT,           POBOSETUPFEECHRGVATPER,  SADADBILLPAY,                   GOVTPAY,
INVPAY,                        CAPTURECRN,              CUSTREFNO,                      SCANNINGBY,
PAYADVUPLOAD,                  BENREGAPPR,              DEALREFNO,                      WPSSVCFLAG,
WPSKSA,                        WPSBAH,                  WPSUAE,                         INVPRINTFLAG,
DIGITSIGNCER,                  SECURITYCER,             ENCTYPE,                        AUTOTRIGGER,
KEYSENDDATE,                   H2HMAKERID,              REQTYPE,                        CHRGCALCFROM,
MLTFLAG,                       BULKREGURL,              OLDCUSTID,                      OLDGCIFNO,
MIGSTATUSCODE,                 CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID
)
SELECT
 CUST.CUSTID,                       CIFNO,                   CUST.GCIFNO,                         CORPORATEID,
PARENTCIFNO,                   CUSTNAME,                BANKCODE,                       TO_CHAR(TO_DATE(SUBSCRIBDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),
SUBSHORTNAME,                  SUBLONGNAME,             ADDLINE1,                       ADDLINE2,
ADDLINE3,                      CITY,                    1,                              'AE',
EMAIL,                         MOBILE,                  TELNO,                          FAXNO,
PRICNTFNAME,                   PRICNTMNAME,             PRICNTLNAME,                    PRICNTEMAIL,
PRICNTMOBILE,                  PRICNTTELNO,             SECCNTFNAME,                    SECCNTMNAME,
SECCNTLNAME,                   SECCNTEMAIL,             SECCNTMOBILE,                   SECCNTTELNO,
BNKCNTFNAME,                   BNKCNTMNAME,             BNKCNTLNAME,                    BNKCNTEMAIL,
BNKCNTMOBILE,                  BNKCNTTELNO,             PRICNTMOBCODE,                  PRICNTELTAREACD,
PRICNTTELCNTRYCD,              SECCNTMOBCODE,           SECCNTTELAREACD,                SECCNTTELCNTRYCD,
INCREMENTUPLOAD,               THRESHOLDLIMIT,          RECONEXCBY,                     OTHERBANKRECON,
EIPPSERVICES,                  INTAPPR,                 AUTHZAPR,                       INDESTPATH,
OUTDESTPATH,                   MAXFILESIZE,             PERTRANFILESIZE,                SMSFLAG,
EMAILFLAG,                     IMRFLAG,                 VAFLAG,                         FILEUPLFLAG,
CHRGACCID,                     CUST.STATUS,                  CUST.CRTBY,                          TO_CHAR(TO_DATE(CUST.CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),
CUST.CRTIP,                         TO_CHAR(TO_DATE(CUST.APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                 CUST.APPBY,                          APPIP,
TO_CHAR(TO_DATE(CUST.MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                       CUST.MDYBY,                   CUST.MDYIP,                          CUST.REMARKS,
BNKCNTMOBCODE,                 BNKCNTTELAREACD,         BNKCNTTELCNTRYCD,               EMAILOPTFLAG,
CUSTKEY,                       REGURL,                  INVURL,                         USERURL,
CUST.CHECKERREMARKS,                CHRGFLAG,                SETUPFEECHRGTYPE,               SETUPFEECHRGAMT,
SETUPFEECHRGVATPER,            PARTNERREGFEETYPE,       PARTNERREGFEEAMT,               PARTNERREGFEEPER,
PERTXNFEETYPE,                 PERTXNFEEAMT,            PERTXNFEEVAT,                   VAAMCFEETYPE,
VAAMCFEEAMT,                   VAAMCFEEVAT,             CHARGEFROM,                     CASE WHEN EXECDATE='E' THEN 1 ELSE TO_NUMBER(EXECDATE) END,
CBXSYNCDATE,                   CBXSYNCBATCHRUNID,       ALERTSVCFLAG,                   PAYOUTSVCFLAG,
POBOCOBOSVCFLAG,               RCMSSVCFLAG,             SADADSVCFLAG,                   RCDSVCFLAG,
DELEGATION,                    TRNFILEAPPRFLAG,         TRNFILEPARTIALFAILUREFLAG,      VERIFIERINTERVENTION,
VASETUPFEECHRGAMT,             VASETUPFEECHRGVATPER,    VACREATIONCHRGAMT,              VACREATIONFEECHRGVATPER,
POBOSETUPFEECHRGAMT,           POBOSETUPFEECHRGVATPER,  SADADBILLPAY,                   GOVTPAY,
INVPAY,                        CAPTURECRN,              CUSTREFNO,                      SCANNINGBY,
PAYADVUPLOAD,                  BENREGAPPR,              DEALREFNO,                      WPSSVCFLAG,
WPSKSA,                        WPSBAH,                  WPSUAE,                         INVPRINTFLAG,
DIGITSIGNCER,                  SECURITYCER,             ENCTYPE,                        AUTOTRIGGER,
 TO_CHAR(TO_DATE(KEYSENDDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                   H2HMAKERID,              REQTYPE,                        TO_CHAR(TO_DATE(CHRGCALCFROM, 'DD-MM-YYYY HH24:MI:SS'),'DD-MON-YY'),
MLTFLAG,                       BULKREGURL,              CUST.CUSTID,                         CUST.GCIFNO,
'P',                           CUST.CRTBY_LOGINID,		CUST.APPBY_LOGINID,		CUST.MDYBY_LOGINID
FROM VT_MIGRATION.STGVTCMCUST CUST
INNER JOIN VT_MIGRATION.STGVTCMCUSTSVCMAP B ON B.CUSTID=CUST.CUSTID
WHERE B.SVCID IN (SELECT SVCID FROM VT_MIGRATION.STGVTSMSVC WHERE MAPSVCID IN (1,6,7,2,110,101,102,5,12,67))
GROUP BY
CUST.CUSTID,                       CIFNO,                   CUST.GCIFNO,                         CORPORATEID,
PARENTCIFNO,                   CUSTNAME,                BANKCODE,                       TO_CHAR(TO_DATE(SUBSCRIBDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),
SUBSHORTNAME,                  SUBLONGNAME,             ADDLINE1,                       ADDLINE2,
ADDLINE3,                      CITY,                    1,                              'AE',
EMAIL,                         MOBILE,                  TELNO,                          FAXNO,
PRICNTFNAME,                   PRICNTMNAME,             PRICNTLNAME,                    PRICNTEMAIL,
PRICNTMOBILE,                  PRICNTTELNO,             SECCNTFNAME,                    SECCNTMNAME,
SECCNTLNAME,                   SECCNTEMAIL,             SECCNTMOBILE,                   SECCNTTELNO,
BNKCNTFNAME,                   BNKCNTMNAME,             BNKCNTLNAME,                    BNKCNTEMAIL,
BNKCNTMOBILE,                  BNKCNTTELNO,             PRICNTMOBCODE,                  PRICNTELTAREACD,
PRICNTTELCNTRYCD,              SECCNTMOBCODE,           SECCNTTELAREACD,                SECCNTTELCNTRYCD,
INCREMENTUPLOAD,               THRESHOLDLIMIT,          RECONEXCBY,                     OTHERBANKRECON,
EIPPSERVICES,                  INTAPPR,                 AUTHZAPR,                       INDESTPATH,
OUTDESTPATH,                   MAXFILESIZE,             PERTRANFILESIZE,                SMSFLAG,
EMAILFLAG,                     IMRFLAG,                 VAFLAG,                         FILEUPLFLAG,
CHRGACCID,                     CUST.STATUS,                  CUST.CRTBY,                          TO_CHAR(TO_DATE(CUST.CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),
CUST.CRTIP,                         TO_CHAR(TO_DATE(CUST.APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                 CUST.APPBY,                          APPIP,
TO_CHAR(TO_DATE(CUST.MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                       CUST.MDYBY,                   CUST.MDYIP,                          CUST.REMARKS,
BNKCNTMOBCODE,                 BNKCNTTELAREACD,         BNKCNTTELCNTRYCD,               EMAILOPTFLAG,
CUSTKEY,                       REGURL,                  INVURL,                         USERURL,
CUST.CHECKERREMARKS,                CHRGFLAG,                SETUPFEECHRGTYPE,               SETUPFEECHRGAMT,
SETUPFEECHRGVATPER,            PARTNERREGFEETYPE,       PARTNERREGFEEAMT,               PARTNERREGFEEPER,
PERTXNFEETYPE,                 PERTXNFEEAMT,            PERTXNFEEVAT,                   VAAMCFEETYPE,
VAAMCFEEAMT,                   VAAMCFEEVAT,             CHARGEFROM,                     CASE WHEN EXECDATE='E' THEN 1 ELSE TO_NUMBER(EXECDATE) END,
CBXSYNCDATE,                   CBXSYNCBATCHRUNID,       ALERTSVCFLAG,                   PAYOUTSVCFLAG,
POBOCOBOSVCFLAG,               RCMSSVCFLAG,             SADADSVCFLAG,                   RCDSVCFLAG,
DELEGATION,                    TRNFILEAPPRFLAG,         TRNFILEPARTIALFAILUREFLAG,      VERIFIERINTERVENTION,
VASETUPFEECHRGAMT,             VASETUPFEECHRGVATPER,    VACREATIONCHRGAMT,              VACREATIONFEECHRGVATPER,
POBOSETUPFEECHRGAMT,           POBOSETUPFEECHRGVATPER,  SADADBILLPAY,                   GOVTPAY,
INVPAY,                        CAPTURECRN,              CUSTREFNO,                      SCANNINGBY,
PAYADVUPLOAD,                  BENREGAPPR,              DEALREFNO,                      WPSSVCFLAG,
WPSKSA,                        WPSBAH,                  WPSUAE,                         INVPRINTFLAG,
DIGITSIGNCER,                  SECURITYCER,             ENCTYPE,                        AUTOTRIGGER,
TO_CHAR(TO_DATE(KEYSENDDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                   H2HMAKERID,              REQTYPE,                         TO_CHAR(TO_DATE(CHRGCALCFROM, 'DD-MM-YYYY HH24:MI:SS'),'DD-MON-YY'),
MLTFLAG,                       BULKREGURL,              CUST.CUSTID,                         CUST.GCIFNO,
'P',                           CUST.CRTBY_LOGINID,		CUST.APPBY_LOGINID,		CUST.MDYBY_LOGINID;

 /* VTCMCUSTCIF */
  INSERT INTO VAM_MIGVTCMCUSTCIF
  (
CIFID,                 CIFNO,                     CUSTID,             STATUS,
CRTBY,                 CRTDATE,                    CRTIP,              APPDATE,
APPBY,                 APPIP,                      MDYDATE,            MDYBY,
MDYIP,                 CIFNAME,                    BRANCH,             PRIMARYCIF,
CBXSYNCDATE,           CBXSYNCBATCHRUNID,          COUNTRYCODE2,       ISDELETED,
GCIFNO,             OLDCIFNO,                  OLDCUSTID,          MIGSTATUSCODE,
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID,              OLDCIFID
)
SELECT
STG.CIFID,                 STG.CIFNO,                      STG.CUSTID,             STG.STATUS,
STG.CRTBY,                 TO_CHAR(TO_DATE(STG.CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                    STG.CRTIP,              TO_CHAR(TO_DATE(STG.APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),
STG.APPBY,                 STG.APPIP,                      TO_CHAR(TO_DATE(STG.MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),            STG.MDYBY,
STG.MDYIP,                 STG.CIFNAME,                    STG.BRANCH,             STG.PRIMARYCIF,
STG.CBXSYNCDATE,           STG.CBXSYNCBATCHRUNID,          'AE',       STG.ISDELETED,
STG.GCIFNO,                STG.CIFNO ,                     STG. CUSTID,            'P',
STG.CRTBY_LOGINID,		STG.APPBY_LOGINID,		STG.MDYBY_LOGINID,      STG.CIFID
FROM VT_MIGRATION.STGVTCMCUSTCIF STG
INNER JOIN VT_MIGRATION.STGVTCMCUSTSVCMAP B ON B.CUSTID=STG.CUSTID
WHERE B.SVCID IN (SELECT SVCID FROM VT_MIGRATION.STGVTSMSVC WHERE MAPSVCID IN (1,6,7,2,110,102,5,12))
GROUP BY
STG.CIFID,                 STG.CIFNO,                      STG.CUSTID,             STG.STATUS,
STG.CRTBY,                 TO_CHAR(TO_DATE(STG.CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                    STG.CRTIP,              TO_CHAR(TO_DATE(STG.APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),
STG.APPBY,                 STG.APPIP,                      TO_CHAR(TO_DATE(STG.MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),            STG.MDYBY,
STG.MDYIP,                 STG.CIFNAME,                    STG.BRANCH,             STG.PRIMARYCIF,
STG.CBXSYNCDATE,           STG.CBXSYNCBATCHRUNID,          'AE',       STG.ISDELETED,
STG.GCIFNO,                STG.CIFNO ,                     STG. CUSTID,            'P',
STG.CRTBY_LOGINID,		STG.APPBY_LOGINID,		STG.MDYBY_LOGINID,      STG.CIFID;
/* VTCMCUSTACC */

  INSERT INTO VAM_MIGVTCMCUSTACC
  (
ACCID,                  ACCNO,                  IBAN,                ACCNAME,
ACCTYPE,                EMAIL,                  CURRENCY,            BRANCHCODE,
ACCSTATUS,              STATUS,                 CRTBY,               CRTDATE,
CRTIP,                  MDYDATE,                MDYBY,               MDYIP,
CHRGFLAG,               IMRCHRGTYPE,            IMRCHRGAMT,          PERUSRCHRGTYPE,
PERUSRCHRGAMT,          SETUPFEECHRGTYPE,       SETUPFEECHRGAMT,     VATCHRGTYPE,
VATCHRGAMT,             SETUPFEECHRGVATPER,     PARTNERREGFEETYPE,   PARTNERREGFEEAMT,
PARTNERREGFEEPER,       PERTXNFEETYPE,          PERTXNFEEAMT,        PERTXNFEEVAT,
VAAMCFEETYPE,           VAAMCFEEAMT,            VAAMCFEEVAT,         CHARGEFROM,
EXECDATE,               CBXSYNCDATE,           CBXSYNCBATCHRUNID,    COUNTRYCODE2,
CLOSURE_FLAG,           NO_CREDIT,             NO_DEBIT,             BLOCKED,
DORMANT,                STOP_PAYMENT,          DELINGUENCY_STATUS,   STPFLAG,
NONSTPFLAG,             AUTOTRIGGER,           ACCCHECK,             HNIFLAG,
SEGMENT,                OLDACCNO,             MIGSTATUSCODE ,        GCIFNO,
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID
)
SELECT
ACCID,                  ACCNO,                  IBAN,                ACCNAME,
'' ACCTYPE,                EMAIL,                  CURRENCY,            BRANCHCODE,
ACCSTATUS,              STATUS,                 CRTBY,               TO_CHAR(TO_DATE(CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),
CRTIP,                  TO_CHAR(TO_DATE(MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                MDYBY,               MDYIP,
CHRGFLAG,               IMRCHRGTYPE,            IMRCHRGAMT,          PERUSRCHRGTYPE,
PERUSRCHRGAMT,          SETUPFEECHRGTYPE,       SETUPFEECHRGAMT,     VATCHRGTYPE,
VATCHRGAMT,             SETUPFEECHRGVATPER,     PARTNERREGFEETYPE,   PARTNERREGFEEAMT,
PARTNERREGFEEPER,       PERTXNFEETYPE,          PERTXNFEEAMT,        PERTXNFEEVAT,
VAAMCFEETYPE,           VAAMCFEEAMT,            VAAMCFEEVAT,         CHARGEFROM,
EXECDATE,               CBXSYNCDATE,           CBXSYNCBATCHRUNID,    'AE',
CLOSURE_FLAG,           NO_CREDIT,             NO_DEBIT,             BLOCKED,
DORMANT,                STOP_PAYMENT,          DELINGUENCY_STATUS,   STPFLAG,
NONSTPFLAG,             AUTOTRIGGER,           ACCCHECK,             HNIFLAG,
SEGMENT,                ACCNO,                 'P',                  GCIFNO,
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID
FROM VT_MIGRATION.STGVTCMCUSTACC
GROUP BY
ACCID,                  ACCNO,                  IBAN,                ACCNAME,
ACCTYPE,                EMAIL,                  CURRENCY,            BRANCHCODE,
ACCSTATUS,              STATUS,                 CRTBY,               TO_CHAR(TO_DATE(CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),
CRTIP,                  TO_CHAR(TO_DATE(MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                MDYBY,               MDYIP,
CHRGFLAG,               IMRCHRGTYPE,            IMRCHRGAMT,          PERUSRCHRGTYPE,
PERUSRCHRGAMT,          SETUPFEECHRGTYPE,       SETUPFEECHRGAMT,     VATCHRGTYPE,
VATCHRGAMT,             SETUPFEECHRGVATPER,     PARTNERREGFEETYPE,   PARTNERREGFEEAMT,
PARTNERREGFEEPER,       PERTXNFEETYPE,          PERTXNFEEAMT,        PERTXNFEEVAT,
VAAMCFEETYPE,           VAAMCFEEAMT,            VAAMCFEEVAT,         CHARGEFROM,
EXECDATE,               CBXSYNCDATE,           CBXSYNCBATCHRUNID,    'AE',
CLOSURE_FLAG,           NO_CREDIT,             NO_DEBIT,             BLOCKED,
DORMANT,                STOP_PAYMENT,          DELINGUENCY_STATUS,   STPFLAG,
NONSTPFLAG,             AUTOTRIGGER,           ACCCHECK,             HNIFLAG,
SEGMENT,                ACCNO,                 'P',                  GCIFNO,
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID
;

/* VTCMCUSTACCCIF */

INSERT INTO VAM_MIGVTCMCUSTACCCIF
(
ACCCIFID,            CUSTID,                   CIFID,                     ACCID,
STATUS,              CRTBY,                    CRTDATE,                   CRTIP,
APPDATE,             APPBY,                    APPIP,                     MDYDATE,
MDYBY,               MDYIP,                    ISDELETED,                 ACCCHECK,
ACCNO,               CIFNO,                    GCIFNO,
OLDACCNO,            OLDCIFNO,                 OLDGCIFNO,                 MIGSTATUSCODE,
CRTBY_LOGINID,		APPBY_LOGINID,		        MDYBY_LOGINID,
OLDCUSTID,          OLDCIFID,                   OLDACCID,           OLDACCCIFID
)
SELECT
ACCCIFID,            STG.CUSTID,                   CIFID,                     ACCID,
STG.STATUS,              STG.CRTBY,                    TO_CHAR(TO_DATE(STG.CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                   STG.CRTIP,
TO_CHAR(TO_DATE(STG.APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),             STG.APPBY,                    STG.APPIP,                     TO_CHAR(TO_DATE(STG.MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),
STG.MDYBY,               STG.MDYIP,                    ISDELETED,                 ACCCHECK,
ACCNO,               CIFNO,                    STG.GCIFNO,
ACCNO,               CIFNO,                    STG.GCIFNO,                    'P',
STG.CRTBY_LOGINID,		STG.APPBY_LOGINID,		STG.MDYBY_LOGINID,
STG.CUSTID,             CIFID,              ACCID, ACCCIFID
FROM VT_MIGRATION.STGVTCMCUSTACCCIF STG
INNER JOIN VT_MIGRATION.STGVTCMCUSTSVCMAP B ON B.CUSTID=STG.CUSTID
WHERE B.SVCID IN (SELECT SVCID FROM VT_MIGRATION.STGVTSMSVC WHERE MAPSVCID IN (1,6,7,2,110,102,5,12))
GROUP BY
ACCCIFID,            STG.CUSTID,                   CIFID,                     ACCID,
STG.STATUS,              STG.CRTBY,                    TO_CHAR(TO_DATE(STG.CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                   STG.CRTIP,
TO_CHAR(TO_DATE(STG.APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),             STG.APPBY,                    STG.APPIP,                     TO_CHAR(TO_DATE(STG.MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),
STG.MDYBY,               STG.MDYIP,                    ISDELETED,                 ACCCHECK,
ACCNO,               CIFNO,                    STG.GCIFNO,
ACCNO,               CIFNO,                    STG.GCIFNO,                    'P',
STG.CRTBY_LOGINID,		STG.APPBY_LOGINID,		STG.MDYBY_LOGINID,
STG.CUSTID,             CIFID,              ACCID, ACCCIFID;

/* VTCMCUSTPRDMAP */

INSERT INTO VAM_MIGVTCMCUSTPRDMAP
(
CUSTID	,                    SVCID	,                  STATUS	,                   REMARKS	,
CRTBY	,                    CRTDATE	,              CRTIP	,                   APPBY	,
APPDATE	,                    MDYBY	,                  MDYDATE,                     MDYIP	,
CHECKERREMARKS	,             PRDID,                   GCIFNO,                      MIGSTATUSCODE,
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID,OLDCUSTID
)
SELECT
CUSTID	,                    SVCID	,                  STATUS	,                   REMARKS	,
CRTBY	,                    TO_CHAR(TO_DATE(CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,              CRTIP	,                   APPBY	,
TO_CHAR(TO_DATE(APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,                    MDYBY	,                  TO_CHAR(TO_DATE(MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                     MDYIP	,
CHECKERREMARKS	,
CASE 
WHEN SVCID=1 THEN '8' 
WHEN SVCID=2 THEN '68'
WHEN SVCID=5 THEN '67'
WHEN SVCID=6 THEN '16' 
WHEN SVCID=7 THEN '18' 
WHEN SVCID=12 THEN '21'
WHEN SVCID=110 THEN '15'
ELSE TO_CHAR(SVCID) END AS PRDID,
GCIFNO,                     'P',
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID,CUSTID
FROM VT_MIGRATION.STGVTCMCUSTSVCMAP
WHERE SVCID IN (SELECT MAPSVCID FROM VT_MIGRATION.STGVTSMSVC WHERE MAPSVCID IN (1,6,7,2,110,102,5,12)) ;
--WHERE SVCID=1;

/* VTCMCUSTSUBPRDMAP */
/*SUBPRDMAP*/


INSERT INTO VAM_MIGVTCMCUSTSUBPRDMAP
(
CUSTID	,                    SVCID	,                  STATUS	,                   REMARKS	,
CRTBY	,                    CRTDATE	,              CRTIP	,                   APPBY	,
APPDATE	,                    MDYBY	,                  MDYDATE,                     MDYIP	,
CHECKERREMARKS	,             PRDID,                   GCIFNO,                      MIGSTATUSCODE,
CRTBY_LOGINID,		        APPBY_LOGINID,		    MDYBY_LOGINID,                  OLDCUSTID,
SUBPRDMAPID
)
SELECT
CUSTID	,                    SVCID	,                  STATUS	,                   REMARKS	,
CRTBY	,                    TO_CHAR(TO_DATE(CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,              CRTIP	,                   APPBY	,
TO_CHAR(TO_DATE(APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,                    MDYBY	,                  TO_CHAR(TO_DATE(MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                     MDYIP	,
CHECKERREMARKS	,             
CASE 
WHEN SVCID=1 THEN '8' 
WHEN SVCID=5 THEN '67'
WHEN SVCID=6 THEN '16' 
WHEN SVCID=7 THEN '18' 
WHEN SVCID=12 THEN '21' 
WHEN SVCID=110 THEN '15' 
WHEN SVCID=67 THEN '8'
WHEN SVCID=2 THEN '68'
ELSE TO_CHAR(SVCID) END AS PRDID,                    GCIFNO,                     'P',
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID,CUSTID,
CASE 
WHEN SVCID=67  THEN '587' 
WHEN SVCID=1  THEN '579'  
WHEN SVCID=102  THEN '580'
ELSE TO_CHAR(SVCID) END AS SUBPRDMAPID
FROM VT_MIGRATION.STGVTCMCUSTSVCMAP
WHERE SVCID IN (SELECT MAPSVCID FROM VT_MIGRATION.STGVTSMSVC WHERE MAPSVCID IN (1,6,7,2,102,5,12))
GROUP BY
CUSTID	,                    SVCID	,                  STATUS	,                   REMARKS	,
CRTBY	,                    TO_CHAR(TO_DATE(CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,              CRTIP	,                   APPBY	,
TO_CHAR(TO_DATE(APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,                    MDYBY	,                  TO_CHAR(TO_DATE(MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                     MDYIP	,
CHECKERREMARKS	,             CASE WHEN SVCID=1 THEN '8' WHEN SVCID=5 THEN '67'
             WHEN SVCID=6 THEN '16' WHEN SVCID=7 THEN '18' WHEN SVCID=12 THEN '21' WHEN SVCID=110 THEN '15' WHEN SVCID=67 THEN '8'
             WHEN SVCID=2 THEN '68' ELSE TO_CHAR(SVCID) END,                     GCIFNO,                     'P',
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID,CUSTID,
CASE WHEN SVCID=67  THEN '587' WHEN SVCID=1  THEN '579' WHEN SVCID=102  THEN '580' ELSE TO_CHAR(SVCID) END ;

/*CARDS SUBPRDMAP*/


INSERT INTO VAM_MIGVTCMCUSTSUBPRDMAP
(
CUSTID	,                    SVCID	,                  STATUS	,                   REMARKS	,
CRTBY	,                    CRTDATE	,              CRTIP	,                   APPBY	,
APPDATE	,                    MDYBY	,                  MDYDATE,                     MDYIP	,
CHECKERREMARKS	,             PRDID,                   GCIFNO,                      MIGSTATUSCODE,
CRTBY_LOGINID,		        APPBY_LOGINID,		    MDYBY_LOGINID,                  OLDCUSTID,
SUBPRDMAPID
)
SELECT 
B.CUSTID	,                    B.SVCID	,                  B.STATUS	,                   B.REMARKS	,
B.CRTBY	,                    TO_CHAR(TO_DATE(B.CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,              B.CRTIP	,                   B.APPBY	,
TO_CHAR(TO_DATE(B.APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,  
B.MDYBY	,             
TO_CHAR(TO_DATE(B.MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                     B.MDYIP	,
B.CHECKERREMARKS	,15 AS PRDID,                    GCIFNO,                     'P',
B.CRTBY_LOGINID,		B.APPBY_LOGINID,		B.MDYBY_LOGINID,B.CUSTID,
A.TRNPRDID AS SUBPRDID
FROM VT_COB.VTSMTRNPRD A
CROSS JOIN VAM_MIGVTCMCUSTPRDMAP B WHERE B.SVCID=110 AND A.CUSTPRDID=15
GROUP BY
B.CUSTID	,                    B.SVCID	,                  B.STATUS	,                   B.REMARKS	,
B.CRTBY	,                    TO_CHAR(TO_DATE(B.CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,              B.CRTIP	,                   B.APPBY	,
TO_CHAR(TO_DATE(B.APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,  
B.MDYBY	,             
TO_CHAR(TO_DATE(B.MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                     B.MDYIP	,
B.CHECKERREMARKS	,15,                    GCIFNO,                     'P',
B.CRTBY_LOGINID,		B.APPBY_LOGINID,		B.MDYBY_LOGINID,B.CUSTID,
A.TRNPRDID;

/*BUDGET SETUP SUBPRDMAP*/

INSERT INTO VAM_MIGVTCMCUSTSUBPRDMAP
(
CUSTID	,                    SVCID	,                  STATUS	,                   REMARKS	,
CRTBY	,                    CRTDATE	,              CRTIP	,                   APPBY	,
APPDATE	,                    MDYBY	,                  MDYDATE,                     MDYIP	,
CHECKERREMARKS	,             PRDID,                   GCIFNO,                      MIGSTATUSCODE,
CRTBY_LOGINID,		        APPBY_LOGINID,		    MDYBY_LOGINID,                  OLDCUSTID,
SUBPRDMAPID
)
SELECT
CUSTID	,                    1,                  'A'	,                   REMARKS	,
CRTBY	,                    TO_CHAR(TO_DATE(CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,              CRTIP	,                   APPBY	,
TO_CHAR(TO_DATE(APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,                    MDYBY	,                  TO_CHAR(TO_DATE(MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                     MDYIP	,
CHECKERREMARKS	,8 AS PRDID,                    GCIFNO,                     'P',
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID,CUSTID,
587 AS SUBPRDMAPID
FROM VT_MIGRATION.STGVTCMCUST
WHERE GCIFNO IN(
 SELECT DISTINCT C.GCIFNO FROM VT_MIGRATION.STGVTCMCUSTUSRACCENTITLE A
 INNER JOIN VT_MIGRATION.STGVTAMPCUSER B ON B.USERID = A.USERID
 INNER JOIN VT_MIGRATION.STGVTCMCUST C ON C.CUSTID = B.ENTITYID
 WHERE A.SVCID=67);

/* VTCMCUSTSUBPRDCONFIG */
INSERT INTO VAM_MIGVTCMCUSTSUBPRDCONFIG
(
CUSTID	,               SVCID	,               SVCCONFIGID	,               VALUE	,
STATUS	,               REMARKS	,               CRTBY	,                  CRTDATE	,
CRTIP	,               APPBY	,              APPDATE	,                 MDYBY	,
MDYDATE	,             MDYIP	,               CHECKERREMARKS	,           MIGSTATUSCODE	,
MIGSTATUSDESC	,       ISMIG	,               BATCHRUNID	,               GCIFNO	,
CIFNO	,               ACCNO	,               CIFID	,                   SVCCNFNAME	,
PRDID	,               SUBPRDID	,           SUBPRDCONFIGID,
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID,OLDCUSTID
)

SELECT
CUSTID	,                        SVCID	,                    SVCCONFIGID,                           CASE WHEN VALUE='API' THEN 'Y' WHEN SVCID=110 THEN 'N' ELSE VALUE END AS VALUE	,
STATUS	,                        REMARKS	,                 CRTBY	,                           TO_CHAR(TO_DATE(CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,
CRTIP	,                        APPBY	,                     TO_CHAR(TO_DATE(APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,                       MDYBY	,
TO_CHAR(TO_DATE(MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,                        MDYIP	,                     CHECKERREMARKS,
'P', '','', '', GCIFNO,
'','','','',
CASE WHEN SVCID=1 THEN '8' WHEN SVCID=5 THEN '67'
             WHEN SVCID=6 THEN '16' WHEN SVCID=7 THEN '18' WHEN SVCID=12 THEN '21'
             WHEN SVCID=110 THEN '15' WHEN SVCID=67 THEN '8'
             WHEN SVCID=2 THEN '68' ELSE TO_CHAR(SVCID) END AS PRDID,
             CASE WHEN SVCID=67  THEN '587' WHEN SVCID=1  THEN '579' WHEN SVCID=110  THEN '581' ELSE TO_CHAR(SVCID) END AS SUBPRDID ,
              CASE WHEN SVCCONFIGID=1 THEN 132
             WHEN SVCCONFIGID=12 THEN 133
             WHEN SVCCONFIGID=13 THEN 134
             WHEN SVCCONFIGID=11 THEN 186
             WHEN SVCID=102 THEN 136
             WHEN SVCID=101 THEN 137
             ELSE SVCCONFIGID END
                AS SUBPRDCONFIGID,

CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID, CUSTID
FROM VT_MIGRATION.STGVTCMCUSTSVCCONFIG
WHERE SVCID IN (SELECT SVCID FROM VT_MIGRATION.STGVTSMSVC WHERE SVCID IN (1,6,7,2,110,101,102,5,12,67))
GROUP BY
CUSTID	,                        SVCID	,                    SVCCONFIGID,                           VALUE	,
STATUS	,                        REMARKS	,                 CRTBY	,                           TO_CHAR(TO_DATE(CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,
CRTIP	,                        APPBY	,                     TO_CHAR(TO_DATE(APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,                       MDYBY	,
TO_CHAR(TO_DATE(MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,                        MDYIP	,                     CHECKERREMARKS,
'P', '','', '', GCIFNO,
'','','','',
CASE WHEN SVCID=1 THEN '8' WHEN SVCID=5 THEN '67'
             WHEN SVCID=6 THEN '16' 
             WHEN SVCID=7 THEN '18' 
             WHEN SVCID=12 THEN '21' 
             WHEN SVCID=110 THEN '15'
             WHEN SVCID=67 THEN '8'
             WHEN SVCID=2 THEN '68' ELSE TO_CHAR(SVCID) END,
             CASE WHEN SVCID=67  THEN '587' ELSE TO_CHAR(SVCID) END  ,'',
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID, CUSTID,
CASE WHEN SVCID=67  THEN '587' 
WHEN SVCID=1  THEN '579' ELSE TO_CHAR(SVCID) END , 
CASE WHEN SVCCONFIGID=1 THEN 132
             WHEN SVCCONFIGID=12 THEN 133
             WHEN SVCCONFIGID=13 THEN 134
             WHEN SVCCONFIGID=11 THEN 132
             WHEN SVCID=102 THEN 136
             WHEN SVCID=101 THEN 137
                 ELSE SVCCONFIGID END,
                CASE WHEN VALUE='API' THEN 'Y' ELSE VALUE END
                ;

INSERT INTO VAM_MIGVTCMCUSTSUBPRDCONFIG
(
CUSTID	,               SUBPRDID	,               SUBPRDCONFIGID	,               VALUE	,MIGSTATUSCODE,GCIFNO
)
SELECT
CUSTID	,                    579	,                  135	as SUBPRDCONFIGID,                   'PartFail'	,'P',GCIFNO
FROM VAM_MIGVTCMCUST;



INSERT INTO VAM_MIGVTCMCUSTSUBPRDCONFIG
(
CUSTID	,               SUBPRDID	,               SUBPRDCONFIGID	,               VALUE	,MIGSTATUSCODE,GCIFNO,STATUS
)
SELECT
CUSTID	,                    580	,                  136	as SUBPRDCONFIGID,                  'Y'	,'P',GCIFNO,STATUS
FROM VT_MIGRATION.STGVTCMCUSTSVCMAP WHERE SVCID=102;


INSERT INTO VAM_MIGVTCMCUSTSUBPRDCONFIG
(
CUSTID	,               SUBPRDID	,               SUBPRDCONFIGID	,               VALUE	,MIGSTATUSCODE,GCIFNO,STATUS
)
SELECT
CUSTID	,                    580	,                  137	as SUBPRDCONFIGID,                  'Allowed'	,'P',GCIFNO,STATUS
FROM VT_MIGRATION.STGVTCMCUSTSVCMAP WHERE SVCID=101;

/* VTCMCUSTPRDACCCONFIG */
INSERT INTO VAM_MIGVTCMCUSTPRDACCCONFIG
(
CUSTID	,                        SVCID	,                     SVCCONFIGID	,                   VALUE	,
STATUS	,                        REMARKS	,                 CRTBY	,                           CRTDATE	,
CRTIP	,                        APPBY	,                     APPDATE	,                       MDYBY	,
MDYDATE	,                        MDYIP	,                     GCIFNO,                           CIFNO,
CHECKERREMARKS,                  MIGSTATUSCODE,               ACCNO,                            CIFID,
PRDID,                           OLDCIFID,                    ACCID,                            OLDACCID,
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID,OLDCUSTID
)

SELECT
CUSTID	,                        SVCID	,                     SVCCONFIGID	,                   VALUE	,
STATUS	,                        REMARKS	,                 CRTBY	,                           TO_CHAR(TO_DATE(CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,
CRTIP	,                        APPBY	,                     TO_CHAR(TO_DATE(APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,                       MDYBY	,
TO_CHAR(TO_DATE(MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,                        MDYIP	,                     GCIFNO,                           CIFNO,
CHECKERREMARKS,                  'P',                         ACCNO,                            CIFID,
PRDID,                          CIFID,                      ACCID, ACCID AS OLDACCID,
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID,CUSTID
FROM VT_MIGRATION.STGVTCMCUSTSVCACCCONFIG
WHERE SVCID IN (SELECT SVCID FROM VT_MIGRATION.STGVTSMSVC WHERE MAPSVCID IN (1,6,7,2,110,102,5,12))
GROUP BY
CUSTID	,                        SVCID	,                     SVCCONFIGID	,                   VALUE	,
STATUS	,                        REMARKS	,                 CRTBY	,                           TO_CHAR(TO_DATE(CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,
CRTIP	,                        APPBY	,                     TO_CHAR(TO_DATE(APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,                       MDYBY	,
TO_CHAR(TO_DATE(MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,                        MDYIP	,                     GCIFNO,                           CIFNO,
CHECKERREMARKS,                  'P',                         ACCNO,                            CIFID,
PRDID,ACCID,
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID,CUSTID;


COMMIT;
DBMS_OUTPUT.PUT_LINE('PROCEDURE COMPLETED AT '||TO_CHAR(SYSDATE,'DD-MM-YY HH24:MI:SS'));

  EXCEPTION
	WHEN NO_DATA_FOUND THEN
	BEGIN
		OUT_STATUSCODE :='83';
		OUT_STATUSDESC :=SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
        DBMS_OUTPUT.PUT_LINE('PROCEDURE COMPLETED AT '||TO_CHAR(SYSDATE,'DD-MM-YY HH24:MI:SS'));

		ROLLBACK;
        INSERT INTO VT_COB.VTSMERRLOG(ERRMSG,ERRPROC,ERRDATETIME)
        SELECT OUT_STATUSDESC,'PRC_MIG_CUST_DATAMOVE_VAM',SYSTIMESTAMP FROM dual;
	END;
	WHEN OTHERS THEN
	BEGIN
		OUT_STATUSCODE :='84';
		OUT_STATUSDESC := SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
        DBMS_OUTPUT.PUT_LINE('PROCEDURE COMPLETED AT '||TO_CHAR(SYSDATE,'DD-MM-YY HH24:MI:SS'));

		ROLLBACK;
        INSERT INTO VT_COB.VTSMERRLOG(ERRMSG,ERRPROC,ERRDATETIME)
        SELECT OUT_STATUSDESC,'PRC_MIG_CUST_DATAMOVE_VAM',SYSTIMESTAMP FROM dual;
	END;


END PRC_MIG_CUST_DATAMOVE_VAM;


/


------2 VT_COB----------

create or replace PROCEDURE "PRC_MIG_CUSTUSER_DATAMOVE_VAM"
AS
LV_STATUSDESC VARCHAR2(2000);
BEGIN

/* VTAMPCUSER */

/*
SELECT COUNT(1),'STGVTAMSTPCUSER			' FROM VT_MIGRATION.STGVTAMSTPCUSER			UNION ALL
SELECT COUNT(1),'STGVTAMPCUSER				' FROM VT_MIGRATION.STGVTAMPCUSER			UNION ALL
SELECT COUNT(1),'STGVTAMPCUSRRLEMAP			' FROM VT_MIGRATION.STGVTAMPCUSRRLEMAP       UNION ALL
SELECT COUNT(1),'STGVTCMCUSTUSRCNTRYMAP		' FROM VT_MIGRATION.STGVTCMCUSTUSRCNTRYMAP   UNION ALL
SELECT COUNT(1),'STGVTCMCUSTUSRENTITLE		' FROM VT_MIGRATION.STGVTCMCUSTUSRENTITLE    UNION ALL
SELECT COUNT(1),'STGVTCMCUSTUSRACCENTITLE 	' FROM VT_MIGRATION.STGVTCMCUSTUSRACCENTITLE UNION ;
*/

INSERT INTO VAM_MIGVTAMSTPCUSER
(
STUSERID,                APPID,                GCIFNO,                CUSTNAME,
ONBOARDFLAG,             LOGINID,              FIRSTNAME,             MIDDLENAME,
LASTNAME,                DISPLAYNAME,          STREETADDRESS,         CITY,
STATE,                   PINNO,                COUNTRY,               EMAIL,
MOBCODE,                 MOBILENO,             CONTACTNO,             LANDCODE,
LANDAREACODE,            LANDLINENO,           EMPID,                 DESIGNATION,
DOB,                     PASSWORD,             LOCKSTATUS,            ACCEXPIRYDATE,
LASTLOGINDATE,           LASTPWDCHANGEDATE,    LASTLOCKEDOUTDATE,     FAILEDPWDATTEMPTCOUNT,
ISPWDCHANGEREQ,          ISDELETED,            ACSTATUS,              STATUS,
ENTITYTYPE,              ENTITYID,             VAACCNO,               DEFLVID,
PWDEXPDATE,              PWDNOTIFDATE,         HLEVELID,              HLEVELCODE,
HLOCID,                  LOGINTOKEN,           LOGINACTTOKEN,         TOKENEXPDATE,
LOGINFLAG,               LOGINDATE,             ISOTPREQ,              REMARKS,
 CRTBY,                  CRTDATE,              CRTIP,                 APPBY,
APDATE,                  MDYBY,                MDYDATE,               MDYIP,
VASCOTOKEN,              ACCOUNTNO,            PARTNERUSERCODE,       EMAILSENDFLAG,
SDNVERFLAG,              SDNRATING,            CHECKERREMARKS,        PWDSENDDATE,
LOGINACTFLAG,            REQACTTIME,           AUTHZSETUP,            LASTSDNCHECK,
VAMAPFLAG,               CUSTREFNO,            REQTYPE,               SECURETOKENNO,
USERTYPE,                BATCHRUNID,           APPENTFLAG,            MDYENTFLAG,
ENTITYFLAG,              LASTSUCCATMPT,        USERNUMBER,            TRANSACTIONID,
UPDATEDFLAG,             OLDUSERID,            OLDLOGINID,
MIGSTATUSCODE,             MIGSTATUSDESC,
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID
)

SELECT
STUSERID,                APPID,                GCIFNO,                CUSTNAME,
ONBOARDFLAG,             LOGINID,              FIRSTNAME,             MIDDLENAME,
LASTNAME,                DISPLAYNAME,          STREETADDRESS,         CITY,
STATE,                   PINNO,                COUNTRY,               EMAIL,
MOBCODE,                 MOBILENO,             CONTACTNO,             LANDCODE,
LANDAREACODE,            LANDLINENO,           EMPID,                 DESIGNATION,
 TO_CHAR(TO_DATE(DOB,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY') ,                     PASSWORD,             LOCKSTATUS,            TO_CHAR(TO_DATE(ACCEXPIRYDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),
TO_CHAR(TO_DATE(LASTLOGINDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY') ,          TO_CHAR(TO_DATE(LASTPWDCHANGEDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')         	,  TO_CHAR(TO_DATE(LASTLOCKEDOUTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')      	,     FAILEDPWDATTEMPTCOUNT,
ISPWDCHANGEREQ,          ISDELETED,            ACSTATUS,              STATUS,
ENTITYTYPE,              ENTITYID,             VAACCNO,               DEFLVID,
TO_CHAR(TO_DATE(PWDEXPDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),              TO_CHAR(TO_DATE(PWDNOTIFDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),         HLEVELID,              HLEVELCODE,
HLOCID,                  LOGINTOKEN,           LOGINACTTOKEN,         TO_CHAR(TO_DATE(TOKENEXPDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),
LOGINFLAG,               TO_CHAR(TO_DATE(LOGINDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),            ISOTPREQ,              REMARKS,
 CRTBY,                  TO_CHAR(TO_DATE(CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),              CRTIP,                 APPBY,
TO_CHAR(TO_DATE(APDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                  MDYBY,                TO_CHAR(TO_DATE(MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),               MDYIP,
VASCOTOKEN,              ACCOUNTNO,            PARTNERUSERCODE,       EMAILSENDFLAG,
SDNVERFLAG,              SDNRATING,            CHECKERREMARKS,        TO_CHAR(TO_DATE(PWDSENDDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),
LOGINACTFLAG,            TO_CHAR(TO_DATE(REQACTTIME,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),           AUTHZSETUP,             TO_CHAR(TO_DATE(LASTSDNCHECK,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),
VAMAPFLAG,               CUSTREFNO,            CASE WHEN REQTYPE='IBANKING ACTIVATE' THEN 'IA'
WHEN REQTYPE='IBANKING DEACTIVATE' THEN 'ID' ELSE REQTYPE END,               SECURETOKENNO,
USERTYPE,                BATCHRUNID,           APPENTFLAG,            MDYENTFLAG,
ENTITYFLAG,              LASTSUCCATMPT,        USERNUMBER,            TRANSACTIONID,
UPDATEDFLAG,             STUSERID,             LOGINID,
'P','',
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID
FROM   VT_MIGRATION.STGVTAMSTPCUSER;

INSERT INTO VAM_MIGVTAMPCUSER
(
USERID,                      APPID	,                  LOGINID	,                   FIRSTNAME	,
MIDDLENAME	,                LASTNAME	,              DISPLAYNAME	,               STREETADDRESS	,
CITY	,                    STATE	,                  PINNO	,                   COUNTRY	,
EMAIL	,                    MOBCODE	,              MOBILENO	,                   CONTACTNO	,
LANDCODE	,                LANDAREACODE	,          LANDLINENO	,               EMPID	,
DESIGNATION	,                DOB	,                  PASSWORD	,                   LOCKSTATUS	,
ACCEXPIRYDATE	,            LASTLOGINDATE	,          LASTPWDCHANGEDATE	,       LASTLOCKEDOUTDATE	,
FAILEDPWDATTEMPTCOUNT,       ISPWDCHANGEREQ	,          ISDELETED	,               ACSTATUS	,
STATUS,                      ENTITYTYPE	,              ENTITYID	,                   VAACCNO	,
DEFLVID	,                    PWDEXPDATE	,              PWDNOTIFDATE	,               HLEVELID	,
HLEVELCODE	,                HLOCID	,                  LOGINTOKEN	,               LOGINACTTOKEN	,
TOKENEXPDATE	,            LOGINFLAG	,              LOGINDATE	,               ISOTPREQ	,
REMARKS	,                    CRTBY	,                  CRTDATE	,                   CRTIP	,
APPBY	,                    APDATE	,                  MDYBY	,                   MDYDATE	,
MDYIP	,                    VASCOTOKEN	,              ACCOUNTNO,                   PARTNERUSERCODE	,
EMAILSENDFLAG	,            SDNVERFLAG	,              SDNRATING	,               CHECKERREMARKS	,
PWDSENDDATE	,                LOGINACTFLAG	,          REQACTTIME	,               AUTHZSETUP	,
LASTSDNCHECK	,            VAMAPFLAG	,              CUSTREFNO	,               REQTYPE	,
SECURETOKENNO	,            USERTYPE	,              BATCHRUNID	,               APPENTFLAG	,
MDYENTFLAG	,                ENTITYFLAG	,              USERNUMBER	,               LASTSUCCATMPT,
APPENTTYPE,                  OLDUSERID,                OLDLOGINID,                  GCIFNO,
MIGSTATUSCODE,
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID
)
SELECT
USERID	,                    APPID	,                  LOGINID	,                   FIRSTNAME	,
MIDDLENAME	,                LASTNAME	,              DISPLAYNAME	,               STREETADDRESS	,
CITY	,                    STATE	,                  PINNO	,                   COUNTRY	,
EMAIL	,                    MOBCODE	,              MOBILENO	,                   CONTACTNO	,
LANDCODE	,                LANDAREACODE	,          LANDLINENO	,               EMPID	,
DESIGNATION	,                DOB	,                  PASSWORD	,                   LOCKSTATUS	,
 TO_CHAR(TO_DATE(ACCEXPIRYDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,  TO_CHAR(TO_DATE(LASTLOGINDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')           	, TO_CHAR(TO_DATE(LASTPWDCHANGEDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')         	,  TO_CHAR(TO_DATE(LASTLOCKEDOUTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')      	,
FAILEDPWDATTEMPTCOUNT,       ISPWDCHANGEREQ	,          ISDELETED	,               ACSTATUS	,
STATUS,                      ENTITYTYPE	,              ENTITYID	,                   VAACCNO	,
DEFLVID	,                   TO_CHAR(TO_DATE(PWDEXPDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY') 	,       TO_CHAR(TO_DATE(PWDNOTIFDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')        	,               HLEVELID	,
HLEVELCODE	,                HLOCID	,                  LOGINTOKEN	,               LOGINACTTOKEN	,
TOKENEXPDATE	,            LOGINFLAG	,              TO_CHAR(TO_DATE(LOGINDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,               ISOTPREQ	,
REMARKS	,                    CRTBY	,                  TO_CHAR(TO_DATE(CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,                   CRTIP	,
APPBY	,                    TO_CHAR(TO_DATE(APDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,                  MDYBY	,                   TO_CHAR(TO_DATE(MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,
MDYIP	,                    VASCOTOKEN	,              ACCOUNTNO,                   PARTNERUSERCODE	,
EMAILSENDFLAG	,            SDNVERFLAG	,              SDNRATING	,               CHECKERREMARKS	,
TO_CHAR(TO_DATE(PWDSENDDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,                LOGINACTFLAG	,          TO_CHAR(TO_DATE(REQACTTIME,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY') 	,               AUTHZSETUP	,
LASTSDNCHECK	,            VAMAPFLAG	,              CUSTREFNO	,                CASE WHEN REQTYPE='IBANKING ACTIVATE' THEN 'IA'
WHEN REQTYPE='IBANKING DEACTIVATE' THEN 'ID' ELSE REQTYPE END,
SECURETOKENNO	,            USERTYPE	,              BATCHRUNID	,               APPENTFLAG	,
MDYENTFLAG	,                ENTITYFLAG	,              USERNUMBER	,               LASTSUCCATMPT,
APPENTTYPE,                  USERID,                   LOGINID,                     GCIFNO,
'P',
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID
FROM VT_MIGRATION.STGVTAMPCUSER;

/*VTAMPCUSRRLEMAP*/

INSERT INTO VAM_MIGVTAMPCUSRRLEMAP
(
USERID, ROLEID, STATUS, ROLENAME,LOGINID, MIGSTATUSCODE,GCIFNO
)
SELECT
USERID, 100598, STATUS, 'VAM Customer AllRole 001',LOGINID,  'P', GCIFNO
FROM VT_MIGRATION.STGVTAMPCUSER;

/* VTCMCUSTUSRCNTRYMAP */

INSERT INTO VAM_MIGVTCMCUSTUSRCNTRYMAP
(
 USERID,         		CUSTID,         GCIFNO
,COUNTRYCODE2,			STATUS,         CRTBY,         CRTDATE
,CRTIP,         		APPBY,         	APPDATE,       APPIP
,MDYBY,         		MDYDATE,        MDYIP,         LOGINID
,GCIF,                  MIGSTATUSCODE,
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID
)
SELECT
 USERID,         		CUSTID,         GCIFNO
,COUNTRYCODE2,			STATUS,         CRTBY,         TO_CHAR(TO_DATE(CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')
,CRTIP,         		APPBY,         	TO_CHAR(TO_DATE(APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),       APPIP
,MDYBY,         		TO_CHAR(TO_DATE(MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),        MDYIP,         LOGINID
,GCIF,                  'P',
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID
FROM VT_MIGRATION.STGVTCMCUSTUSRCNTRYMAP;

/* VTCMCUSTUSRPRDMAP  TAKING ONLY VAM SERVICES*/
INSERT INTO VAM_MIGVTCMCUSTUSRPRDMAP
(
USERID	,                          MENUID	,                     MODULEID	,               STATUS	,
CRTBY	,                          CRTDATE	,                    /* CRTIP	*/                   APPBY	,
APPDATE	,                          MDYBY	,                     MDYDATE	,               MDYIP	,
ISDELETED	,                      REMARKS	,                     CHECKERREMARKS	,       BILLSELFAUTH	,
ADHOCBILL	,                      SAVEDBILL	,                 PAYEESELFAUTH	,           UPLBILL	,
UPLGOVTBILL	,                      FUNCID	,                     SVCID	,                   PARTNERSELFAUTH	,
PARTUSERSELFFAUTH	,              PAYERIDSELFAUTH	,             BNFCRYSELFAUTH,           GCIFNO,
OLDUSERID,                         PRDID,                          MIGSTATUSCODE,           LOGINID,
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID
)

SELECT
USERID	,                          MENUID	,                     MODULEID	,               ENT.STATUS	,
ENT.CRTBY	,                          TO_CHAR(TO_DATE(ENT.CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,                     /*CRTIP */	                  APPBY	,
TO_CHAR(TO_DATE(APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,                          MDYBY	,                     TO_CHAR(TO_DATE(MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,               MDYIP	,
ISDELETED	,                      REMARKS	,                     CHECKERREMARKS	,       BILLSELFAUTH	,
ADHOCBILL	,                      SAVEDBILL	,                 PAYEESELFAUTH	,           UPLBILL	,
UPLGOVTBILL	,
/*CASE
WHEN FUNCID=389  THEN 387
WHEN FUNCID=387  THEN 385
WHEN FUNCID=391  THEN 391
WHEN FUNCID=390  THEN 390
WHEN FUNCID=388  THEN 386
WHEN FUNCID=773  THEN 384
WHEN FUNCID=386  THEN 2042
WHEN FUNCID=392  THEN 392
WHEN FUNCID=393  THEN 393
WHEN FUNCID=1167  THEN 1849
WHEN FUNCID=440  THEN 440
WHEN FUNCID=1171  THEN 1171
WHEN FUNCID=1183  THEN 1183
WHEN FUNCID=1190  THEN 3103
WHEN FUNCID=1322  THEN 1850 END */
ENT.FUNCID AS FUNCID,
ENT.SVCID	,                   PARTNERSELFAUTH	,
PARTUSERSELFFAUTH	,              PAYERIDSELFAUTH	,             BNFCRYSELFAUTH,           GCIFNO,
USERID,                      CASE WHEN MAPSVCID =101 THEN 65
WHEN MAPSVCID =1 AND ENT.FUNCID=1190 THEN 66 WHEN MAPSVCID IN(1,2) THEN 8 WHEN MAPSVCID=110 THEN 15 
WHEN MAPSVCID=7 THEN 18 WHEN MAPSVCID=6 THEN 16 WHEN MAPSVCID=5 THEN 67  END AS PRDID   ,                     'P'           ,           LOGINID,
ENT.CRTBY_LOGINID,		ENT.APPBY_LOGINID,		ENT.MDYBY_LOGINID
FROM VT_MIGRATION.STGVTCMCUSTUSRENTITLE ENT
INNER JOIN VT_MIGRATION.STGVTSMSVC SVC ON ENT.SVCID=SVC.SVCID
WHERE ENT.SVCID IN (SELECT SVCID FROM VT_MIGRATION.STGVTSMSVC WHERE MAPSVCID IN (1,6,7,2,110,101,102,5,12)) AND FUNCID NOT IN (733,734,1191);
--WHERE SVCID IN(1,22,66,68,90,69);

INSERT INTO VAM_MIGVTCMCUSTUSRPRDACCMAP
(
USERID,                   ACCID,                ACCFLAG	,                 SISETUP,
SIMONITOR,	              SIMANSUB	,           DELESETUP	,             DELEAPP,
REVOKEDELE,               INVUPL,               INVPAY,                   GOVTPAY,
TRNHISTORY,               SADADBILLPAY,         BILLERREG,	              BILLERREGUPL,
REMARKS	,                 ISDELETED	,           STATUS	,                 CRTBY,
CRTDATE,                  CRTIP	,               APPBY,	                  APPDATE,
MDYBY	,                 MDYDATE	,           MDYIP	,                 CHECKERREMARKS,
PAYERSEQID,               UPLWPSKSA	,           UPLWPSBHA	,             UPLWPSUAE,
APPROVE	,                 BILLMAKERPAY	,       BILLREGBULK	,             BILLREGAPP,
BILLREGSELFAUTH	,         BILLPAYHISTORY	,   BILLAPPPAY	,             GOVTMAKERPAY	,
PAYEEREG	,             PAYEEREGBULKUPL	,   GOVTREGSELFAUTH	,         GOVTPAYHISTORY,
GOVTAPPPAY	,             INVMAKERPAY	,       INVPAYHISTORY	,         INVAPPPAY	,
INVREGSELFAUTH	,         PAYMETHODID,          FUNCID	,                 SVCID	,
VAIBANID,                 VAACCID	,           ACCTYPEFLAG	,             HNIFLAG,
NONHNIFLAG,               OLDUSERID,            ACCNO,                    GCIFNO,
PRDID ,                   CIFID ,               MIGSTATUSCODE,            LOGINID,
CIFNO,
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID, MAPSVCID, OLDMAPSVCID
)
SELECT
USERID,                   ACCID,                ACCFLAG	,                 SISETUP,
SIMONITOR,	              SIMANSUB	,           DELESETUP	,             DELEAPP,
REVOKEDELE,               INVUPL,               INVPAY,                   GOVTPAY,
TRNHISTORY,               SADADBILLPAY,         BILLERREG,	              BILLERREGUPL,
REMARKS	,                 ISDELETED	,           STATUS	,                 CRTBY,
TO_CHAR(TO_DATE(CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                  CRTIP	,               APPBY,	                  TO_CHAR(TO_DATE(APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),
MDYBY	,                 TO_CHAR(TO_DATE(MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,           MDYIP	,                 CHECKERREMARKS,
PAYERSEQID,               UPLWPSKSA	,           UPLWPSBHA	,             UPLWPSUAE,
APPROVE	,                 BILLMAKERPAY	,       BILLREGBULK	,             BILLREGAPP,
BILLREGSELFAUTH	,         BILLPAYHISTORY	,   BILLAPPPAY	,             GOVTMAKERPAY	,
PAYEEREG	,             PAYEEREGBULKUPL	,   GOVTREGSELFAUTH	,         GOVTPAYHISTORY,
GOVTAPPPAY	,             INVMAKERPAY	,       INVPAYHISTORY	,         INVAPPPAY	,
INVREGSELFAUTH	,         PAYMETHODID,
/*CASE
WHEN FUNCID=389  THEN 387
WHEN FUNCID=387  THEN 385
WHEN FUNCID=391  THEN 391
WHEN FUNCID=390  THEN 390
WHEN FUNCID=388  THEN 386
WHEN FUNCID=773  THEN 384
WHEN FUNCID=386  THEN 2042
WHEN FUNCID=392  THEN 392
WHEN FUNCID=393  THEN 393
WHEN FUNCID=1167  THEN 1849
WHEN FUNCID=440  THEN 440
WHEN FUNCID=1171  THEN 1171
WHEN FUNCID=1183  THEN 1183
WHEN FUNCID=1190  THEN 3103
WHEN FUNCID=1322  THEN 1850 ELSE FUNCID END AS FUNCID	, */
NULL AS FUNCID,
SVCID	,
VAIBANID,                 VAACCID	,           ACCTYPEFLAG	,             HNIFLAG,
NONHNIFLAG,               USERID,               ACCNO,                    GCIFNO,
SVCID AS PRDID,                    CIFID ,               'P',                      LOGINID,
CIFNO,
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID,
CASE WHEN MAPSVCID IN(1,2) THEN 8 WHEN MAPSVCID=110 THEN 15 END, MAPSVCID
FROM VT_MIGRATION.STGVTCMCUSTUSRACCENTITLE
WHERE SVCID IN (1,6,7,22,66,67,68,72,73,2,90,52,110,111,112,113,114,115,116,117,118,119,69) AND FUNCID NOT IN (733,734,1191);

/* VTCMCUSTUSRPRDACCFNCMAP */
INSERT INTO VAM_MIGVTCMCUSTUSRPRDACCFNCMAP
(
USERID,                   ACCID,                ACCFLAG	,                 SISETUP,
SIMONITOR,	              SIMANSUB	,           DELESETUP	,             DELEAPP,
REVOKEDELE,               INVUPL,               INVPAY,                   GOVTPAY,
TRNHISTORY,               SADADBILLPAY,         BILLERREG,	              BILLERREGUPL,
REMARKS	,                 ISDELETED	,           STATUS	,                 CRTBY,
CRTDATE,                  CRTIP	,               APPBY,	                  APPDATE,
MDYBY	,                 MDYDATE	,           MDYIP	,                 CHECKERREMARKS,
PAYERSEQID,               UPLWPSKSA	,           UPLWPSBHA	,             UPLWPSUAE,
APPROVE	,                 BILLMAKERPAY	,       BILLREGBULK	,             BILLREGAPP,
BILLREGSELFAUTH	,         BILLPAYHISTORY	,   BILLAPPPAY	,             GOVTMAKERPAY	,
PAYEEREG	,             PAYEEREGBULKUPL	,   GOVTREGSELFAUTH	,         GOVTPAYHISTORY,
GOVTAPPPAY	,             INVMAKERPAY	,       INVPAYHISTORY	,         INVAPPPAY	,
INVREGSELFAUTH	,         PAYMETHODID,          FUNCID	,                 SVCID	,
VAIBANID,                 VAACCID	,           ACCTYPEFLAG	,             HNIFLAG,
NONHNIFLAG,               OLDUSERID,            ACCNO,                    GCIFNO,
MIGSTATUSCODE,            LOGINID,              CIFNO,                    PRDID,
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID,  MAPSVCID, OLDMAPSVCID
)
SELECT
USERID,                   ACCID,                ACCFLAG	,                 SISETUP,
SIMONITOR,	              SIMANSUB	,           DELESETUP	,             DELEAPP,
REVOKEDELE,               INVUPL,               INVPAY,                   GOVTPAY,
TRNHISTORY,               SADADBILLPAY,         BILLERREG,	              BILLERREGUPL,
REMARKS	,                 ISDELETED	,           STATUS	,                 CRTBY,
TO_CHAR(TO_DATE(CRTDATE,  'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),                  CRTIP	,               APPBY,	                  TO_CHAR(TO_DATE(APPDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY'),
MDYBY	,                 TO_CHAR(TO_DATE(MDYDATE, 'YYYY-MM-DD HH24:MI:SS'),'DD-MON-YY')	,           MDYIP	,                 CHECKERREMARKS,
PAYERSEQID,               UPLWPSKSA	,           UPLWPSBHA	,             UPLWPSUAE,
APPROVE	,                 BILLMAKERPAY	,       BILLREGBULK	,             BILLREGAPP,
BILLREGSELFAUTH	,         BILLPAYHISTORY	,   BILLAPPPAY	,             GOVTMAKERPAY	,
PAYEEREG	,             PAYEEREGBULKUPL	,   GOVTREGSELFAUTH	,         GOVTPAYHISTORY,
GOVTAPPPAY	,             INVMAKERPAY	,       INVPAYHISTORY	,         INVAPPPAY	,
INVREGSELFAUTH	,         PAYMETHODID,         

/*CASE
WHEN FUNCID=389  THEN 387
WHEN FUNCID=387  THEN 385
WHEN FUNCID=391  THEN 391
WHEN FUNCID=390  THEN 390
WHEN FUNCID=388  THEN 386
WHEN FUNCID=773  THEN 384
WHEN FUNCID=386  THEN 2042
WHEN FUNCID=392  THEN 392
WHEN FUNCID=393  THEN 393
WHEN FUNCID=1167  THEN 1849
WHEN FUNCID=440  THEN 440
WHEN FUNCID=1171  THEN 1171
WHEN FUNCID=1183  THEN 1183
WHEN FUNCID=1190  THEN 3103
WHEN FUNCID=1322  THEN 1850  ELSE FUNCID END */
FUNCID AS FUNCID,                 SVCID	,
VAIBANID,                 VAACCID	,           ACCTYPEFLAG	,             HNIFLAG,
NONHNIFLAG,               USERID,               ACCNO,                    GCIFNO,
'P',                      LOGINID,              CIFNO,                    PRDID,
CRTBY_LOGINID,		APPBY_LOGINID,		MDYBY_LOGINID,CASE WHEN MAPSVCID IN(1,2) THEN 8 WHEN MAPSVCID=110 THEN 15 END, MAPSVCID
FROM VT_MIGRATION.STGVTCMCUSTUSRACCENTITLE
WHERE SVCID IN (1,6,7,22,66,67,68,72,73,2,90,52,110,111,112,113,114,115,116,117,118,119,69) AND FUNCID NOT IN (733,734,1191);


COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
        BEGIN
            ROLLBACK;

             LV_STATUSDESC := 'E ' || SUBSTR(SQLERRM||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE,1,500);

             DBMS_OUTPUT.PUT_LINE(LV_STATUSDESC);

            RETURN;
        END;

END PRC_MIG_CUSTUSER_DATAMOVE_VAM;

/

------3 VT_COB----------

create or replace PROCEDURE "PRC_MIG_CUSTOMER_VAM" (IN_BATCHRUNID NUMBER,
OUT_STATUSCODE OUT VARCHAR2 ,
 OUT_STATUSDESC OUT VARCHAR2)

AS

    v_STARTTIME TIMESTAMP(3);
    v_ENDTIME TIMESTAMP(3);
    v_TOTCNT NUMBER(10):=0;
    v_SUCCCNT NUMBER(10):=0;
    v_FAILCNT NUMBER(10):=0;
    v_ERRMSG VARCHAR2(4000);
    v_ERRCODE VARCHAR2(100);
    v_ERRPROC VARCHAR2(200);
    v_SESSIONID NUMBER(19);
    CNT_MIGVTCMCUST NUMBER;
    CNT_MIGVTCMCUSTCIF NUMBER;
    CNT_MIGVTCMCUSTACCCIF NUMBER;
    LV_BATCHRUNID NUMBER;

BEGIN

DBMS_OUTPUT.PUT_LINE('PROCEDURE STARTED AT'||TO_CHAR(SYSDATE,'DD-MM-YYYY HH24:MI:SS'));

		v_STARTTIME := SYSDATE;
        LV_BATCHRUNID:=SEQ_MIG_VAM_BATCHRUNID.NEXTVAL;

/*
SELECT COUNT(1),MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTCMCUST'				FROM VAM_MIGVTCMCUST			 GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1),MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTCMCUSTCIF'			FROM VAM_MIGVTCMCUSTCIF          GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1),MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTCMCUSTACC'			FROM VAM_MIGVTCMCUSTACC          GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1),MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTCMCUSTACCCIF'			FROM VAM_MIGVTCMCUSTACCCIF       GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1),MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTCMCUSTPRDMAP'			FROM VAM_MIGVTCMCUSTPRDMAP       GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1),MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTCMCUSTSUBPRDMAP'      FROM VAM_MIGVTCMCUSTSUBPRDMAP    GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1),MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTCMCUSTPRDCONFIG'		FROM VAM_MIGVTCMCUSTPRDCONFIG    GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1),MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTCMCUSTSUBPRDCONFIG'   FROM VAM_MIGVTCMCUSTSUBPRDCONFIG GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1),MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTCMCUSTPRDACCCONFIG'	FROM VAM_MIGVTCMCUSTPRDACCCONFIG GROUP BY MIGSTATUSCODE,MIGSTATUSDESC ;
*/

/*

SELECT COUNT(*),'VTCMCUST'				FROM VT_COB.VTCMCUST 	             WHERE CRTIP='MIGVAM';
SELECT COUNT(*),'VTCMCUSTCIF'			FROM VT_COB.VTCMCUSTCIF              WHERE CRTIP='MIGVAM';
SELECT COUNT(*),'VTCMCUSTACC'			FROM VT_COB.VTCMCUSTACC              WHERE CRTIP='MIGVAM';
SELECT COUNT(*),'VTCMCUSTACCCIF'        FROM VT_COB.VTCMCUSTACCCIF           WHERE CRTIP='MIGVAM';
SELECT COUNT(*),'VTCMCUSTCNTRYMAP'      FROM VT_COB.VTCMCUSTCNTRYMAP         WHERE CRTIP='MIGVAM';
SELECT COUNT(*),'VTCMCUSTPRDMAP'		FROM VT_COB.VTCMCUSTPRDMAP           WHERE CRTIP='MIGVAM';
SELECT COUNT(*),'VTCMCUSTSUBPRDMAP'	    FROM VT_COB.VTCMCUSTSUBPRDMAP        WHERE CRTIP='MIGVAM';
SELECT COUNT(*),'VTCMCUSTPRDCONFIG'		FROM VT_COB.VTCMCUSTPRDCONFIG        WHERE CRTIP='MIGVAM';
SELECT COUNT(*),'VTCMCUSTSUBPRDCONFIG'	FROM VT_COB.VTCMCUSTSUBPRDCONFIG     WHERE CRTIP='MIGVAM';
SELECT COUNT(*),'VTCMCUSTPRDACCCONFIG'	FROM VT_COB.VTCMCUSTPRDACCONFIG      WHERE CRTIP='MIGVAM';

*/

--TRUNCATE TABLE  VAM_MIGVTCMSTCUST			;
--TRUNCATE TABLE  VAM_MIGVTCMSTCUSTCIF		;
--TRUNCATE TABLE  VAM_MIGVTCMSTCUSTACC		;
--TRUNCATE TABLE  VAM_MIGVTCMSTCUSTACCCIF		;
--TRUNCATE TABLE  VAM_MIGVTCMCUST			    ;
--TRUNCATE TABLE  VAM_MIGVTCMCUSTCIF          ;
--TRUNCATE TABLE  VAM_MIGVTCMCUSTACC          ;
--TRUNCATE TABLE  VAM_MIGVTCMCUSTACCCIF       ;
--TRUNCATE TABLE  VAM_MIGVTCMCUSTPRDMAP       ;
--TRUNCATE TABLE  VAM_MIGVTCMCUSTSUBPRDMAP    ;
--TRUNCATE TABLE  VAM_MIGVTCMCUSTPRDCONFIG    ;
--TRUNCATE TABLE  VAM_MIGVTCMCUSTSUBPRDCONFIG ;
--TRUNCATE TABLE  VAM_MIGVTCMCUSTPRDACCCONFIG ;

--DELETE FROM VT_COB.VTCMSTCUST		     WHERE CRTIP='MIGVAM';
--DELETE FROM VT_COB.VTCMSTCUSTCIF       WHERE CRTIP='MIGVAM';
--DELETE FROM VT_COB.VTCMSTCUSTACCCIF    WHERE CRTIP='MIGVAM';
--DELETE FROM VT_COB.VTCMSTCUSTACCCIF    WHERE CRTIP='MIGVAM';


/*
SELECT COUNT(1),MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTCMSTCUST'			FROM VAM_MIGVTCMSTCUST		 GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1),MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTCMSTCUSTCIF'		FROM VAM_MIGVTCMSTCUSTCIF    GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1),MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTCMSTCUSTACC'		FROM VAM_MIGVTCMSTCUSTACC    GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1),MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTCMSTCUSTACCCIF'	FROM VAM_MIGVTCMSTCUSTACCCIF GROUP BY MIGSTATUSCODE,MIGSTATUSDESC ;
*/
/*
SELECT COUNT(1),'VTCMSTCUST'		FROM VT_COB.VTCMSTCUST		    WHERE CRTIP='MIGVAM';
SELECT COUNT(1),'VTCMSTCUSTCIF'		FROM VT_COB.VTCMSTCUSTCIF       WHERE CRTIP='MIGVAM';
SELECT COUNT(1),'VTCMSTCUSTACCCIF'	FROM VT_COB.VTCMSTCUSTACCCIF    WHERE CRTIP='MIGVAM';
SELECT COUNT(1),'VTCMSTCUSTACCCIF'	FROM VT_COB.VTCMSTCUSTACCCIF    WHERE CRTIP='MIGVAM';

*/


  INSERT INTO MIG_VAM_VTSTBATCHPRCSTRN(BATCHRUNID,STARTDATE)
   VALUES(LV_BATCHRUNID,SYSDATE);


        UPDATE VAM_MIGVTCMSTCUST SET BATCHRUNID=LV_BATCHRUNID WHERE BATCHRUNID IS NULL AND MIGSTATUSCODE='P' AND ISMIG='Y';
        UPDATE VAM_MIGVTCMSTCUSTCIF SET BATCHRUNID=LV_BATCHRUNID WHERE BATCHRUNID IS NULL AND MIGSTATUSCODE='P' AND ISMIG='Y';
        UPDATE VAM_MIGVTCMSTCUSTACCCIF SET BATCHRUNID=LV_BATCHRUNID WHERE BATCHRUNID IS NULL AND MIGSTATUSCODE='P' AND ISMIG='Y';
        UPDATE VAM_MIGVTCMCUST SET BATCHRUNID=LV_BATCHRUNID WHERE BATCHRUNID IS NULL AND MIGSTATUSCODE='P' AND ISMIG='Y';
        UPDATE VAM_MIGVTCMCUSTCIF SET BATCHRUNID=LV_BATCHRUNID WHERE BATCHRUNID IS NULL AND MIGSTATUSCODE='P' AND ISMIG='Y';
        UPDATE VAM_MIGVTCMCUSTACCCIF SET BATCHRUNID=LV_BATCHRUNID WHERE BATCHRUNID IS NULL AND MIGSTATUSCODE='P' AND ISMIG='Y';
        UPDATE VAM_MIGVTCMCUSTACC SET BATCHRUNID=LV_BATCHRUNID WHERE BATCHRUNID IS NULL AND MIGSTATUSCODE='P' AND ISMIG='Y';
         UPDATE VAM_MIGVTCMCUSTPRDMAP SET BATCHRUNID=LV_BATCHRUNID WHERE BATCHRUNID IS NULL AND MIGSTATUSCODE='P' AND ISMIG='Y';
        UPDATE VAM_MIGVTCMCUSTSUBPRDMAP SET BATCHRUNID=LV_BATCHRUNID WHERE BATCHRUNID IS NULL AND MIGSTATUSCODE='P' AND ISMIG='Y';
          UPDATE VAM_MIGVTCMCUSTSUBPRDCONFIG SET BATCHRUNID=LV_BATCHRUNID WHERE BATCHRUNID IS NULL AND MIGSTATUSCODE='P' AND ISMIG='Y';
        UPDATE VAM_MIGVTCMCUSTPRDACCCONFIG SET BATCHRUNID=LV_BATCHRUNID WHERE BATCHRUNID IS NULL AND MIGSTATUSCODE='P' AND ISMIG='Y';



		SELECT COUNT(1) INTO v_TOTCNT FROM VAM_MIGVTCMSTCUST WHERE BATCHRUNID=LV_BATCHRUNID ;--AND MIGSTATUSCODE='P';

		IF v_TOTCNT > 0
	THEN

		/* Duplicate check */
		UPDATE VAM_MIGVTCMSTCUST
		SET MIGSTATUSCODE = 'F',
			MIGSTATUSDESC = 'Data duplicated with in the File'
		WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P'
			AND GCIFNO IN
					(
							SELECT GCIFNO FROM VAM_MIGVTCMSTCUST
							WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P'
							GROUP BY GCIFNO
							HAVING COUNT(GCIFNO)>1
					);
        DBMS_OUTPUT.PUT_LINE('v_TOTCNT'|| v_TOTCNT);

      MERGE INTO VAM_MIGVTCMSTCUST STG using
        (
        SELECT  STG1.GCIFNO
        FROM VAM_MIGVTCMSTCUST STG1
        INNER JOIN VT_COB.VTCMSTCUST CUST ON CUST.GCIFNO = STG1.GCIFNO
        WHERE  BATCHRUNID = LV_BATCHRUNID AND STG1.MIGSTATUSCODE='P'
        GROUP BY STG1.GCIFNO
        ) A ON (STG.GCIFNO=A.GCIFNO)
        WHEN MATCHED THEN
        UPDATE  SET MIGSTATUSCODE='F', MIGSTATUSDESC= 'DATA ALREADY AVAILABLE in Staging Table and Not on boarded' WHERE BATCHRUNID = LV_BATCHRUNID;

 MERGE INTO VAM_MIGVTCMSTCUSTCIF STG using
        (
        SELECT  STG1.CIFNO,STG1.GCIFNO
        FROM VAM_MIGVTCMSTCUSTCIF STG1
        INNER JOIN VT_COB.VTCMSTCUSTCIF CUSTCIF ON STG1.CIFNO = CUSTCIF.CIFNO AND CUSTCIF.GCIFNO=STG1.GCIFNO
        WHERE  STG1.BATCHRUNID = LV_BATCHRUNID AND STG1.MIGSTATUSCODE='P'
        GROUP BY STG1.CIFNO,STG1.GCIFNO
        ) A ON (STG.CIFNO=A.CIFNO AND STG.GCIFNO=A.GCIFNO)
        WHEN MATCHED THEN
        UPDATE  SET MIGSTATUSCODE='F', MIGSTATUSDESC= 'CIF ALREADY AVAILABLE AVAIILABLE IN GCN STAGING'
        WHERE BATCHRUNID = LV_BATCHRUNID AND STG.MIGSTATUSCODE='P';


        MERGE INTO VAM_MIGVTCMSTCUSTCIF STG using
        (
        SELECT  CUSTCIF.CIFNO,CUSTCIF.GCIFNO
        FROM VAM_MIGVTCMSTCUSTCIF STG1
        INNER JOIN VT_COB.VTCMSTCUSTCIF CUSTCIF ON STG1.CIFNO = CUSTCIF.CIFNO AND STG1.GCIFNO=CUSTCIF.GCIFNO
        WHERE  STG1.BATCHRUNID = LV_BATCHRUNID AND STG1.MIGSTATUSCODE='P'
        GROUP BY CUSTCIF.CIFNO,CUSTCIF.GCIFNO
        ) A ON (STG.CIFNO=A.CIFNO AND STG.GCIFNO=A.GCIFNO)
        WHEN MATCHED THEN
        UPDATE  SET MIGSTATUSCODE='F', MIGSTATUSDESC= 'CIF ALREADY AVAILABLE AVAIILABLE IN GCN'
        WHERE BATCHRUNID = LV_BATCHRUNID AND STG.MIGSTATUSCODE='P';

        MERGE INTO VAM_MIGVTCMSTCUSTACCCIF STG using
        (
        SELECT  ACC.CIFNO,ACC.GCIFNO,ACC.ACCNO
        FROM VAM_MIGVTCMSTCUSTACCCIF STG1
        INNER JOIN VT_COB.VTCMSTCUSTACCCIF ACC ON STG1.ACCNO = ACC.ACCNO AND STG1.CIFNO=ACC.CIFNO AND  STG1.GCIFNO=ACC.GCIFNO
        WHERE  STG1.BATCHRUNID = LV_BATCHRUNID AND STG1.MIGSTATUSCODE='P'
        GROUP BY ACC.CIFNO,ACC.GCIFNO,ACC.ACCNO
        ) A ON (STG.CIFNO=A.CIFNO AND STG.GCIFNO=A.GCIFNO AND STG.ACCNO = A.ACCNO)
        WHEN MATCHED THEN
        UPDATE  SET MIGSTATUSCODE='F', MIGSTATUSDESC= 'STAGING ACCCIF DATA ALREADY AVAILABLE IN GCN'
        WHERE BATCHRUNID = LV_BATCHRUNID AND STG.MIGSTATUSCODE='P';

--        MERGE INTO VAM_MIGVTCMSTCUSTACCCIF STG using
--        (
--        SELECT  CUSTCIF.CIFNO,CUST.GCIFNO,ACC.ACCNO
--        FROM VAM_MIGVTCMSTCUSTACCCIF STG1
--        INNER JOIN VT_COB.VTCMSTCUST CUST ON STG1.GCIFNO=CUST.GCIFNO
--        INNER JOIN VT_COB.VTCMSTCUSTCIF CUSTCIF ON STG1.CIFNO = CUSTCIF.CIFNO AND CUSTCIF.GCIFNO=STG1.GCIFNO
--        INNER JOIN VT_COB.VTCMSTCUSTACC ACC ON STG1.ACCNO = ACC.ACCNO
--        WHERE  STG1.BATCHRUNID = LV_BATCHRUNID AND STG1.MIGSTATUSCODE='P'
--        GROUP BY CUSTCIF.CIFNO,CUST.GCIFNO,ACC.ACCNO
--        ) A ON (STG.CIFNO=A.CIFNO AND STG.GCIFNO=A.GCIFNO AND STG.ACCNO = A.ACCNO)
--        WHEN MATCHED THEN
--        UPDATE  SET MIGSTATUSCODE='F', MIGSTATUSDESC= 'ACCCIF ALREADY AVAILABLE IN GCN'
--        WHERE BATCHRUNID = LV_BATCHRUNID AND STG.MIGSTATUSCODE='P';

      UPDATE VAM_MIGVTCMCUSTACCCIF STG1 SET  MIGSTATUSCODE='F', MIGSTATUSDESC= 'CIF AND GCIF AND ACC DATA IS  AVAILABLE IN GCN Staging Table'
        WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE = 'P' AND
         EXISTS (SELECT 1 FROM VT_COB.VTCMCUSTACCCIF  CUSTCIF 
                         INNER JOIN VTCMCUST C ON C.CUSTID = CUSTCIF.CUSTID
                         INNER JOIN VTCMCUSTCIF CIF ON CIF.CUSTID = C.CUSTID AND CIF.CIFID = CUSTCIF.CIFID
                         INNER JOIN VTCMCUSTACC ACC ON ACC.ACCID = CUSTCIF.ACCID
                   WHERE CIF.CIFNO = STG1.CIFNO 
                       AND  C.GCIFNO = STG1.GCIFNO AND ACC.ACCNO = STG1.ACCNO );



		UPDATE VAM_MIGVTCMSTCUST
		SET MIGSTATUSCODE='S',
		   MIGSTATUSDESC = 'Validation Successfull'
		WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';

        UPDATE VAM_MIGVTCMSTCUSTCIF
		SET MIGSTATUSCODE='S',
		   MIGSTATUSDESC = 'Validation Successfull'
		WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';

         UPDATE VAM_MIGVTCMSTCUSTACC
		SET MIGSTATUSCODE='S',
		   MIGSTATUSDESC = 'Validation Successfull'
		WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';

        UPDATE VAM_MIGVTCMSTCUSTACCCIF
		SET MIGSTATUSCODE='S',
		   MIGSTATUSDESC = 'Validation Successfull'
		WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';

/*  VAM_MIGVTCMSTCUST	*/
INSERT INTO VT_COB.VTCMSTCUST
(
STCUSTID,                  CIFNO,                       GCIFNO,                       CORPORATEID,
PARENTCIFNO,               CUSTNAME,                    BANKCODE,                     SUBSCRIBDATE,
SUBSHORTNAME,              SUBLONGNAME,                 ADDLINE1,                     ADDLINE2,
ADDLINE3,                  CITY,                        COUNTRYID,                    COUNTRYCODE,
EMAIL,                     MOBILE,                      TELNO,                        FAXNO,
PRICNTFNAME,               PRICNTMNAME,                 PRICNTLNAME,                  PRICNTEMAIL,
PRICNTMOBILE,              PRICNTTELNO,                 SECCNTFNAME,                  SECCNTMNAME,
SECCNTLNAME,               SECCNTEMAIL,                 SECCNTMOBILE,                 SECCNTTELNO,
BNKCNTFNAME,               BNKCNTMNAME,                 BNKCNTLNAME,                  BNKCNTEMAIL,
BNKCNTMOBILE,              BNKCNTTELNO,                 PRICNTMOBCODE,                PRICNTELTAREACD,
PRICNTTELCNTRYCD,          SECCNTMOBCODE,               SECCNTTELAREACD,              SECCNTTELCNTRYCD,
INCREMENTUPLOAD,           THRESHOLDLIMIT,              RECONEXCBY,                   OTHERBANKRECON,
EIPPSERVICES,              INTAPPR,                     AUTHZAPR,                     INDESTPATH,
OUTDESTPATH,               MAXFILESIZE,                 PERTRANFILESIZE,              SMSFLAG,
EMAILFLAG,                 IMRFLAG,                     VAFLAG,                       FILEUPLFLAG,
CHRGACCID,                 STATUS,                      CRTBY,                        CRTDATE,
CRTIP,                     APPDATE,                     APPBY,                        APPIP,
MDYDATE,                   MDYBY,                       MDYIP,                        REMARKS,
BNKCNTMOBCODE,             BNKCNTTELAREACD,             BNKCNTTELCNTRYCD,             EMAILOPTFLAG,
CUSTKEY,                   REGURL,                      INVURL,                       USERURL,
CHECKERREMARKS,            CHRGFLAG,                    SETUPFEECHRGTYPE,             SETUPFEECHRGAMT,
SETUPFEECHRGVATPER,        PARTNERREGFEETYPE,           PARTNERREGFEEAMT,             PARTNERREGFEEPER,
PERTXNFEETYPE,             PERTXNFEEAMT,                PERTXNFEEVAT,                 VAAMCFEETYPE,
VAAMCFEEAMT,               VAAMCFEEVAT,                 CHARGEFROM,                   EXECDATE,
CBXSYNCDATE,               CBXSYNCBATCHRUNID,           ALERTSVCFLAG,                 PAYOUTSVCFLAG,
POBOCOBOSVCFLAG,           RCMSSVCFLAG,                 SADADSVCFLAG,                 RCDSVCFLAG,
DELEGATION,                TRNFILEAPPRFLAG,             TRNFILEPARTIALFAILUREFLAG,     VERIFIERINTERVENTION,
VASETUPFEECHRGAMT,         VASETUPFEECHRGVATPER,        VACREATIONCHRGAMT,            VACREATIONFEECHRGVATPER,
POBOSETUPFEECHRGAMT,       POBOSETUPFEECHRGVATPER,      SADADBILLPAY,                 GOVTPAY,
INVPAY,                    CAPTURECRN,                  CUSTREFNO,                    SCANNINGBY,
PAYADVUPLOAD,              BENREGAPPR,                  DEALREFNO,                    WPSSVCFLAG,
WPSKSA,                    WPSBAH,                      WPSUAE,                       INVPRINTFLAG,
DIGITSIGNCER,              SECURITYCER,                 ENCTYPE,                      AUTOTRIGGER,
KEYSENDDATE,               H2HMAKERID,                  ONBOARDFLAG,                  TRANSACTIONID,
UPDATEDFLAG,               ISDELETED,                   ZIPCODE,                      PRICNTFAXNO,
SECCNTFAXNO,               TRUSTACC,                    NICKNAME
)
SELECT
VT_COB.VTCMSTCUST_STCUSTID_SEQ.NEXTVAL,                  CIFNO,                       GCIFNO,                       CORPORATEID,
PARENTCIFNO,               CUSTNAME,                    BANKCODE,                      TO_CHAR(TO_DATE(SUBSCRIBDATE,'DD-MM-YY'),'DD-MON-YY'),
SUBSHORTNAME,              SUBLONGNAME,                 ADDLINE1,                     ADDLINE2,
ADDLINE3,                  CITY,                        COUNTRYID,                    COUNTRYCODE,
EMAIL,                     MOBILE,                      TELNO,                        FAXNO,
PRICNTFNAME,               PRICNTMNAME,                 PRICNTLNAME,                  PRICNTEMAIL,
SUBSTR(PRICNTMOBILE,4,20),              PRICNTTELNO,                 SECCNTFNAME,                  SECCNTMNAME,
SECCNTLNAME,               SECCNTEMAIL,                 SECCNTMOBILE,                 SECCNTTELNO,
BNKCNTFNAME,               BNKCNTMNAME,                 BNKCNTLNAME,                  BNKCNTEMAIL,
BNKCNTMOBILE,              BNKCNTTELNO,                 PRICNTMOBCODE,                PRICNTELTAREACD,
PRICNTTELCNTRYCD,          SECCNTMOBCODE,               SECCNTTELAREACD,              SECCNTTELCNTRYCD,
INCREMENTUPLOAD,           THRESHOLDLIMIT,              RECONEXCBY,                   OTHERBANKRECON,
EIPPSERVICES,              INTAPPR,                     AUTHZAPR,                     INDESTPATH,
OUTDESTPATH,               MAXFILESIZE,                 PERTRANFILESIZE,              SMSFLAG,
EMAILFLAG,                 IMRFLAG,                     VAFLAG,                       FILEUPLFLAG,
CHRGACCID,                 STATUS,                      CRTBY,                        TO_CHAR(TO_DATE(CRTDATE,'DD-MM-YY'),'DD-MON-YY'),
'MIGVAM',                      TO_CHAR(TO_DATE(APPDATE,'DD-MM-YY'),'DD-MON-YY'),                     APPBY,                        APPIP,
TO_CHAR(TO_DATE(MDYDATE,'DD-MM-YY'),'DD-MON-YY'),                   MDYBY,                       MDYIP,                        REMARKS,
BNKCNTMOBCODE,             BNKCNTTELAREACD,             BNKCNTTELCNTRYCD,             EMAILOPTFLAG,
CUSTKEY,                   REGURL,                      INVURL,                       USERURL,
CHECKERREMARKS,            CHRGFLAG,                    SETUPFEECHRGTYPE,             SETUPFEECHRGAMT,
SETUPFEECHRGVATPER,        PARTNERREGFEETYPE,           PARTNERREGFEEAMT,             PARTNERREGFEEPER,
PERTXNFEETYPE,             PERTXNFEEAMT,                PERTXNFEEVAT,                 VAAMCFEETYPE,
VAAMCFEEAMT,               VAAMCFEEVAT,                 CHARGEFROM,                   EXECDATE,
 TO_CHAR(TO_DATE(CBXSYNCDATE,'DD-MM-YY'),'DD-MON-YY'),               CBXSYNCBATCHRUNID,           ALERTSVCFLAG,                 PAYOUTSVCFLAG,
POBOCOBOSVCFLAG,           RCMSSVCFLAG,                 SADADSVCFLAG,                 RCDSVCFLAG,
DELEGATION,                TRNFILEAPPRFLAG,             TRNFILEPARTIALFAILUREFLAG,     VERIFIERINTERVENTION,
VASETUPFEECHRGAMT,         VASETUPFEECHRGVATPER,        VACREATIONCHRGAMT,            VACREATIONFEECHRGVATPER,
POBOSETUPFEECHRGAMT,       POBOSETUPFEECHRGVATPER,      SADADBILLPAY,                 GOVTPAY,
INVPAY,                    CAPTURECRN,                  CUSTREFNO,                    SCANNINGBY,
PAYADVUPLOAD,              BENREGAPPR,                  DEALREFNO,                    WPSSVCFLAG,
WPSKSA,                    WPSBAH,                      WPSUAE,                       INVPRINTFLAG,
DIGITSIGNCER,              SECURITYCER,                 ENCTYPE,                      AUTOTRIGGER,
  TO_CHAR(TO_DATE(KEYSENDDATE,'DD-MM-YY'),'DD-MON-YY'),               H2HMAKERID,                  ONBOARDFLAG,                  TRANSACTIONID,
UPDATEDFLAG,               ISDELETED,                   NULL,                         NULL,
NULL,                      NULL,                        NULL
FROM  VAM_MIGVTCMSTCUST 
WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='S' AND GCIFNO NOT IN (SELECT GCIFNO FROM VT_COB.VTCMSTCUST);

UPDATE VT_COB.VTCMSTCUST SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';

MERGE INTO VAM_MIGVTCMSTCUST STG
        USING
        (
        SELECT CUST.GCIFNO
        FROM VAM_MIGVTCMSTCUST STG
        INNER JOIN VT_COB.VTCMSTCUST CUST ON CUST.GCIFNO=STG.GCIFNO
        WHERE STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S'
        )A ON  (A.GCIFNO=STG.GCIFNO)
        WHEN MATCHED THEN
        UPDATE SET STG.MIGSTATUSCODE='M', STG.MIGSTATUSDESC = 'MIGRATION SUCCESSFUL'
        WHERE STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S';


/* VTCMSTCUSTCIF */


UPDATE VAM_MIGVTCMSTCUSTCIF SET MIGSTATUSCODE='F', MIGSTATUSDESC= 'CIFNO IS NOT AVAILABLE IN STAGING GCN'
WHERE CIFNO NOT IN (SELECT CIFNO FROM VT_COB.VTCMSTCUSTCIF) AND BATCHRUNID =LV_BATCHRUNID AND MIGSTATUSCODE='P' ;

UPDATE VAM_MIGVTCMSTCUSTCIF SET MIGSTATUSCODE='S', MIGSTATUSDESC= 'VALIDATION SUCCESSFUL'
WHERE BATCHRUNID =LV_BATCHRUNID AND MIGSTATUSCODE='P' ;


     Insert into VT_COB.VTCMSTCUSTCIF 
        (STCIFID,CIFNO,STCUSTID,STATUS,CRTBY,CRTDATE,CRTIP,
        APPDATE,APPBY,APPIP,MDYDATE,MDYBY,MDYIP,CIFNAME,BRANCH,PRIMARYCIF,
        CBXSYNCDATE,CBXSYNCBATCHRUNID,COUNTRYCODE2,ONBOARDFLAG,UPDATEDFLAG,
        ISDELETED,GCIFNO,TRUSTACC,ISLAMICINDICATOR,ENTITY,CORPREG1,CORPREG2,
        CIFDTLS,FETCHACCFLAG,TARGETCODE,FXRATESEGMENT,TRANSACTIONID,
        FXRATESUBSEGMENT,ADDRESS1,ADDRESS2,ADDRESS3,CITY,COUNTRYNAME,REGMBLNO1,
        REGMBLNO2,REGMBLNO3,REGMBLNO4,REGMBLNO5,REGMBLNO6,PHONE,EMAILID,FAX1,
        FAX2,FAX3,FAX4,FAX5,FAX6,ENTITYNAME) 

        SELECT  
        VT_COB.VTCMSTCUSTCIF_STCIFID_SEQ.NEXTVAL,A.CIFNO,A.STCUSTID,A.STATUS,A.CRTBY,A.CRTDATE,'MIGVAM',A.
        APPDATE,A.APPBY,A.APPIP,A.MDYDATE,A.MDYBY,A.MDYIP,A.CIFNAME,A.BRANCH,A.PRIMARYCIF,A.
        CBXSYNCDATE,A.CBXSYNCBATCHRUNID,A.COUNTRYCODE2,A.ONBOARDFLAG,A.UPDATEDFLAG,A.
        ISDELETED,CUST.GCIFNO,A.TRUSTACC,A.ISLAMICINDICATOR,A.ENTITY,A.CORPREG1,A.CORPREG2,A.
        CIFDTLS,A.FETCHACCFLAG,A.TARGETCODE,A.FXRATESEGMENT,A.TRANSACTIONID,A.
        FXRATESUBSEGMENT,A.ADDRESS1,A.ADDRESS2,A.ADDRESS3,A.CITY,A.COUNTRYNAME,A.REGMBLNO1,A.
        REGMBLNO2,A.REGMBLNO3,A.REGMBLNO4,A.REGMBLNO5,A.REGMBLNO6,A.PHONE,A.EMAILID,A.FAX1,A.
        FAX2,A.FAX3,A.FAX4,A.FAX5,A.FAX6,A.ENTITYNAME

        FROM VAM_MIGVTCMSTCUSTCIF B
        INNER JOIN (SELECT A.CIFNO,A.STCUSTID,A.STATUS,A.CRTBY,A.CRTDATE,A.
        APPDATE,A.APPBY,A.APPIP,A.MDYDATE,A.MDYBY,A.MDYIP,A.CIFNAME,A.BRANCH,A.PRIMARYCIF,A.
        CBXSYNCDATE,A.CBXSYNCBATCHRUNID,A.COUNTRYCODE2,A.ONBOARDFLAG,A.UPDATEDFLAG,A.
        ISDELETED,A.TRUSTACC,A.ISLAMICINDICATOR,A.ENTITY,A.CORPREG1,A.CORPREG2,A.
        CIFDTLS,A.FETCHACCFLAG,A.TARGETCODE,A.FXRATESEGMENT,A.TRANSACTIONID,A.
        FXRATESUBSEGMENT,A.ADDRESS1,A.ADDRESS2,A.ADDRESS3,A.CITY,A.COUNTRYNAME,A.REGMBLNO1,A.
        REGMBLNO2,A.REGMBLNO3,A.REGMBLNO4,A.REGMBLNO5,A.REGMBLNO6,A.PHONE,A.EMAILID,A.FAX1,A.
        FAX2,A.FAX3,A.FAX4,A.FAX5,A.FAX6,A.ENTITYNAME,
        ROW_NUMBER() OVER(PARTITION BY A.CIFNO ORDER BY STCIFID ASC) AS RN
        FROM VT_COB.VTCMSTCUSTCIF A) A  ON A.CIFNO=B.CIFNO AND A.RN=1
        INNER JOIN VT_COB.VTCMSTCUST CUST ON CUST.GCIFNO =B.GCIFNO  --AND A.STATUS='A'
        LEFT OUTER JOIN VT_COB.VTCMSTCUSTCIF  CUSTCIF ON CUSTCIF.CIFNO = B.CIFNO AND CUST.GCIFNO = CUSTCIF.GCIFNO
        WHERE  B.BATCHRUNID =LV_BATCHRUNID AND B.MIGSTATUSCODE='S' AND CUSTCIF.STCIFID IS NULL ;

--     Insert into VT_COB.VTCMSTCUSTCIF 
--        (STCIFID,CRTIP,GCIFNO,CIFNO,CIFNAME) 
--        SELECT  
--        VT_COB.VTCMSTCUSTCIF_STCIFID_SEQ.NEXTVAL,'MIGVAM' AS CRTIP,CUST.GCIFNO,B.CIFNO,B.CIFNAME
--        FROM VAM_MIGVTCMSTCUSTCIF B
----        INNER JOIN VT_COB.VTCMSTCUSTCIF A ON A.CIFNO=B.CIFNO
--        INNER JOIN VT_COB.VTCMSTCUST CUST ON CUST.GCIFNO =B.GCIFNO
--        LEFT OUTER JOIN VT_COB.VTCMSTCUSTCIF  CUSTCIF ON CUSTCIF.CIFNO = B.CIFNO AND CUST.GCIFNO = CUSTCIF.GCIFNO
--        WHERE  B.BATCHRUNID =LV_BATCHRUNID AND B.MIGSTATUSCODE='S' AND CUSTCIF.STCIFID IS NULL ;

--MERGE INTO VT_COB.VTCMSTCUSTCIF  STG USING
--(SELECT A.STCIFID,A.CIFNO,A.STCUSTID,A.STATUS,A.CRTBY,A.CRTDATE,'MIGVAM' AS CRTIP,A.
--        APPDATE,A.APPBY,A.APPIP,A.MDYDATE,A.MDYBY,A.MDYIP,A.CIFNAME,A.BRANCH,A.PRIMARYCIF,A.
--        CBXSYNCDATE,A.CBXSYNCBATCHRUNID,A.COUNTRYCODE2,A.ONBOARDFLAG,A.UPDATEDFLAG,A.
--        ISDELETED,A.GCIFNO,A.TRUSTACC,A.ISLAMICINDICATOR,A.ENTITY,A.CORPREG1,A.CORPREG2,A.
--        CIFDTLS,A.FETCHACCFLAG,A.TARGETCODE,A.FXRATESEGMENT,A.TRANSACTIONID,A.
--        FXRATESUBSEGMENT,A.ADDRESS1,A.ADDRESS2,A.ADDRESS3,A.CITY,A.COUNTRYNAME,A.REGMBLNO1,A.
--        REGMBLNO2,A.REGMBLNO3,A.REGMBLNO4,A.REGMBLNO5,A.REGMBLNO6,A.PHONE,A.EMAILID,A.FAX1,A.
--        FAX2,A.FAX3,A.FAX4,A.FAX5,A.FAX6,A.ENTITYNAME,
--ROW_NUMBER() OVER(PARTITION BY A.CIFNO ORDER BY STCIFID ASC) AS RN
--FROM VT_COB.VTCMSTCUSTCIF A
--        INNER JOIN VT_COB.VTCMSTCUST CUST ON CUST.GCIFNO =A.GCIFNO AND A.STATUS='A'
--WHERE A.CIFNO IS NOT NULL AND A.GCIFNO IS NULL AND NVL(A.CRTIP,'')<>'MIGVAM'
--)A ON (A.CIFNO=STG.CIFNO AND A.GCIFNO = STG.GCIFNO AND RN=1) 
--WHEN MATCHED THEN
--UPDATE 
--SET STG.STCUSTID = NVL(STG.STCUSTID,A.STCUSTID),STG.STATUS = NVL(STG.STATUS,A.STATUS),STG.CRTBY = NVL(STG.CRTBY,A.CRTBY),
--  STG.CRTDATE =NVL(STG.CRTDATE ,A.CRTDATE),STG.CRTIP = 'MIGVAM',
--  STG.APPDATE = NVL(STG.APPDATE,A.APPDATE),STG.APPBY =NVL(STG.APPBY, A.APPBY),STG.APPIP = NVL(STG.APPIP,A.APPIP),
--  STG.MDYDATE = NVL(STG.MDYDATE,A.MDYDATE),STG.MDYBY =NVL(STG.MDYBY, A.MDYBY),STG.MDYIP = NVL(STG.MDYIP,A.MDYIP),
--  STG.CIFNAME = NVL(STG.CIFNAME,A.CIFNAME),STG.BRANCH=NVL(STG.BRANCH,A.BRANCH),STG.PRIMARYCIF=NVL(STG.PRIMARYCIF,A.PRIMARYCIF),
--  STG.CBXSYNCDATE=NVL(STG.CBXSYNCDATE,A.CBXSYNCDATE),STG.CBXSYNCBATCHRUNID=NVL(STG.CBXSYNCBATCHRUNID,A.CBXSYNCBATCHRUNID),
--  STG.COUNTRYCODE2=NVL(STG.COUNTRYCODE2,A.COUNTRYCODE2),STG.ONBOARDFLAG=NVL(STG.ONBOARDFLAG,A.ONBOARDFLAG),
--  STG.UPDATEDFLAG=NVL(STG.UPDATEDFLAG,A.UPDATEDFLAG),STG.ISDELETED = NVL(STG.ISDELETED,A.ISDELETED),
--  STG.TRUSTACC =NVL(STG.TRUSTACC, A.TRUSTACC),STG.ISLAMICINDICATOR = NVL(A.ISLAMICINDICATOR,STG.ISLAMICINDICATOR),STG.ENTITY = A.ENTITY,STG.CORPREG1=A.CORPREG1,STG.CORPREG2=A.CORPREG2,
--  STG.CIFDTLS=A.CIFDTLS,STG.FETCHACCFLAG=A.FETCHACCFLAG,STG.TARGETCODE = A.TARGETCODE,STG.FXRATESEGMENT=A.FXRATESEGMENT,STG.TRANSACTIONID = A.TRANSACTIONID,
--  STG.FXRATESUBSEGMENT = A.FXRATESUBSEGMENT,STG.ADDRESS1 = A.ADDRESS1, STG.ADDRESS2 = A.ADDRESS2, STG.ADDRESS3 = A.ADDRESS3,
--  STG.CITY = A.CITY,STG.COUNTRYNAME = A.COUNTRYNAME, STG.REGMBLNO1 = A.REGMBLNO1, STG.REGMBLNO2 = A.REGMBLNO2,
--  STG.REGMBLNO3 = A.REGMBLNO3,STG.REGMBLNO4 = A.REGMBLNO4,STG.REGMBLNO5 = A.REGMBLNO5,STG.REGMBLNO6 = A.REGMBLNO6,
--  STG.PHONE = A.PHONE, STG.EMAILID = A.EMAILID, STG.FAX1 = A.FAX1, STG.FAX2 = A.FAX2, STG.FAX3 = A.FAX3,
--  STG.FAX4 = A.FAX4, STG.FAX5 = A.FAX5, STG.FAX6 = A.FAX6, STG.ENTITYNAME = A.ENTITYNAME
--WHERE STG.CRTIP='MIGVAM';


UPDATE VT_COB.VTCMSTCUSTCIF SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';

   UPDATE VAM_MIGVTCMSTCUSTCIF STG
        SET MIGSTATUSCODE='M',MIGSTATUSDESC='MIGRATION SUCCESSFUL'
        WHERE STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S';


UPDATE VAM_MIGVTCMSTCUSTACCCIF SET MIGSTATUSCODE='S', MIGSTATUSDESC= 'VALIDATION SUCCESSFUL'
WHERE BATCHRUNID =LV_BATCHRUNID AND MIGSTATUSCODE='P' ;

  INSERT INTO VT_COB.VTCMSTCUSTACCCIF 
     (   
       STACCCIFID,		STCUSTID,		STCIFID,		STACCID,		STATUS
,CRTBY,			CRTDATE,	CRTIP,		APPDATE
,APPBY,			APPIP,		MDYDATE,	MDYBY
,MDYIP,			ISDELETED,GCIFNO,      CIFNO, ACCNO
      )
    SELECT
       VT_COB.VTCMSTCUSTACCCIF_ACCCIFID_SEQ.NEXTVAL,		STG.STCUSTID,		STG.STCIFID,		STG.STACCID,		STG.STATUS
,STG.CRTBY,			TO_CHAR(TO_DATE(STG.CRTDATE,'DD-MM-YY'),'DD-MON-YY'),	'MIGVAM',		TO_CHAR(TO_DATE(STG.APPDATE,'DD-MM-YY'),'DD-MON-YY')
,STG.APPBY,			STG.APPIP,		TO_CHAR(TO_DATE(STG.MDYDATE,'DD-MM-YY'),'DD-MON-YY'),	STG.MDYBY
,STG.MDYIP,			'N',CUST.GCIFNO,      CIF.CIFNO, ACC.ACCNO
      FROM VAM_MIGVTCMSTCUSTACCCIF  STG
    INNER JOIN VT_COB.VTCMSTCUST CUST ON CUST.GCIFNO=STG.GCIFNO
    INNER JOIN VT_COB.VTCMSTCUSTCIF  CIF ON CIF.GCIFNO=CUST.GCIFNO AND STG.CIFNO=CIF.CIFNO
    INNER JOIN VT_COB.VTCMSTCUSTACC ACC  ON ACC.ACCNO=STG.ACCNO  --AND ACC.ACCSTATUS='A'
    LEFT JOIN VT_COB.VTCMSTCUSTACCCIF  CUIF ON CUIF.ACCNO=STG.ACCNO AND STG.GCIFNO=CUIF.GCIFNO AND STG.CIFNO=CUIF.CIFNO
    WHERE  STG.BATCHRUNID = LV_BATCHRUNID AND STG.MIGSTATUSCODE = 'S'  AND CUIF.STACCCIFID IS NULL;

UPDATE VT_COB.VTCMSTCUSTACCCIF SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';

MERGE INTO VAM_MIGVTCMSTCUSTACCCIF STG using
        (
        SELECT  STG1.CIFNO,STG1.GCIFNO,STG1.ACCNO
        FROM VAM_MIGVTCMSTCUSTACCCIF STG1
        INNER JOIN VT_COB.VTCMSTCUSTACCCIF ACIF ON STG1.CIFNO=ACIF.CIFNO
        AND STG1.GCIFNO=ACIF.GCIFNO AND STG1.ACCNO = ACIF.ACCNO
        WHERE  STG1.BATCHRUNID = LV_BATCHRUNID AND STG1.MIGSTATUSCODE='S'
        GROUP BY STG1.CIFNO,STG1.GCIFNO,STG1.ACCNO
        ) A ON (STG.CIFNO=A.CIFNO AND STG.GCIFNO=A.GCIFNO AND STG.ACCNO = A.ACCNO)
        WHEN MATCHED THEN
        UPDATE  SET MIGSTATUSCODE='M', MIGSTATUSDESC= 'MIGRATION SUCCESSFUL'
        WHERE BATCHRUNID = LV_BATCHRUNID AND STG.MIGSTATUSCODE='S';


		v_ENDTIME := SYSDATE;


ELSE

	v_ENDTIME := SYSDATE;


END IF;

/*MIGVTCMCUST*/



		SELECT COUNT(1) INTO CNT_MIGVTCMCUST FROM VAM_MIGVTCMCUST WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';

		IF CNT_MIGVTCMCUST > 0
THEN

/*CUST VALIDATION START*/

/* Duplicate check */
		UPDATE VAM_MIGVTCMCUST
		SET MIGSTATUSCODE = 'F',
			MIGSTATUSDESC = 'DATA DUPLICATED WITH IN THE FILE'
		WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P'
			AND GCIFNO IN
					(
							SELECT GCIFNO FROM VAM_MIGVTCMCUST
							WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P'
							GROUP BY GCIFNO
							HAVING COUNT(GCIFNO)>1
					);

DBMS_OUTPUT.PUT_LINE('CNT_MIGVTCMCUST'||1);

		SELECT COUNT(1) INTO v_FAILCNT FROM VAM_MIGVTCMCUST WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE = 'F';

        UPDATE VAM_MIGVTCMCUST STG SET STG.MIGSTATUSCODE='F', STG.MIGSTATUSDESC = 'Customer GCIF is not available in GCN Staging Table'
        WHERE GCIFNO NOT IN (SELECT GCIFNO FROM VT_COB.VTCMSTCUST ) AND BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';

    UPDATE VAM_MIGVTCMCUST STG SET STG.MIGSTATUSCODE='F', STG.MIGSTATUSDESC = 'Customer is already available in GCN '
        WHERE GCIFNO IN (SELECT GCIFNO FROM VT_COB.VTCMCUST ) AND BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';

		SELECT COUNT(1) INTO v_FAILCNT FROM VAM_MIGVTCMCUST WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE = 'F';

DBMS_OUTPUT.PUT_LINE('CNT_MIGVTCMCUST'||3);

        MERGE INTO VAM_MIGVTCMCUST STG using
        (
        SELECT  STG1.GCIFNO,STG1.CUSTID
        FROM VAM_MIGVTCMCUST STG1
        LEFT JOIN VAM_MIGVTCMCUSTCIF CUST ON CUST.CUSTID = STG1.CUSTID
        WHERE  STG1.BATCHRUNID = LV_BATCHRUNID AND STG1.MIGSTATUSCODE='P' AND CUST.CUSTID  IS NULL
        GROUP BY STG1.GCIFNO,STG1.CUSTID
        ) A ON (STG.CUSTID=A.CUSTID)
        WHEN MATCHED THEN
        UPDATE  SET MIGSTATUSCODE='F', MIGSTATUSDESC= 'GCIF ID IS NOT AVAILABLE IN CUST_CIF_MAPPING'
        WHERE BATCHRUNID = LV_BATCHRUNID AND MIGSTATUSCODE='P';

		SELECT COUNT(1) INTO v_FAILCNT FROM VAM_MIGVTCMCUST WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE = 'F';

DBMS_OUTPUT.PUT_LINE('CNT_MIGVTCMCUST'||4);

        MERGE INTO VAM_MIGVTCMCUST STG using
        (
        SELECT  STG1.GCIFNO,STG1.CUSTID
        FROM VAM_MIGVTCMCUST STG1
        INNER JOIN VAM_MIGVTCMCUSTCIF CUST ON STG1.CUSTID = CUST.CUSTID
        LEFT JOIN VAM_MIGVTCMCUSTACCCIF CUSTCIF ON CUSTCIF.CUSTID = STG1.CUSTID
        WHERE  STG1.BATCHRUNID = LV_BATCHRUNID AND STG1.MIGSTATUSCODE='P'
        AND CUSTCIF.CIFID  IS NULL
        GROUP BY STG1.GCIFNO,STG1.CUSTID
        ) A ON (STG.CUSTID=A.CUSTID)
        WHEN MATCHED THEN
        UPDATE  SET MIGSTATUSCODE='F', MIGSTATUSDESC= 'GCIF AVAILABLE IN CUST_CIF_MAPPING TABLE BUT ACCOUNT IS NOT AVAILABLE IN THE ACC_CIF_MAPPING TABLE'
        WHERE BATCHRUNID = LV_BATCHRUNID AND STG.MIGSTATUSCODE='P';

		SELECT COUNT(1) INTO v_FAILCNT FROM VAM_MIGVTCMCUST WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE = 'F';

        MERGE INTO VAM_MIGVTCMCUST STG using
        (
        SELECT  STG1.GCIFNO,CU.CUSTID
        FROM VAM_MIGVTCMCUST STG1
        INNER JOIN VT_COB.VTCMCUST CU ON CU.GCIFNO=STG1.GCIFNO
        WHERE  BATCHRUNID = LV_BATCHRUNID
        GROUP BY STG1.GCIFNO,CU.CUSTID
        ) A ON (STG.GCIFNO=A.GCIFNO)
        WHEN MATCHED THEN
        UPDATE  SET STG.CUSTID=A.CUSTID
        WHERE BATCHRUNID = LV_BATCHRUNID;

DBMS_OUTPUT.PUT_LINE('CNT_MIGVTCMCUST'||5);

UPDATE VAM_MIGVTCMCUST
		SET MIGSTATUSCODE='S',
		   MIGSTATUSDESC = 'VALIDATION SUCCESSFUL'
		WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';

/*VTCMCUST*/

        INSERT INTO VT_COB.VTCMCUST
        (CUSTID,       CIFNO,       GCIFNO,       CORPORATEID,       PARENTCIFNO
        ,CUSTNAME,       BANKCODE,       SUBSCRIBDATE,       SUBSHORTNAME
        ,SUBLONGNAME,       ADDLINE1,       ADDLINE2,       ADDLINE3
        ,CITY,       COUNTRYID,       COUNTRYCODE,       EMAIL
        ,MOBILE,       TELNO,       FAXNO,       PRICNTFNAME
        ,PRICNTMNAME,       PRICNTLNAME,       PRICNTEMAIL,       PRICNTMOBILE
        ,PRICNTTELNO,       SECCNTFNAME,       SECCNTMNAME,       SECCNTLNAME
        ,SECCNTEMAIL,       SECCNTMOBILE,       SECCNTTELNO,       BNKCNTFNAME
        ,BNKCNTMNAME,       BNKCNTLNAME,       BNKCNTEMAIL,       BNKCNTMOBILE
        ,BNKCNTTELNO,       PRICNTMOBCODE,       PRICNTELTAREACD,       PRICNTTELCNTRYCD
        ,SECCNTMOBCODE,       SECCNTTELAREACD,       SECCNTTELCNTRYCD,       INCREMENTUPLOAD
        ,THRESHOLDLIMIT,       RECONEXCBY,       OTHERBANKRECON,       EIPPSERVICES
        ,INTAPPR,       AUTHZAPR,       INDESTPATH,       OUTDESTPATH
        ,MAXFILESIZE,     PERTRANFILESIZE,     SMSFLAG,     EMAILFLAG
        ,IMRFLAG,     VAFLAG,     FILEUPLFLAG,     CHRGACCID
        ,STATUS,          CRTDATE,     CRTIP
        ,APPDATE,         /* APPIP*/     MDYDATE
        ,     MDYIP,     REMARKS,     BNKCNTMOBCODE
        ,BNKCNTTELAREACD,     BNKCNTTELCNTRYCD,     EMAILOPTFLAG,     CUSTKEY
        ,REGURL,     INVURL,     USERURL,     CHECKERREMARKS
        ,CHRGFLAG,     SETUPFEECHRGTYPE,     SETUPFEECHRGAMT,     SETUPFEECHRGVATPER
        ,PARTNERREGFEETYPE,     PARTNERREGFEEAMT,     PARTNERREGFEEPER,     PERTXNFEETYPE
        ,PERTXNFEEAMT,     PERTXNFEEVAT,     VAAMCFEETYPE,     VAAMCFEEAMT
        ,VAAMCFEEVAT,     CHARGEFROM,     EXECDATE,     CBXSYNCDATE
        ,CBXSYNCBATCHRUNID,     ALERTSVCFLAG,     PAYOUTSVCFLAG,     POBOCOBOSVCFLAG
        ,RCMSSVCFLAG,     SADADSVCFLAG,     RCDSVCFLAG,     DELEGATION
        ,TRNFILEAPPRFLAG,     TRNFILEPARTIALFAILUREFLAG,     VERIFIERINTERVENTION,     VASETUPFEECHRGAMT
        ,VACREATIONCHRGAMT,     POBOSETUPFEECHRGAMT,     SADADBILLPAY,     GOVTPAY
        ,INVPAY,     CAPTURECRN,     CUSTREFNO,     SCANNINGBY
        ,PAYADVUPLOAD,     BENREGAPPR,     DEALREFNO,     POBOSETUPFEECHRGVATPER
        ,VACREATIONFEECHRGVATPER,     VASETUPFEECHRGVATPER,     WPSSVCFLAG,     WPSKSA
        ,WPSBAH,     WPSUAE,     INVPRINTFLAG,     DIGITSIGNCER
        ,SECURITYCER,     ENCTYPE,     H2HMAKERID,     KEYSENDDATE
        ,ISDELETED/*,     LSTUPDDATE,     ZIPCODE,     PRICNTFAXNO
        ,SECCNTFAXNO,     TRANSACTIONID,     UPDATEDFLAG--,     CUSTCAT */
--        ,CRTBY, APPBY, MDYBY
        )
        SELECT
         VT_COB.VTCMCUST_CUSTID_SEQ.NEXTVAL,       STG.CIFNO,       STG.GCIFNO,       STG.CORPORATEID,       STG.PARENTCIFNO
        ,STG.CUSTNAME,       STG.BANKCODE,       STG.SUBSCRIBDATE,       STG.SUBSHORTNAME
        ,STG.SUBLONGNAME,       STG.ADDLINE1,       STG.ADDLINE2,       STG.ADDLINE3
        ,STG.CITY,       '1' AS COUNTRYID,       STG.COUNTRYCODE,       STG.EMAIL
        ,STG.MOBILE,       STG.TELNO,       STG.FAXNO,       STG.PRICNTFNAME
        ,STG.PRICNTMNAME,       STG.PRICNTLNAME,       STG.PRICNTEMAIL,        SUBSTR(STG.PRICNTMOBILE,4,20)
        ,STG.PRICNTTELNO,       STG.SECCNTFNAME,       STG.SECCNTMNAME,       STG.SECCNTLNAME
        ,STG.SECCNTEMAIL,       STG.SECCNTMOBILE,       STG.SECCNTTELNO,       STG.BNKCNTFNAME
        ,STG.BNKCNTMNAME,       STG.BNKCNTLNAME,       STG.BNKCNTEMAIL,       STG.BNKCNTMOBILE
        ,STG.BNKCNTTELNO,       STG.PRICNTMOBCODE,       STG.PRICNTELTAREACD,       STG.PRICNTTELCNTRYCD
        ,STG.SECCNTMOBCODE,       STG.SECCNTTELAREACD,       STG.SECCNTTELCNTRYCD,       STG.INCREMENTUPLOAD
        ,STG.THRESHOLDLIMIT,       STG.RECONEXCBY,       STG.OTHERBANKRECON,       STG.EIPPSERVICES
        ,STG.INTAPPR,       STG.AUTHZAPR,       STG.INDESTPATH,       STG.OUTDESTPATH
        ,STG.MAXFILESIZE,     STG.PERTRANFILESIZE,     STG.SMSFLAG,     STG.EMAILFLAG
        ,STG.IMRFLAG,     STG.VAFLAG,     STG.FILEUPLFLAG,     STG.CHRGACCID
        ,STG.STATUS,          STG.CRTDATE,     'MIGVAM'         --------------------------------------
        ,STG.APPDATE,          /* STG.CHECKERIP,*/     STG.MDYDATE    --------------------------------------
        ,     STG.MDYIP,     STG.REMARKS,     STG.BNKCNTMOBCODE
        ,STG.BNKCNTTELAREACD,     STG.BNKCNTTELCNTRYCD,     STG.EMAILOPTFLAG,     STG.CUSTKEY
        ,STG.REGURL,     STG.INVURL,     STG.USERURL,     STG.CHECKERREMARKS
        ,STG.CHRGFLAG,     STG.SETUPFEECHRGTYPE,     STG.SETUPFEECHRGAMT,     STG.SETUPFEECHRGVATPER
        ,STG.PARTNERREGFEETYPE,     STG.PARTNERREGFEEAMT,     STG.PARTNERREGFEEPER,     STG.PERTXNFEETYPE
        ,STG.PERTXNFEEAMT,     STG.PERTXNFEEVAT,     STG.VAAMCFEETYPE,     STG.VAAMCFEEAMT
        ,STG.VAAMCFEEVAT,     STG.CHARGEFROM,     STG.EXECDATE,     STG.CBXSYNCDATE
        ,STG.CBXSYNCBATCHRUNID,     STG.ALERTSVCFLAG,     STG.PAYOUTSVCFLAG,     STG.POBOCOBOSVCFLAG
        ,STG.RCMSSVCFLAG,     STG.SADADSVCFLAG,     STG.RCDSVCFLAG,     STG.DELEGATION
        ,STG.TRNFILEAPPRFLAG,     STG.TRNFILEPARTIALFAILUREFLAG,     STG.VERIFIERINTERVENTION,     STG.VASETUPFEECHRGAMT
        ,STG.VACREATIONCHRGAMT,     STG.POBOSETUPFEECHRGAMT,     STG.SADADBILLPAY,     STG.GOVTPAY
        ,STG.INVPAY,     STG.CAPTURECRN,     STG.CUSTREFNO,     STG.SCANNINGBY
        ,STG.PAYADVUPLOAD,     STG.BENREGAPPR,     STG.DEALREFNO,     STG.POBOSETUPFEECHRGVATPER
        ,STG.VACREATIONFEECHRGVATPER,     STG.VASETUPFEECHRGVATPER,     STG.WPSSVCFLAG,     STG.WPSKSA
        ,STG.WPSBAH,     STG.WPSUAE,     STG.INVPRINTFLAG,     STG.DIGITSIGNCER
        ,STG.SECURITYCER,     STG.ENCTYPE,     STG.H2HMAKERID,     STG.KEYSENDDATE
        ,'N'/*,     STG.LSTUPDDATE,     STG.ZIPCODE,     STG.PRICNTFAXNO
        ,STG.SECCNTFAXNO,     STG.TRANSACTIONID,     STG.UPDATEDFLAG,    STG.CUSTCAT*/
--        ,MAUSR.USERID,APUSR.USERID,MDUSR.USERID
        FROM VAM_MIGVTCMCUST STG
        INNER JOIN VT_COB.VTCMSTCUST STC  ON STG.GCIFNO=STC.GCIFNO
        LEFT JOIN VT_COB.VTCMCUST CUST  ON CUST.GCIFNO=STG.GCIFNO
        WHERE  STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S' AND CUST.CUSTID IS NULL;

        UPDATE VT_COB.VTCMCUST SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';

        INSERT INTO VT_IAM.VTCMCUST
        (CUSTID,       GCIFNO
        ,CUSTNAME,       STATUS
        )
        SELECT
         CUSTID,           GCIFNO 
        ,CUSTNAME,   'A'    
        FROM VTCMCUST STG
        WHERE  STG.CRTIP ='MIGVAM' AND 
        GCIFNO NOT IN(SELECT GCIFNO FROM VT_IAM.VTCMCUST WHERE CRTIP='MIGVAM');



/*VTCMCUSTCNTRYMAP*/

DBMS_OUTPUT.PUT_LINE('CNT_MIGVTCMCUST'||6);
DBMS_OUTPUT.PUT_LINE('VTCMCUST '||SQL%ROWCOUNT||' rows inserted.');


        INSERT  INTO VT_COB.VTCMCUSTCNTRYMAP
        (
         CUSTID,        CBSCNTRYID,       STATUS
        ,         CRTDATE,       CRTIP
        ,MDYDATE,              MDYIP,       ISDELETED
        ,APPDATE,             APPIP,       CUSTCNTRYMAPID
--        ,CRTBY, APPBY, MDYBY
        )
         SELECT
         CUST.CUSTID,   '1', 'A',
              SYSDATE,        'MIGVAM'
        ,STG.MDYDATE,         STG.MDYIP,          'N'
        ,SYSDATE,           STG.APPIP,      VT_COB.VTCMCUSTCNTRYMAP_SEQ.NEXTVAL
--        ,MAUSR.USERID,APUSR.USERID,MDUSR.USERID
        FROM VAM_MIGVTCMCUST STG
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO = STG.GCIFNO
        LEFT JOIN VT_COB.VTCMCUSTCNTRYMAP MAP ON CUST.CUSTID=MAP.CUSTID
        WHERE STG.BATCHRUNID = LV_BATCHRUNID AND  MAP.CUSTID IS NULL AND CUST.CRTIP = 'MIGVAM';

        UPDATE VT_COB.VTCMCUSTCNTRYMAP SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';

        DBMS_OUTPUT.PUT_LINE('VTCMCUSTCNTRYMAP '||SQL%ROWCOUNT||' rows inserted.');


        MERGE INTO VAM_MIGVTCMCUST STG
        USING
        (
        SELECT CUST.GCIFNO
        FROM VAM_MIGVTCMCUST STG
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STG.GCIFNO
        WHERE STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S'
        GROUP BY CUST.GCIFNO
        )A ON  (A.GCIFNO=STG.GCIFNO)
        WHEN MATCHED THEN
        UPDATE SET STG.MIGSTATUSCODE='M', STG.MIGSTATUSDESC = 'MIGRATION SUCCESSFUL'
        WHERE STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S';

DBMS_OUTPUT.PUT_LINE('CNT_MIGVTCMCUST'||7);

ELSE
v_ENDTIME := SYSDATE;
END IF;

/*CUST EXECUTION END*/

/*CIF VALIDATION START*/


SELECT COUNT(1) INTO CNT_MIGVTCMCUSTCIF FROM VAM_MIGVTCMCUSTCIF WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';

		IF CNT_MIGVTCMCUSTCIF > 0
	THEN

        MERGE INTO VAM_MIGVTCMCUSTCIF STG using
        (
        SELECT  STG1.GCIFNO,CU.CUSTID
        FROM VAM_MIGVTCMCUSTCIF STG1
        INNER JOIN VT_COB.VTCMCUST CU ON CU.GCIFNO=STG1.GCIFNO
        WHERE  BATCHRUNID = LV_BATCHRUNID
        GROUP BY STG1.GCIFNO,CU.CUSTID
        ) A ON (STG.GCIFNO=A.GCIFNO)
        WHEN MATCHED THEN
        UPDATE  SET STG.CUSTID=A.CUSTID
        WHERE BATCHRUNID = LV_BATCHRUNID;

        MERGE INTO VAM_MIGVTCMCUSTCIF STG using
        (
           SELECT  STG1.CIFNO,STG1.GCIFNO,STG1.CUSTID
        FROM VAM_MIGVTCMCUSTCIF STG1
        INNER JOIN VT_COB.VTCMCUST CU ON CU.GCIFNO=STG1.GCIFNO AND STG1.CUSTID=CU.CUSTID
        INNER JOIN VT_COB.VTCMCUSTCIF CUST ON CUST.CIFNO = STG1.CIFNO AND STG1.CUSTID=CUST.CUSTID
        WHERE  BATCHRUNID = LV_BATCHRUNID AND STG1.MIGSTATUSCODE='P'
        GROUP BY STG1.CIFNO,STG1.GCIFNO,STG1.CUSTID
        ) A ON (STG.CIFNO=A.CIFNO AND STG.GCIFNO=A.GCIFNO)
        WHEN MATCHED THEN
        UPDATE  SET MIGSTATUSCODE='F', MIGSTATUSDESC= 'CIF DATA ALREADY AVAILABLE IN GCN'
        WHERE BATCHRUNID = LV_BATCHRUNID AND MIGSTATUSCODE='P';


        UPDATE VAM_MIGVTCMCUSTCIF STG1 SET  MIGSTATUSCODE='F', MIGSTATUSDESC= 'CIF AND GCIF DATA IS NOT AVAILABLE IN GCN Staging Table'
        WHERE BATCHRUNID=LV_BATCHRUNID AND 
        NOT EXISTS (SELECT 1 FROM VT_COB.VTCMSTCUSTCIF  CUSTCIF WHERE CUSTCIF.CIFNO = STG1.CIFNO AND  CUSTCIF.GCIFNO = STG1.GCIFNO);

		SELECT COUNT(1) INTO v_FAILCNT FROM VAM_MIGVTCMCUSTCIF WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE = 'F';

		UPDATE VAM_MIGVTCMCUSTCIF
		SET MIGSTATUSCODE='S',
		   MIGSTATUSDESC = 'VALIDATION SUCCESSFUL'
		WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';

		SELECT COUNT(1) INTO v_TOTCNT FROM VAM_MIGVTCMCUSTCIF WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';

/*CIF VALIDATION END*/

/*CIF EXECUTION START*/

/*VTCMCUSTCIF*/
/*ISLAMIC INDICATOR,TARGET CODE*/

         INSERT INTO VT_COB.VTCMCUSTCIF
        (
        CIFID,                  CIFNO,                       CUSTID,                             STATUS
        ,                 CRTDATE,                     CRTIP,                              APPDATE
        ,                 APPIP,                       MDYDATE,
        MDYIP,                 CIFNAME,                     BRANCH,                             PRIMARYCIF
        ,CBXSYNCDATE,           CBXSYNCBATCHRUNID,           COUNTRYCODE2,                       ISDELETED
       ,ISLAMICINDICATOR/*,      ENTITYNAME,                  ENTITYID,                           ENTITYNO
        ,TRANSACTIONID,         UPDATEDFLAG,                 TARGETCODE,                         FXRATESEGMENT
        ,FXRATESUBSEGMENT,      ADDRESS1,                    ADDRESS2,                           ADDRESS3
        ,CITY,                  COUNTRYNAME,                 REGMBLNO1,                          REGMBLNO2
       ,REGMBLNO3,             REGMBLNO4,                   REGMBLNO5,                          REGMBLNO6
        ,PHONE,                 EMAILID,                     FAX1,                               FAX2
        ,FAX3,                  FAX4,                        FAX5,                               FAX6*/
--        ,CRTBY, APPBY, MDYBY
        )

        SELECT
         VT_COB.VTCMCUSTCIF_CIFID_SEQ.NEXTVAL,          STG.CIFNO,             CUST.CUSTID,               STG.STATUS
        ,                                   STG.CRTDATE,           'MIGVAM',                 STG.APPDATE
        ,                                    STG.APPIP,             STG.MDYDATE,
        STG.MDYIP,                              STG.CIFNAME,           STG.BRANCH,                STG.PRIMARYCIF
        ,STG.CBXSYNCDATE,                        STG.CBXSYNCBATCHRUNID, STG.COUNTRYCODE2,          STG.ISDELETED
        ,'N' AS ISLAMICINDICATOR/*,                   STG.ENTITYNAME,        STG.ENTITYID,              STG.ENTITYNO
        ,STG.TRANSACTIONID,                      STG.UPDATEDFLAG,       STG.TARGETCODE,            STG.FXRATESEGMENT
        ,STG.FXRATESUBSEGMENT,                   STG.ADDRESS1,          STG.ADDRESS2,              STG.ADDRESS3
        ,STG.CITY,                               STG.COUNTRYNAME,       STG.REGMBLNO1,             STG.REGMBLNO2
        ,STG.REGMBLNO3,                          STG.REGMBLNO4          STG.REGMBLNO,             STG.REGMBLNO6
        ,STG.PHONE,                              STG.EMAILID            STG.FAX1,                  STG.FAX2
        ,STG.FAX3,                               STG.FAX4,              STG.FAX5,                  STG.FAX6*/
--        ,MAUSR.USERID,APUSR.USERID,MDUSR.USERID
        FROM VAM_MIGVTCMCUSTCIF STG
        INNER JOIN VT_COB.VTCMSTCUSTCIF CUSTCIF ON CUSTCIF.GCIFNO = STG.GCIFNO AND CUSTCIF.CIFNO = STG.CIFNO
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO = STG.GCIFNO
        LEFT OUTER JOIN VT_COB.VTCMCUSTCIF  CUSTCIF ON CUSTCIF.CIFNO = STG.CIFNO AND CUST.CUSTID = CUSTCIF.CUSTID
        WHERE  STG.BATCHRUNID =LV_BATCHRUNID AND CUSTCIF.CIFID IS NULL AND STG.MIGSTATUSCODE='S' ;

        UPDATE VT_COB.VTCMCUSTCIF SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';

        DBMS_OUTPUT.PUT_LINE('VTCMCUSTCIF '||SQL%ROWCOUNT||' rows inserted.');

DBMS_OUTPUT.PUT_LINE(1);

       MERGE INTO VAM_MIGVTCMCUSTCIF STG
        USING
        (
        SELECT CUST.CIFNO,C.GCIFNO
        FROM VAM_MIGVTCMCUSTCIF STG
        INNER JOIN VT_COB.VTCMCUSTCIF  CUST ON CUST.CIFNO = STG.CIFNO
        INNER JOIN VT_COB.VTCMCUST C ON STG.GCIFNO=C.GCIFNO
        WHERE STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S'
        GROUP BY CUST.CIFNO,C.GCIFNO
        )A ON  (A.CIFNO=STG.CIFNO AND A.GCIFNO=STG.GCIFNO )
        WHEN MATCHED THEN
        UPDATE SET STG.MIGSTATUSCODE='M', STG.MIGSTATUSDESC = 'MIGRATION SUCCESSFUL'
        WHERE STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S';


ELSE
v_ENDTIME := SYSDATE;
END IF;
/*CIF EXECUTION END*/

/*ACCCIF VALIDATION START*/



     CNT_MIGVTCMCUSTACCCIF := 1;

		IF CNT_MIGVTCMCUSTACCCIF > 0
	THEN

 MERGE INTO VAM_MIGVTCMCUSTACCCIF STG using
        (
        SELECT  STG1.CUSTID
        FROM VAM_MIGVTCMCUSTACCCIF STG1
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.CUSTID = STG1.CUSTID
        WHERE  BATCHRUNID = LV_BATCHRUNID AND STG1.MIGSTATUSCODE='P' AND CUST.GCIFNO IS NULL
        GROUP BY STG1.CUSTID
        ) A ON (STG.CUSTID=A.CUSTID)
        WHEN MATCHED THEN
        UPDATE  SET MIGSTATUSCODE='F', MIGSTATUSDESC= 'GCIFID is not available in the Customer table'
        WHERE BATCHRUNID = LV_BATCHRUNID AND MIGSTATUSCODE='P';

        MERGE INTO VAM_MIGVTCMCUSTACCCIF STG using
        (
        SELECT  STG.CUSTID
        FROM VAM_MIGVTCMCUSTACCCIF STG
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.CUSTID = STG.CUSTID
        INNER JOIN VT_COB.VTCMCUSTCIF  CUSTCIF ON CUSTCIF.CIFNO = STG.CIFID and CUSTCIF.CUSTID = CUST.CUSTID
        WHERE  BATCHRUNID = LV_BATCHRUNID AND STG.MIGSTATUSCODE='P' AND CUSTCIF.CIFNO IS NULL
        GROUP BY  STG.CUSTID
        ) A ON (STG.CUSTID=A.CUSTID)
        WHEN MATCHED THEN
        UPDATE  SET MIGSTATUSCODE='F', MIGSTATUSDESC= 'CIFID is not available in the CIF table'
        WHERE BATCHRUNID = LV_BATCHRUNID AND MIGSTATUSCODE='P';

DBMS_OUTPUT.PUT_LINE(1);

/* Duplicate check */

        MERGE INTO VAM_MIGVTCMCUSTACCCIF STG using
        (
        SELECT ACCID,CIFID, CUSTID,COUNT(1) AS CNT
        FROM  VAM_MIGVTCMCUSTACCCIF
        WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P'
        GROUP BY ACCID,CIFID, CUSTID
        HAVING  COUNT(1)>1
        )  SQ ON (SQ.ACCID=STG.ACCID AND SQ.CIFID=STG.CIFID AND SQ.CUSTID=STG.CUSTID)
        WHEN MATCHED THEN
        UPDATE  SET MIGSTATUSCODE='F', MIGSTATUSDESC= 'DATA DUPLICATED WITH IN THE FILE'
        WHERE BATCHRUNID = LV_BATCHRUNID AND MIGSTATUSCODE='P';


DBMS_OUTPUT.PUT_LINE(2);
/* Already VAM_MIGrated */

 UPDATE VAM_MIGVTCMCUSTACC STG SET STG.MIGSTATUSCODE='F', STG.MIGSTATUSDESC = 'ACCOUNT NUMBER IS NOT AVAILABLE IN STAGING GCN'
 WHERE ACCNO NOT IN (SELECT ACCNO FROM VT_COB.VTCMSTCUSTACC ) AND BATCHRUNID=LV_BATCHRUNID;-- AND MIGSTATUSCODE='P';

 UPDATE VAM_MIGVTCMCUSTACC STG SET STG.MIGSTATUSCODE='F', STG.MIGSTATUSDESC = 'ACCOUNT NUMBER IS AVAILABLE IN GCN'
 WHERE ACCNO IN (SELECT ACCNO FROM VT_COB.VTCMCUSTACC ) AND BATCHRUNID=LV_BATCHRUNID;-- AND MIGSTATUSCODE='P';

UPDATE VAM_MIGVTCMCUSTACC
        SET MIGSTATUSCODE = 'S', MIGSTATUSDESC = 'VALIDATION SUCCESSFUL'
        WHERE BATCHRUNID = LV_BATCHRUNID AND MIGSTATUSCODE ='P';

/*ACCCIF VALIDATION START*/

/*ACCCIF EXECUTION START*/

    INSERT INTO VT_COB.VTCMCUSTACC
       (
       ACCID,                 ACCNO,                IBAN,                          ACCNAME,
       ACCTYPE,               EMAIL,                CURRENCY,                      BRANCHCODE,
       ACCSTATUS,             STATUS,                                        CRTDATE,
       CRTIP,                 MDYDATE,                                       MDYIP,
       CHRGFLAG,              IMRCHRGTYPE,          IMRCHRGAMT,                    PERUSRCHRGTYPE,
       PERUSRCHRGAMT,         SETUPFEECHRGTYPE,     SETUPFEECHRGAMT,               VATCHRGTYPE,
       VATCHRGAMT,            SETUPFEECHRGVATPER,   PARTNERREGFEETYPE,             PARTNERREGFEEAMT,
       PARTNERREGFEEPER,      PERTXNFEETYPE ,       PERTXNFEEAMT,                  PERTXNFEEVAT,
       VAAMCFEETYPE,          VAAMCFEEAMT,          VAAMCFEEVAT,                   CHARGEFROM,
       EXECDATE,              CBXSYNCDATE,          CBXSYNCBATCHRUNID,             COUNTRYCODE2,
       CLOSURE_FLAG,          NO_CREDIT,            NO_DEBIT,                      BLOCKED,
       DORMANT,               STOP_PAYMENT,         DELINGUENCY_STATUS,            STPFLAG,        ACCPRDTYPE,
       NONSTPFLAG,            AUTOTRIGGER           /*,ISDELETED,                  APPBY,
       APPDATE,               APPIP,                PRDIDNT,                       OTCFLAG,
       CIF_ID,                CIF_NAME,             ACCPRDTYPE,                    ACCUNITIDNT,
       ACCNICKNAME,           TERM ,                CONTRACTSTATUS,                MATURITYDATE,
       ISOPERATIVE,           BUSACCTYPE,           PRDDESC,                       ACCCATEGORY,
       ENTITYNAME,            BOOKINGDATE,          ROLLOVERTERM,                  INTERESTBASERATE,
       STARTDATE,             ORGPRINCIPALAMT,      INTERESTONMATURITY,            FUNDINGACCNO,
       PRINSETTLEACCNO,       INTSETTLEACCNO,       CLOSUREDATE,                   DISBURSEMENTACCNO,
       INTREPAYACCNO,         BRANCHNAME,           BICCODE,                       BANKNAME,
       POSTRESCODE,           SEGMENT,              ACCOUNTOFFICER,                CIFNO,
       CLOSUREFLAG,           OLDACCNO,             CRNSTP,                        DRNSTP,
       MUREXTYPE,             TENOR*/
       --,CRTBY,  MDYBY
        )
    SELECT
        VT_COB.VTCMCUSTACC_ACCID_SEQ.NEXTVAL , ACCNO,                IBAN,                          ACCNAME,
       ACCTYPE,               EMAIL,                CURRENCY,                      BRANCHCODE,
       ACCSTATUS,             STATUS,                                        CRTDATE,
       'MIGVAM',                 MDYDATE,                                       MDYIP,
       CHRGFLAG,              IMRCHRGTYPE,          IMRCHRGAMT,                    PERUSRCHRGTYPE,
       PERUSRCHRGAMT,         SETUPFEECHRGTYPE,     SETUPFEECHRGAMT,               VATCHRGTYPE,
       VATCHRGAMT,            SETUPFEECHRGVATPER,   PARTNERREGFEETYPE,             PARTNERREGFEEAMT,
       PARTNERREGFEEPER,      PERTXNFEETYPE ,       PERTXNFEEAMT,                  PERTXNFEEVAT,
       VAAMCFEETYPE,          VAAMCFEEAMT,          VAAMCFEEVAT,                   CHARGEFROM,
       EXECDATE,              CBXSYNCDATE,          CBXSYNCBATCHRUNID,             COUNTRYCODE2,
       CLOSURE_FLAG,          NO_CREDIT,            NO_DEBIT,                      BLOCKED,
       DORMANT,               STOP_PAYMENT,         DELINGUENCY_STATUS,            STPFLAG,      'C',
       NONSTPFLAG,            AUTOTRIGGER           /*,ISDELETED,                  APPBY,
       APPDATE,               APPIP,                PRDIDNT,                       OTCFLAG,
       CIF_ID,                CIF_NAME,             ACCPRDTYPE,                    ACCUNITIDNT,
       ACCNICKNAME,           TERM ,                CONTRACTSTATUS,                MATURITYDATE,
       ISOPERATIVE,           BUSACCTYPE,           PRDDESC,                       ACCCATEGORY,
       ENTITYNAME,            BOOKINGDATE,          ROLLOVERTERM,                  INTERESTBASERATE,
       STARTDATE,             ORGPRINCIPALAMT,      INTERESTONMATURITY,            FUNDINGACCNO,
       PRINSETTLEACCNO,       INTSETTLEACCNO,       CLOSUREDATE,                   DISBURSEMENTACCNO,
       INTREPAYACCNO,         BRANCHNAME,           BICCODE,                       BANKNAME,
       POSTRESCODE,           SEGMENT,              ACCOUNTOFFICER,                CIFNO,
       CLOSUREFLAG,           OLDACCNO,             CRNSTP,                        DRNSTP,
       MUREXTYPE,             TENOR*/
--       ,CRTBY,  MDYBY
        FROM (SELECT STG.ACCID,             STG.ACCNO,                       STG.IBAN,                   STG.ACCNAME,
         STG.ACCTYPE,                        STG.EMAIL,                       STG.CURRENCY,               STG.BRANCHCODE,
         STG.ACCSTATUS,                      STG.STATUS,                                        STG.CRTDATE,
         STG.CRTIP,                          STG.MDYDATE,                                       STG.MDYIP,
         STG.CHRGFLAG,                       STG.IMRCHRGTYPE,                 STG.IMRCHRGAMT,             STG.PERUSRCHRGTYPE,
         STG.PERUSRCHRGAMT,                  STG.SETUPFEECHRGTYPE,            STG.SETUPFEECHRGAMT,        STG.VATCHRGTYPE,
         STG.VATCHRGAMT,                     STG.SETUPFEECHRGVATPER,          STG.PARTNERREGFEETYPE,      STG.PARTNERREGFEEAMT,
         STG.PARTNERREGFEEPER,               STG.PERTXNFEETYPE,               STG.PERTXNFEEAMT,           STG.PERTXNFEEVAT,
         STG.VAAMCFEETYPE,                   STG.VAAMCFEEAMT,                 STG.VAAMCFEEVAT,            STG.CHARGEFROM,
         STG.EXECDATE,                       STG.CBXSYNCDATE,                 STG.CBXSYNCBATCHRUNID,      STG.COUNTRYCODE2,
         STG.CLOSURE_FLAG,                   STG.NO_CREDIT,                   STG.NO_DEBIT,               STG.BLOCKED,
         STG.DORMANT,                        STG.STOP_PAYMENT,                STG.DELINGUENCY_STATUS,     STG.STPFLAG,
         STG.NONSTPFLAG,                     STG.AUTOTRIGGER                  /*,STG.ISDELETED,           STG.APPBY,
         STG.APPDATE,                        STG.APPIP,                       STG.PRDIDNT,                STG.OTCFLAG,
         STG.CIF_ID,                         STG.CIF_NAME ,                   STG.ACCPRDTYPE,             STG.ACCUNITIDNT,
         STG.ACCNICKNAME,                    STG.TERM,                        STG.CONTRACTSTATUS,         STG.MATURITYDATE,
         STG.ISOPERATIVE,                    STG.BUSACCTYPE,                  STG.PRDDESC,                STG.ACCCATEGORY,
         STG.ENTITYNAME,                     STG.BOOKINGDATE,                 STG.ROLLOVERTERM,           STG.INTERESTBASERATE,
         STG.STARTDATE,                      STG.ORGPRINCIPALAMT,             STG.INTERESTONMATURITY,     STG.FUNDINGACCNO,
         STG.PRINSETTLEACCNO,                STG.INTSETTLEACCNO,              STG.CLOSUREDATE,            STG.DISBURSEMENTACCNO,
         STG.INTREPAYACCNO,                  STG.BRANCHNAME,                  STG.BICCODE,                STG.BANKNAME,
         STG.POSTRESCODE,                    STG.SEGMENT,                     STG.ACCOUNTOFFICER,         STG.CIFNO,
         STG.CLOSUREFLAG,                    STG.OLDACCNO,                    STG.CRNSTP,                 STG.DRNSTP,
         STG.MUREXTYPE ,                     STG.TENOR */
--         ,MAUSR.USERID AS CRTBY,MDUSR.USERID AS MDYBY
    FROM VAM_MIGVTCMCUSTACC STG
    INNER JOIN VT_COB.VTCMSTCUSTACC STACC  ON STACC.ACCNO=STG.ACCNO
    LEFT JOIN VT_COB.VTCMCUSTACC ACC  ON ACC.ACCNO=STG.ACCNO

    WHERE  STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S' AND ACC.ACCID IS NULL
    GROUP BY
        STG.ACCID,                           STG.ACCNO,                       STG.IBAN,                   STG.ACCNAME,
         STG.ACCTYPE,                        STG.EMAIL,                       STG.CURRENCY,               STG.BRANCHCODE,
         STG.ACCSTATUS,                      STG.STATUS,                                        STG.CRTDATE,
         STG.CRTIP,                          STG.MDYDATE,                                       STG.MDYIP,
         STG.CHRGFLAG,                       STG.IMRCHRGTYPE,                 STG.IMRCHRGAMT,             STG.PERUSRCHRGTYPE,
         STG.PERUSRCHRGAMT,                  STG.SETUPFEECHRGTYPE,            STG.SETUPFEECHRGAMT,        STG.VATCHRGTYPE,
         STG.VATCHRGAMT,                     STG.SETUPFEECHRGVATPER,          STG.PARTNERREGFEETYPE,      STG.PARTNERREGFEEAMT,
         STG.PARTNERREGFEEPER,               STG.PERTXNFEETYPE,               STG.PERTXNFEEAMT,           STG.PERTXNFEEVAT,
         STG.VAAMCFEETYPE,                   STG.VAAMCFEEAMT,                 STG.VAAMCFEEVAT,            STG.CHARGEFROM,
         STG.EXECDATE,                       STG.CBXSYNCDATE,                 STG.CBXSYNCBATCHRUNID,      STG.COUNTRYCODE2,
         STG.CLOSURE_FLAG,                   STG.NO_CREDIT,                   STG.NO_DEBIT,               STG.BLOCKED,
         STG.DORMANT,                        STG.STOP_PAYMENT,                STG.DELINGUENCY_STATUS,     STG.STPFLAG,
         STG.NONSTPFLAG,                     STG.AUTOTRIGGER--,
         --MAUSR.USERID,MDUSR.USERID
         /*,STG.ISDELETED,           STG.APPBY,
         STG.APPDATE,                        STG.APPIP,                       STG.PRDIDNT,                STG.OTCFLAG,
         STG.CIF_ID,                         STG.CIF_NAME ,                   STG.ACCPRDTYPE,             STG.ACCUNITIDNT,
         STG.ACCNICKNAME,                    STG.TERM,                        STG.CONTRACTSTATUS,         STG.MATURITYDATE,
         STG.ISOPERATIVE,                    STG.BUSACCTYPE,                  STG.PRDDESC,                STG.ACCCATEGORY,
         STG.ENTITYNAME,                     STG.BOOKINGDATE,                 STG.ROLLOVERTERM,           STG.INTERESTBASERATE,
         STG.STARTDATE,                      STG.ORGPRINCIPALAMT,             STG.INTERESTONMATURITY,     STG.FUNDINGACCNO,
         STG.PRINSETTLEACCNO,                STG.INTSETTLEACCNO,              STG.CLOSUREDATE,            STG.DISBURSEMENTACCNO,
         STG.INTREPAYACCNO,                  STG.BRANCHNAME,                  STG.BICCODE,                STG.BANKNAME,
         STG.POSTRESCODE,                    STG.SEGMENT,                     STG.ACCOUNTOFFICER,         STG.CIFNO,
         STG.CLOSUREFLAG,                    STG.OLDACCNO,                    STG.CRNSTP,                 STG.DRNSTP,
         STG.MUREXTYPE ,                     STG.TENOR */
        )AB;

UPDATE VT_COB.VTCMCUSTACC SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';


DBMS_OUTPUT.PUT_LINE(1);

 MERGE INTO VAM_MIGVTCMCUSTACCCIF STG
 USING
 (
 SELECT A.OLDCUSTID,B.OLDCIFID,A.CUSTID,B.CIFID
 FROM VAM_MIGVTCMCUST A
 INNER JOIN VAM_MIGVTCMCUSTCIF B ON A.OLDCUSTID=B.OLDCUSTID
 GROUP BY A.OLDCUSTID,B.OLDCIFID,A.CUSTID,B.CIFID
 )A ON (A.OLDCUSTID=STG.OLDCUSTID AND A.OLDCIFID=STG.OLDCIFID)
 WHEN MATCHED THEN
 UPDATE  SET STG.CUSTID=A.CUSTID, STG.CIFID=A.CIFID
 WHERE BATCHRUNID = LV_BATCHRUNID AND A.CUSTID IS NOT NULL AND A.CIFID IS NOT NULL AND MIGSTATUSCODE='P';

 MERGE INTO VAM_MIGVTCMCUSTACCCIF STG
 USING
 (
 SELECT  B.GCIFNO,B.CUSTID
 FROM VAM_MIGVTCMCUSTACCCIF A
 INNER JOIN VTCMCUST B ON A.GCIFNO=B.GCIFNO
 GROUP BY B.GCIFNO,B.CUSTID
 )A ON (A.GCIFNO=STG.GCIFNO)
 WHEN MATCHED THEN
 UPDATE  SET STG.CUSTID=A.CUSTID
 WHERE BATCHRUNID = LV_BATCHRUNID ;

  MERGE INTO VAM_MIGVTCMCUSTACCCIF STG
 USING
 (
 SELECT B.CIFNO,C.GCIFNO,B.CIFID,A.ACCNO
 FROM VAM_MIGVTCMCUSTACCCIF A
 INNER JOIN VT_COB.VTCMCUST C ON C.GCIFNO=A.GCIFNO
 INNER JOIN VT_COB.VTCMCUSTCIF B ON A.CIFNO=B.CIFNO AND C.CUSTID=B.CUSTID
 INNER JOIN VT_COB.VTCMCUSTACC D ON D.ACCNO=A.ACCNO
 WHERE BATCHRUNID=LV_BATCHRUNID AND A.MIGSTATUSCODE='P' AND B.CRTBY IS NOT NULL
 GROUP BY B.CIFNO,C.GCIFNO,B.CIFID,A.ACCNO
 )A ON (A.CIFNO=STG.CIFNO AND A.GCIFNO=STG.GCIFNO AND A.ACCNO=STG.ACCNO)
 WHEN MATCHED THEN
 UPDATE  SET STG.CIFID=A.CIFID
 WHERE BATCHRUNID = LV_BATCHRUNID AND STG.MIGSTATUSCODE='P';

 MERGE INTO VAM_MIGVTCMCUSTACCCIF STG
 USING
 (
 SELECT A.OLDACCNO,B.ACCID
 FROM VAM_MIGVTCMCUSTACCCIF A
 INNER JOIN VT_COB.VTCMCUSTACC B ON A.OLDACCNO=B.ACCNO
-- WHERE A.MIGSTATUSCODE='S'
 GROUP BY  A.OLDACCNO,B.ACCID
 )A ON (A.OLDACCNO=STG.OLDACCNO)
 WHEN MATCHED THEN
 UPDATE  SET STG.ACCID=A.ACCID
 WHERE BATCHRUNID = LV_BATCHRUNID AND STG.MIGSTATUSCODE = 'P';

MERGE INTO VAM_MIGVTCMCUSTACCCIF STG using
        (

        SELECT CUSTCIF.CIFNO,CUST.GCIFNO,CUSACC.ACCNO
        FROM VAM_MIGVTCMCUSTACCCIF STG
        INNER JOIN  VT_COB.VTCMCUST CUST ON CUST.GCIFNO = STG.GCIFNO
        INNER JOIN  VT_COB.VTCMCUSTCIF  CUSTCIF ON CUSTCIF.CIFNO = STG.CIFNO
        INNER JOIN VT_COB.VTCMCUSTACC   CUSACC ON CUSACC.ACCNO = STG.ACCNO
        INNER JOIN VT_COB.VTCMCUSTACCCIF CUSACCCIF ON CUSACCCIF.CIFID = CUSTCIF.CIFID
        AND CUSACCCIF.CUSTID = CUST.CUSTID AND CUSACCCIF.ACCID = CUSACC.ACCID
        WHERE STG.BATCHRUNID = LV_BATCHRUNID AND STG.MIGSTATUSCODE = 'P'
        GROUP BY CUSTCIF.CIFNO,CUST.GCIFNO,CUSACC.ACCNO
        ) A ON (STG.GCIFNO=A.GCIFNO AND A.CIFNO=STG.CIFNO AND A.ACCNO=STG.ACCNO)
        WHEN MATCHED THEN
        UPDATE  SET MIGSTATUSCODE='F', MIGSTATUSDESC= 'DATA ALREADY AVAILABLE IN GCN'
        WHERE BATCHRUNID = LV_BATCHRUNID AND MIGSTATUSCODE='P';

UPDATE VAM_MIGVTCMCUSTACCCIF STG
SET STG.MIGSTATUSCODE='F', STG.MIGSTATUSDESC = 'ACCOUNT NUMBER IS NOT AVAILABLE IN GCN'
WHERE ACCNO NOT IN (SELECT ACCNO FROM VT_COB.VTCMSTCUSTACC)
AND BATCHRUNID = LV_BATCHRUNID AND STG.MIGSTATUSCODE = 'P';

  UPDATE VAM_MIGVTCMCUSTACCCIF STG1 SET  MIGSTATUSCODE='F', MIGSTATUSDESC= 'CIF AND GCIF AND ACC DATA IS NOT AVAILABLE IN GCN Staging Table'
        WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE = 'P' AND
        NOT EXISTS (SELECT 1 FROM VT_COB.VTCMSTCUSTACCCIF  CUSTCIF WHERE CUSTCIF.CIFNO = STG1.CIFNO 
        AND  CUSTCIF.GCIFNO = STG1.GCIFNO AND CUSTCIF.ACCNO = STG1.ACCNO  );

         UPDATE VAM_MIGVTCMCUSTACCCIF STG1 SET  MIGSTATUSCODE='F', MIGSTATUSDESC= 'ACCCIF-CIF DATA IS NOT AVAILABLE IN GCN'
        WHERE BATCHRUNID=LV_BATCHRUNID AND 
        NOT EXISTS (SELECT 1 FROM VT_COB.VTCMCUSTCIF  CUSTCIF WHERE CUSTCIF.CIFNO = STG1.CIFNO );


        UPDATE VAM_MIGVTCMCUSTACCCIF
        SET MIGSTATUSCODE = 'S', MIGSTATUSDESC = 'VALIDATION SUCCESSFUL'
        WHERE BATCHRUNID = LV_BATCHRUNID AND MIGSTATUSCODE ='P';
        DBMS_OUTPUT.PUT_LINE(5);

    INSERT INTO VT_COB.VTCMCUSTACCCIF
     (
       ACCCIFID,             CUSTID,               CIFID,              ACCID,
       STATUS,                               CRTDATE,            CRTIP,
       APPDATE,                              APPIP,              MDYDATE,
                       MDYIP,                ISDELETED,          ACCCHECK
      /* ACTIONTYPE,           ACCFLAG)*/
--      ,CRTBY, APPBY, MDYBY
      )
    SELECT
      VT_COB.VTCMCUSTACCCIF_ACCCIFID_SEQ.NEXTVAL,  CUSTID,               CIFID,              ACCID,
       STATUS,                               CRTDATE,            CRTIP,
       APPDATE,                              APPIP,              MDYDATE,
                       MDYIP,                ISDELETED,          ACCCHECK

      FROM (SELECT CUST.CUSTID,       CIF.CIFID,           ACC.ACCID,
      STG.STATUS,                                            STG.CRTDATE,         'MIGVAM' CRTIP,
      STG.APPDATE,                                          STG.APPIP,           STG.MDYDATE,
                                          STG.MDYIP ,        'N' AS ISDELETED,                 STG.ACCCHECK
      /*STG.ACTIONTYPE                               STG.ACCFLAG*/
--      ,MAUSR.USERID,APUSR.USERID,MDUSR.USERID
      FROM VAM_MIGVTCMCUSTACCCIF STG
    INNER JOIN VT_COB.VTCMSTCUSTACCCIF CUSTACC ON CUSTACC.GCIFNO=STG.GCIFNO AND CUSTACC.CIFNO=STG.CIFNO AND CUSTACC.ACCNO=STG.ACCNO
    INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STG.GCIFNO
    LEFT JOIN VT_COB.VTCMCUSTCIF  CIF ON CIF.CUSTID=CUST.CUSTID AND STG.CIFNO=CIF.CIFNO AND CIF.CUSTID IS NOT NULL
    INNER JOIN VT_COB.VTCMCUSTACC ACC  ON ACC.ACCNO=STG.ACCNO
    LEFT JOIN VT_COB.VTCMCUSTACCCIF  ACIF ON ACIF.CUSTID=CUST.CUSTID AND STG.CIFID=CIF.CIFID AND ACIF.ACCID=STG.ACCID
    WHERE  STG.BATCHRUNID = LV_BATCHRUNID AND  ACIF.ACCCIFID IS NULL AND STG.MIGSTATUSCODE = 'S'
    GROUP BY
    STG.ACCCIFID,          CUST.CUSTID,       CIF.CIFID,           ACC.ACCID,
      STG.STATUS,                                            STG.CRTDATE,         STG.CRTIP,
      STG.APPDATE,                                          STG.APPIP,           STG.MDYDATE,
                                          STG.MDYIP ,        'N',                 STG.ACCCHECK
      /*STG.ACTIONTYPE                               STG.ACCFLAG*/
--      ,MAUSR.USERID,APUSR.USERID,MDUSR.USERID
      )A;

UPDATE VT_COB.VTCMCUSTACCCIF SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';

        DBMS_OUTPUT.PUT_LINE('VTCMCUSTACCCIF '||SQL%ROWCOUNT||' rows inserted.');

DBMS_OUTPUT.PUT_LINE(2);

        MERGE INTO VAM_MIGVTCMCUSTACCCIF STG
        USING (
        SELECT CUST.GCIFNO,CIF.CIFNO,ACC.ACCNO
        FROM VAM_MIGVTCMCUSTACCCIF STG
        INNER JOIN  VT_COB.VTCMCUST CUST ON CUST.GCIFNO = STG.GCIFNO
        INNER JOIN  VT_COB.VTCMCUSTCIF  CIF ON  CIF.CIFNO=STG.CIFNO
        INNER JOIN VT_COB.VTCMCUSTACC   ACC ON ACC.ACCNO = STG.ACCNO
        INNER JOIN VT_COB.VTCMCUSTACCCIF ACCIF ON ACCIF.CUSTID=CUST.CUSTID AND ACCIF.CIFID=CIF.CIFID
        AND ACCIF.ACCID=ACC.ACCID
        WHERE STG.BATCHRUNID = LV_BATCHRUNID AND STG.MIGSTATUSCODE='S' AND
        STG.GCIFNO IN (SELECT GCIFNO FROM VAM_MIGVTCMCUST WHERE MIGSTATUSCODE='M')
        GROUP BY CUST.GCIFNO,CIF.CIFNO,ACC.ACCNO
        )A ON (A.GCIFNO=STG.GCIFNO AND A.CIFNO = STG.CIFNO AND A.ACCNO = STG.ACCNO)
        WHEN MATCHED THEN
        UPDATE SET STG.MIGSTATUSCODE='M',STG.MIGSTATUSDESC='MIGRATION COMPLETED'
        WHERE STG.BATCHRUNID = LV_BATCHRUNID AND STG.MIGSTATUSCODE='S';
ELSE

v_ENDTIME := SYSTIMESTAMP;


END IF;
  /*ACCCIF VALIDATION END*/



		SELECT COUNT(1) INTO v_TOTCNT FROM VAM_MIGVTCMCUSTPRDMAP WHERE BATCHRUNID=LV_BATCHRUNID ;--AND MIGSTATUSCODE='P';

		IF v_TOTCNT > 0
	THEN

DBMS_OUTPUT.PUT_LINE(1);
		SELECT COUNT(1) INTO v_FAILCNT FROM VAM_MIGVTCMCUST WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE = 'F';

/* Duplicate check */

         MERGE INTO VAM_MIGVTCMCUSTPRDMAP STG using
        (
        SELECT PRDID,CUSTID, COUNT(1) AS CNT
        FROM  VAM_MIGVTCMCUSTPRDMAP
        WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P'
        GROUP BY PRDID,CUSTID
        HAVING  COUNT(1)>1
        )  SQ ON (SQ.PRDID=STG.PRDID AND SQ.CUSTID=STG.CUSTID)
        WHEN MATCHED THEN
        UPDATE  SET MIGSTATUSCODE='F', MIGSTATUSDESC= 'DATA DUPLICATED WITH IN THE FILE'
        WHERE BATCHRUNID = LV_BATCHRUNID AND MIGSTATUSCODE='P';

/*ACCPRD VAL START*/
UPDATE VAM_MIGVTCMCUSTPRDMAP
		SET MIGSTATUSCODE='S',
		   MIGSTATUSDESC = 'VALIDATION SUCCESSFUL'
		WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';

         UPDATE VAM_MIGVTCMCUSTSUBPRDMAP
		SET MIGSTATUSCODE='S',
		   MIGSTATUSDESC = 'VALIDATION SUCCESSFUL'
		WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';


		v_ENDTIME := SYSDATE;
/*VTCMCUSTPRDCONFIG*/

      INSERT INTO VT_COB.VTCMCUSTPRDMAP
            (
             CUSTPRDMAPID,      CUSTID,       PRDID
            ,COUNTRYID,     COUNTRYCODE2,       REMARKS
            ,CHECKERREMARKS,       STATUS,       ISDELETED,       CRTIP
            ,CRTDATE,              MDYDATE
            ,MDYIP /*     APPBY,       APPDATE,       APPIP*/
--            ,CRTBY,  MDYBY
            )
        SELECT
             VT_COB.CUSTPRDMAP_ID_SEQ.NEXTVAL,        CUST.CUSTID,        STG.PRDID
            ,1,        'AE',        STG.REMARKS
            ,STG.CHECKERREMARKS,        STG.STATUS,        'N',        'MIGVAM'
            ,STG.CRTDATE,                STG.MDYDATE
            ,STG.MDYIP/*,        STG.APPBY,        STG.APPDATE,        STG.APPIP*/
--            ,MAUSR.USERID,MDUSR.USERID
        FROM VAM_MIGVTCMCUSTPRDMAP STG
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STG.GCIFNO
        INNER JOIN VT_COB.VTSMPRD    PRD ON PRD.PRDID=STG.PRDID
        LEFT JOIN VT_COB.VTCMCUSTPRDMAP C ON C.CUSTID = CUST.CUSTID AND C.PRDID = PRD.PRDID  
        WHERE  STG.BATCHRUNID = LV_BATCHRUNID AND  STG.MIGSTATUSCODE = 'S' AND C.CUSTPRDMAPID IS NULL;

        UPDATE VT_COB.VTCMCUSTPRDMAP SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';

        MERGE INTO VAM_MIGVTCMCUSTSUBPRDMAP STG
        USING
        (
        SELECT CUST.GCIFNO,CUST.CUSTID
        FROM VT_COB.VTCMCUST CUST
         GROUP BY CUST.GCIFNO,CUST.CUSTID
         )A ON  (A.GCIFNO=STG.GCIFNO )
        WHEN MATCHED THEN
        UPDATE SET STG.CUSTID=A.CUSTID;
--
         INSERT INTO VT_COB.VTCMCUSTSUBPRDMAP
         (
         CUSTSUBPRDMAPID,             CUSTID,                      PRDID,              SUBPRDID,
         COUNTRYID,                   COUNTRYCODE2,                REMARKS,            CHECKERREMARKS,
         STATUS,                      ISDELETED,                   CRTIP,              CRTDATE,
                                                       MDYDATE,            MDYIP,
                                APPDATE,                     APPIP
--         ,CRTBY, APPBY, MDYBY
         )
        SELECT
           VT_COB.CUSTSUBPRDMAP_ID_SEQ.NEXTVAL,     B.CUSTID,           C.CUSTPRDID,           C.TRNPRDID,
               1,                           'AE',                A.REMARKS,            A.CHECKERREMARKS,
           A.STATUS,                      NULL,                   'MIGVAM',              A.CRTDATE,
                                                       A.MDYDATE,            A.MDYIP,
            A.APPDATE,                     NULL
--          ,MAUSR.USERID,APUSR.USERID,MDUSR.USERID
         FROM VAM_MIGVTCMCUSTSUBPRDMAP A
         INNER JOIN VT_COB.VTCMCUST B ON A.GCIFNO=B.GCIFNO
         INNER JOIN VT_COB.VTSMTRNPRD C ON C.TRNPRDID=A.SUBPRDMAPID AND C.STATUS='A'
         LEFT JOIN VT_COB.VTCMCUSTSUBPRDMAP D ON D.CUSTID = A.CUSTID AND D.PRDID = C.CUSTPRDID AND D.SUBPRDID = C.TRNPRDID
         WHERE  A.BATCHRUNID =LV_BATCHRUNID AND A.MIGSTATUSCODE='S' AND D.CUSTSUBPRDMAPID IS NULL;

UPDATE VT_COB.VTCMCUSTSUBPRDMAP SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';

        MERGE INTO VAM_MIGVTCMCUSTPRDMAP STG
        USING
        (
        SELECT STG.GCIFNO, PRD.PRDID
        FROM VAM_MIGVTCMCUSTPRDMAP STG
        INNER JOIN VT_COB.VTCMCUSTPRDMAP CUST ON CUST.PRDID=STG.PRDID
        INNER JOIN VT_COB.VTSMPRD    PRD ON PRD.PRDID=STG.PRDID
        WHERE STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S'
         GROUP BY STG.GCIFNO, PRD.PRDID)A ON  (A.GCIFNO=STG.GCIFNO AND A.PRDID=STG.PRDID)
        WHEN MATCHED THEN
        UPDATE SET STG.MIGSTATUSCODE='M', STG.MIGSTATUSDESC = 'MIGRATION SUCCESSFUL'
        WHERE STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S';
 DBMS_OUTPUT.PUT_LINE(4);

ELSE

	v_ENDTIME := SYSDATE;


END IF;



        UPDATE VAM_MIGVTCMCUSTPRDACCCONFIG
		SET MIGSTATUSCODE='S',
		   MIGSTATUSDESC = 'VALIDATION SUCCESSFUL'
		WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';

    /*VTCMCUSTPRDMAP*/
 DBMS_OUTPUT.PUT_LINE(2);
UPDATE VAM_MIGVTCMCUSTSUBPRDCONFIG  STG
        SET MIGSTATUSCODE='F',MIGSTATUSDESC='OTHER PROUCT CONFIGURATION'
        WHERE STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='P' AND SUBPRDCONFIGID IS  NULL;


MERGE INTO VAM_MIGVTCMCUSTSUBPRDCONFIG STG
 USING
 (
 SELECT A.CUSTID,A.GCIFNO
 FROM VAM_MIGVTCMCUST A
  GROUP BY A.CUSTID,A.GCIFNO
 )A ON (A.GCIFNO=STG.GCIFNO)
 WHEN MATCHED THEN
 UPDATE  SET STG.CUSTID=A.CUSTID;

          UPDATE VAM_MIGVTCMCUSTSUBPRDCONFIG
		SET MIGSTATUSCODE='S',
		   MIGSTATUSDESC = 'VALIDATION SUCCESSFUL'
		WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';

  INSERT INTO VT_COB.VTCMCUSTSUBPRDCONFIG
        (
        CUSTSUBPRDCONFIGID,           CUSTID,                   SUBPRDID,                    SUBPRDCONFIGID
        ,VALUE                        ,REMARKS                  ,CHECKERREMARKS              ,STATUS
        ,ISDELETED                    ,CRTIP                    ,CRTDATE
                                ,MDYDATE                  ,MDYIP
       ,APPDATE                      ,APPIP                    ,COUNTRYID ,                  COUNTRYCODE2
--       ,CRTBY, APPBY, MDYBY
        )
  SELECT VT_COB.CUSTSUBPRDCONFIG_ID_SEQ.NEXTVAL,CUSTID,                   SUBPRDID,                   SUBPRDCONFIGID
        ,VALUE                        ,REMARKS                  ,CHECKERREMARKS              ,STATUS
        ,ISDELETED                    ,CRTIP                    ,CRTDATE
                                ,MDYDATE                  ,MDYIP
       ,APPDATE                      ,APPIP                    ,COUNTRYID ,                  COUNTRYCODE2
       FROM (

  select CUST.CUSTID,STG.SUBPRDID, STG.SUBPRDCONFIGID,
  STG.VALUE, STG.REMARKS,STG.CHECKERREMARKS,STG.STATUS
        ,'N' AS ISDELETED                ,'MIGVAM' AS CRTIP                    ,STG.CRTDATE
                                ,STG.MDYDATE                  ,STG.MDYIP
       ,STG.APPDATE                      ,'SYSTEM' AS  APPIP                 ,'1' AS COUNTRYID, 'AE' AS COUNTRYCODE2
       FROM VAM_MIGVTCMCUSTSUBPRDCONFIG STG
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STG.GCIFNO
        LEFT JOIN VT_COB.VTCMCUSTSUBPRDCONFIG S ON S.CUSTID =CUST.CUSTID AND S.SUBPRDID = STG.SUBPRDID AND S.SUBPRDCONFIGID = STG.SUBPRDCONFIGID
        WHERE STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S' AND S.CUSTSUBPRDCONFIGID IS NULL
        GROUP BY

        CUST.CUSTID,STG.SUBPRDID, STG.SUBPRDCONFIGID,
  STG.VALUE, STG.REMARKS,STG.CHECKERREMARKS,STG.STATUS
        ,'N'                  ,'MIGVAM'                    ,STG.CRTDATE
                                ,STG.MDYDATE                  ,STG.MDYIP
       ,STG.APPDATE                      ,'SYSTEM'                    ,'1' ,                  'AE');


UPDATE VT_COB.VTCMCUSTSUBPRDCONFIG SET VALUE= REPLACE(VALUE,'CVA','create,')
WHERE CRTIP='MIGVAM';
UPDATE VT_COB.VTCMCUSTSUBPRDCONFIG SET VALUE= REPLACE(VALUE,'CVA,','create,')
WHERE CRTIP='MIGVAM';
UPDATE VT_COB.VTCMCUSTSUBPRDCONFIG SET VALUE= REPLACE(VALUE,'UVAS,','update,')
WHERE CRTIP='MIGVAM';
UPDATE VT_COB.VTCMCUSTSUBPRDCONFIG SET VALUE= REPLACE(VALUE,'GVAL,','getAccountList,')
WHERE CRTIP='MIGVAM' ;
UPDATE VT_COB.VTCMCUSTSUBPRDCONFIG SET VALUE= REPLACE(VALUE,'VASS,','getVaStatement,')
WHERE CRTIP='MIGVAM';
UPDATE VT_COB.VTCMCUSTSUBPRDCONFIG SET VALUE= REPLACE(VALUE,'VABE','vaBalanceEnquiry')
WHERE CRTIP='MIGVAM';
UPDATE VT_COB.VTCMCUSTSUBPRDCONFIG SET VALUE= REPLACE(VALUE,'VAPE','paymentEnquiry')
WHERE CRTIP='MIGVAM';
UPDATE VT_COB.VTCMCUSTSUBPRDCONFIG SET VALUE= REPLACE(VALUE,'VAPE,','paymentEnquiry,')
WHERE CRTIP='MIGVAM';


UPDATE VT_COB.VTCMCUSTSUBPRDCONFIG SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';

 MERGE INTO VAM_MIGVTCMCUSTPRDACCCONFIG STG
 USING
 (
 SELECT DISTINCT B.GCIFNO,B.CUSTID
 FROM VAM_MIGVTCMCUSTPRDACCCONFIG A
 INNER JOIN VTCMCUST B ON A.GCIFNO=B.GCIFNO
 GROUP BY B.GCIFNO,B.CUSTID
 )A ON (A.GCIFNO=STG.GCIFNO)
 WHEN MATCHED THEN
 UPDATE  SET STG.CUSTID=A.CUSTID
 WHERE BATCHRUNID = LV_BATCHRUNID ;

  MERGE INTO VAM_MIGVTCMCUSTPRDACCCONFIG STG
 USING
 (
 SELECT B.CIFNO,C.GCIFNO,B.CIFID,A.ACCNO
 FROM VAM_MIGVTCMCUSTPRDACCCONFIG A
 INNER JOIN VT_COB.VTCMCUST C ON C.GCIFNO=A.GCIFNO
 INNER JOIN VT_COB.VTCMCUSTCIF B ON A.CIFNO=B.CIFNO AND C.CUSTID=B.CUSTID
 INNER JOIN VT_COB.VTCMCUSTACC D ON D.ACCNO=A.ACCNO
 WHERE BATCHRUNID=LV_BATCHRUNID AND A.MIGSTATUSCODE='P' AND B.CRTBY IS NOT NULL
 GROUP BY B.CIFNO,C.GCIFNO,B.CIFID,A.ACCNO
 )A ON (A.CIFNO=STG.CIFNO AND A.GCIFNO=STG.GCIFNO AND A.ACCNO=STG.ACCNO)
 WHEN MATCHED THEN
 UPDATE  SET STG.CIFID=A.CIFID
 WHERE BATCHRUNID = LV_BATCHRUNID AND STG.MIGSTATUSCODE='P';

MERGE INTO VAM_MIGVTCMCUSTPRDACCCONFIG STG
 USING
 (
 SELECT A.ACCNO,B.ACCID
 FROM VAM_MIGVTCMCUSTPRDACCCONFIG A
 INNER JOIN VT_COB.VTCMCUSTACC B ON A.ACCNO=B.ACCNO
 GROUP BY  A.ACCNO,B.ACCID
 )A ON (A.ACCNO=STG.ACCNO)
 WHEN MATCHED THEN
 UPDATE  SET STG.ACCID=A.ACCID;

 UPDATE VAM_MIGVTCMCUSTPRDACCCONFIG STG SET STG.MIGSTATUSCODE='F', STG.MIGSTATUSDESC = 'ACCOUNT NUMBER IS NOT AVAILABLE IN GCN'
 WHERE ACCNO NOT IN (SELECT ACCNO FROM VT_COB.VTCMSTCUSTACC ) AND BATCHRUNID=LV_BATCHRUNID;-- AND MIGSTATUSCODE='P';

  UPDATE VAM_MIGVTCMCUSTPRDACCCONFIG
		SET MIGSTATUSCODE='S',
		   MIGSTATUSDESC = 'VALIDATION SUCCESSFUL'
		WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';


        INSERT  INTO VT_COB.VTCMCUSTPRDACCONFIG
            (CUSTPRDACCONFIGID,         CUSTID,            		CIFID,         ACCID,         PRDID
            ,SUBPRDID,         			PRDACCONFIGID,         	VALUE,         ISACCSELECTED
            ,REMARKS,         			CHECKERREMARKS,         STATUS,        ISDELETED
            ,CRTIP,         			CRTDATE
            ,MDYDATE,         			MDYIP,         			         APPDATE

            --            ,CRTBY, APPBY, MDYBY
            /*,APPIP,         			ACCFLAG,         		ACCTYPEFLAG,   ACTIONTYPE */
            )

           SELECT VT_COB.CUSTPRDACCONFIG_ID_SEQ.NEXTVAL,
           CUSTID,            		CIFID,         ACCID,         PRDID
            ,SUBPRDID,         			PRDACCONFIGID,         	VALUE,         ISACCSELECTED
            ,REMARKS,         			CHECKERREMARKS,         STATUS,        ISDELETED
            ,'MIGVAM',         			CRTDATE
            ,MDYDATE,         			MDYIP,         			         APPDATE
--            ,CRTBY, APPBY, MDYBY
           FROM (SELECT  CUST.CUSTID,    CIF.CIFID,       ACC.ACCID,       PRD.PRDID
            ,SMAP.SUBPRDID,       	NULL AS PRDACCONFIGID,       	NULL AS VALUE,       'Y' AS ISACCSELECTED
            ,STG.REMARKS,       	STG.CHECKERREMARKS,       	STG.STATUS,      'N' AS ISDELETED
            ,STG.CRTIP,      		STG.CRTDATE
            ,STG.MDYDATE,       	STG.MDYIP,      			      STG.APPDATE --,
--            STG.ACCFLAG,             STG.ACCTYPEFLAG
--            ,MAUSR.USERID AS CRTBY ,APUSR.USERID AS APPBY ,MDUSR.USERID AS MDYBY
            FROM
        VAM_MIGVTCMCUSTPRDACCCONFIG STG
        INNER JOIN VT_COB.VTSMPRD    PRD ON PRD.PRDID=CASE WHEN STG.PRDID =110 THEN '15' ELSE to_char(STG.PRDID) END
        INNER JOIN VT_COB.VTCMCUSTPRDMAP D ON D.PRDID= CASE WHEN STG.PRDID =110 THEN '15' ELSE to_char(STG.PRDID) END AND STG.CUSTID = D.CUSTID
        INNER JOIN VT_COB.VTSMTRNPRD TPRD ON TPRD.CUSTPRDID=D.PRDID AND TPRD.STATUS='A' AND TPRD.ACCTYPE='REAL'
        INNER JOIN VT_COB.VTCMCUSTSUBPRDMAP SMAP ON SMAP.CUSTID=D.CUSTID AND TPRD.TRNPRDID=SMAP.SUBPRDID
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.CUSTID=STG.CUSTID
        INNER JOIN VT_COB.VTCMCUSTCIF  CIF ON CIF.CIFNO=STG.CIFNO  AND STG.CUSTID=CIF.CUSTID --AND STG.CIFID=CIF.CIFID
        INNER JOIN VT_COB.VTCMCUSTACC ACC ON ACC.ACCNO=STG.ACCNO
        INNER JOIN VTCMCUSTACCCIF ACIF ON ACIF.ACCID=ACC.ACCID AND CIF.CIFID=ACIF.CIFID AND CUST.CUSTID=ACIF.CUSTID
        AND ACIF.ACCCHECK='Y'
        LEFT JOIN VT_COB.VTCMCUSTPRDACCONFIG C ON C.CUSTID = CUST.CUSTID AND C.CIFID = CIF.CIFID AND C.PRDID = PRD.PRDID
                  AND C.SUBPRDID = SMAP.SUBPRDID  AND C.ACCID = ACC.ACCID
        WHERE  STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S' AND C.CUSTPRDACCONFIGID IS NULL
        GROUP BY
        CUST.CUSTID,    CIF.CIFID,       ACC.ACCID,       PRD.PRDID
            ,SMAP.SUBPRDID
            ,STG.REMARKS,       	STG.CHECKERREMARKS,       	STG.STATUS,      'N'
            ,STG.CRTIP,      		STG.CRTDATE
            ,STG.MDYDATE,       	STG.MDYIP,      			      STG.APPDATE
--            ,MAUSR.USERID,APUSR.USERID ,MDUSR.USERID
            )A;

UPDATE VT_COB.VTCMCUSTPRDACCONFIG SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';

dbms_output.put_line(1);

--COMMENTING THIS FOR HINT
    MERGE INTO VAM_MIGVTCMCUSTPRDACCCONFIG STG
        USING
        (
        SELECT DISTINCT(STG.GCIFNO)
        FROM VAM_MIGVTCMCUSTPRDACCCONFIG STG
        INNER JOIN VT_COB.VTCMCUSTPRDACCONFIG CUST ON STG.PRDID=CUST.PRDID
        INNER JOIN VT_COB.VTCMCUSTCIF  CIF ON CIF.CIFNO=STG.CIFNO
        INNER JOIN VT_COB.VTCMCUSTACC ACC ON ACC.ACCNO=STG.ACCNO
        INNER JOIN VT_COB.VTSMPRD    PRD ON PRD.PRDID=STG.PRDID
        WHERE STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S'
        )A ON  (A.GCIFNO=STG.GCIFNO)
    WHEN MATCHED THEN
    UPDATE SET STG.MIGSTATUSCODE='M', STG.MIGSTATUSDESC = 'MIGRATION SUCCESSFUL'
    WHERE STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S';
dbms_output.put_line(2);

 DBMS_OUTPUT.PUT_LINE('PROCEDURE COMPLETED AT'||TO_CHAR(SYSDATE,'DD-MM-YYYY HH24:MI:SS'));


  UPDATE VT_COB.VTCMSTCUSTCIF SET COUNTRYCODE2='AE',STATUS='A' WHERE CRTIP='MIGVAM';

        MERGE INTO VTCMCUSTPRDCONFIG A
        USING (SELECT PRDCONFIGID,DEFVALUE
        FROM VTSMPRDCONFIG B
        ) B ON (A.PRDCONFIGID=B.PRDCONFIGID)
        WHEN MATCHED THEN
        UPDATE SET 
        A.VALUE=B.DEFVALUE
        WHERE A.CRTIP='MIGVAM' AND A.VALUE IS NULL;

         MERGE INTO VTCMCUSTSUBPRDCONFIG A
        USING (SELECT SUBPRDCONFIGID,DEFVALUE
        FROM VTSMSUBPRDCONFIG B
        ) B ON (A.SUBPRDCONFIGID=B.SUBPRDCONFIGID)
        WHEN MATCHED THEN
        UPDATE SET 
        A.VALUE=B.DEFVALUE
        WHERE A.CRTIP='MIGVAM' AND A.VALUE IS NULL;


/*MLT SUBPRDCONFIG */


 INSERT INTO VT_COB.VTCMCUSTSUBPRDCONFIG
        (
        CUSTSUBPRDCONFIGID,           CUSTID,                   SUBPRDID,                    SUBPRDCONFIGID
        ,VALUE                        ,STATUS
        ,ISDELETED                    ,CRTIP                    ,COUNTRYID ,                  COUNTRYCODE2
        )
  SELECT 
  VT_COB.CUSTSUBPRDCONFIG_ID_SEQ.NEXTVAL, CUSTID,                   SUBPRDID,                   SUBPRDCONFIGID
        ,VALUE                                ,STATUS
        ,ISDELETED                    ,CRTIP   ,COUNTRYID ,                  COUNTRYCODE2
       FROM (

  select CUST.CUSTID,STG.SUBPRDID, STG.SUBPRDCONFIGID,
       STG.DEFVALUE AS VALUE, 'A' AS STATUS ,'N' AS ISDELETED                
       ,'MIGVAM' AS CRTIP         ,'1' AS COUNTRYID, 'AE' AS COUNTRYCODE2
       FROM VTSMSUBPRDCONFIG STG
         INNER JOIN VT_COB.VTCMCUST CUST ON 1 = 1 AND CUST.CRTIP='MIGVAM'
         INNER JOIN VT_COB.VTCMCUSTSUBPRDMAP SUB ON SUB.CUSTID = CUST.CUSTID AND SUB.SUBPRDID = STG.SUBPRDID 
        LEFT JOIN VT_COB.VTCMCUSTSUBPRDCONFIG S ON S.CUSTID =CUST.CUSTID AND S.SUBPRDID = STG.SUBPRDID AND S.SUBPRDCONFIGID = STG.SUBPRDCONFIGID
        WHERE STG.SUBPRDCONFIGID IN(136,137,133) AND S.CUSTSUBPRDCONFIGID IS NULL
        GROUP BY
              CUST.CUSTID,STG.SUBPRDID, STG.SUBPRDCONFIGID,
        STG.DEFVALUE,'N' ,'MIGVAM'    ,'1' , 'AE');

-- TO_DATE( SUBSTR(A.MDYDATE, 1, 19),'YYYY-MM-DD HH24:MI:SS' ) 



 UPDATE MIG_VAM_VTSTBATCHPRCSTRN SET ENDDATE=SYSDATE
 WHERE BATCHRUNID=LV_BATCHRUNID;

   UPDATE VAM_MIGVTCMSTCUST SET ISMIG='C' WHERE  BATCHRUNID=LV_BATCHRUNID AND ISMIG='Y';
        UPDATE VAM_MIGVTCMSTCUSTCIF SET ISMIG='C' WHERE  BATCHRUNID=LV_BATCHRUNID AND ISMIG='Y';
        UPDATE VAM_MIGVTCMSTCUSTACCCIF SET ISMIG='C' WHERE  BATCHRUNID=LV_BATCHRUNID AND ISMIG='Y';
        UPDATE VAM_MIGVTCMCUST SET ISMIG='C' WHERE  BATCHRUNID=LV_BATCHRUNID AND ISMIG='Y';
        UPDATE VAM_MIGVTCMCUSTCIF SET ISMIG='C' WHERE  BATCHRUNID=LV_BATCHRUNID AND ISMIG='Y';
        UPDATE VAM_MIGVTCMCUSTACCCIF SET ISMIG='C' WHERE  BATCHRUNID=LV_BATCHRUNID AND ISMIG='Y';
        UPDATE VAM_MIGVTCMCUSTACC SET ISMIG='C' WHERE  BATCHRUNID=LV_BATCHRUNID AND ISMIG='Y';
         UPDATE VAM_MIGVTCMCUSTPRDMAP SET ISMIG='C' WHERE  BATCHRUNID=LV_BATCHRUNID AND ISMIG='Y';
        UPDATE VAM_MIGVTCMCUSTSUBPRDMAP SET ISMIG='C' WHERE  BATCHRUNID=LV_BATCHRUNID AND ISMIG='Y';
          UPDATE VAM_MIGVTCMCUSTSUBPRDCONFIG SET ISMIG='C' WHERE  BATCHRUNID=LV_BATCHRUNID AND ISMIG='Y';
        UPDATE VAM_MIGVTCMCUSTPRDACCCONFIG SET ISMIG='C' WHERE  BATCHRUNID=LV_BATCHRUNID AND ISMIG='Y';

COMMIT;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
	BEGIN
		OUT_STATUSCODE :='83';
		OUT_STATUSDESC :=SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
        DBMS_OUTPUT.PUT_LINE('PROCEDURE COMPLETED AT '||TO_CHAR(SYSDATE,'DD-MM-YY HH24:MI:SS'));

		ROLLBACK;
        INSERT INTO VT_COB.VTSMERRLOG(ERRMSG,ERRPROC,ERRDATETIME)
        SELECT OUT_STATUSDESC,'PRC_MIG_CUSTOMER_VAM',SYSTIMESTAMP FROM dual;

        INSERT INTO MIG_VAM_VTSTBATCHPRCSTRN(BATCHRUNID,STARTDATE,ERRMSG,ERRPROC)
        VALUES(LV_BATCHRUNID,SYSDATE,OUT_STATUSDESC,'PRC_MIG_CUSTOMER_VAM');
	END;
	WHEN OTHERS THEN
	BEGIN
		OUT_STATUSCODE :='84';
		OUT_STATUSDESC := SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
        DBMS_OUTPUT.PUT_LINE('PROCEDURE COMPLETED AT '||TO_CHAR(SYSDATE,'DD-MM-YY HH24:MI:SS'));

		ROLLBACK;
        INSERT INTO VT_COB.VTSMERRLOG(ERRMSG,ERRPROC,ERRDATETIME)
        SELECT OUT_STATUSDESC,'PRC_MIG_CUSTOMER_VAM',SYSTIMESTAMP FROM dual;

          INSERT INTO MIG_VAM_VTSTBATCHPRCSTRN(BATCHRUNID,STARTDATE,ERRMSG,ERRPROC)
        VALUES(LV_BATCHRUNID,SYSDATE,OUT_STATUSDESC,'PRC_MIG_CUSTOMER_VAM');

	END;


END PRC_MIG_CUSTOMER_VAM;


---------------4 VT_COB------------------

create or replace PROCEDURE "PRC_MIG_CUSTOMERUSER_VAM" (IN_BATCHRUNID NUMBER,
OUT_STATUSCODE OUT VARCHAR2 ,
	OUT_STATUSDESC OUT VARCHAR2)
AS
  v_STARTTIME TIMESTAMP(3);
  v_ENDTIME TIMESTAMP(3);
  v_TOTCNT NUMBER(10):=0;
  v_SUCCCNT NUMBER(10):=0;
  v_FAILCNT NUMBER(10):=0;
  v_ERRMSG VARCHAR2(4000);
  v_ERRCODE VARCHAR2(100);
  v_ERRPROC VARCHAR2(200);
  v_SESSIONID NUMBER(19);

  LV_BATCHRUNID NUMBER;
BEGIN

 -----------------------------Role Mapping--------------------------------------

        Insert into VTAMPCROLE (ROLEID,ROLENAME,ROLEDESC,ROLETYPE,APPID,STATUS,CRTBY,CRTDATE,CRTIP,
        MDYBY,MDYDATE,MDYIP,APPBY,APPDATE,REMARKS,CHECKERREMARKS,VERSION,ISDELETED,APPIP,ROLECODE) 
        SELECT VTAMPCROLE_ROLEID_SEQ.NEXTVAL,'VAM Migration Role',null,'C',2,'A','102002',
        to_date('11-JAN-24 14:59:50','DD-MON-RR HH24:MI:SS'),'MIGVAM',null,null,null,'101682',
        to_date('11-JAN-24 15:00:10','DD-MON-RR HH24:MI:SS'),null,null,null,'N',null,null
        FROM DUAL
        WHERE NOT EXISTS(SELECT 1 FROM VTAMPCROLE WHERE CRTIP='MIGVAM');

--        Insert into VT_IAM.VTAMPCROLE (ROLEID,ROLENAME,ROLEDESC,ROLETYPE,APPID,STATUS,CRTBY,CRTDATE,CRTIP,
--        MDYBY,MDYDATE,MDYIP,APPBY,APPDATE,REMARKS,CHECKERREMARKS,VERSION,ISDELETED,APPIP,ROLECODE) 
--        SELECT ROLEID,'VAM Customer AllRole 001',null,'C',2,'A','102002',
--        to_date('11-JAN-24 14:59:50','DD-MON-RR HH24:MI:SS'),'MIGVAM',null,null,null,'101682',
--        to_date('11-JAN-24 15:00:10','DD-MON-RR HH24:MI:SS'),null,null,null,'N',null,null
--        FROM VTAMPCROLE
--        WHERE  CRTIP='MIGVAM' AND ROWNUM=1;

        INSERT INTO VTAMPCRLEFNCMAP (RLEFNCMAPID,ROLEID,FUNCID,STATUS,CRTIP)
        SELECT 
        VTAMPCRLE_FNCMAPID_SEQ.NEXTVAL, RLE.ROLEID,1888,'A','MIGVAM'
        FROM  VT_COB.VTAMPCROLE RLE 
        LEFT JOIN VTAMPCRLEFNCMAP B ON  RLE.ROLEID=B.ROLEID AND 1888=B.FUNCID
        WHERE RLE.CRTIP='MIGVAM' AND B.RLEFNCMAPID IS NULL;

        -----------------------------Role Mapping--------------------------------------

         v_STARTTIME := SYSDATE;
         -- ALTER TABLE VAM_MIGVTCMCUSTUSRPRDACCMAP ADD CUSTID VARCHAR(50);
         --GRANT SELECT,INSERT,UPDATE ON VTAMPCRLEFNCMAP TO VT_COB;

DBMS_OUTPUT.PUT_LINE('PROCEDURE STARTED AT'||TO_CHAR(SYSDATE,'DD-MM-YYYY HH24:MI:SS'));


/*
SELECT COUNT(1),'MIGVTAMSTPCUSER			',MIGSTATUSCODE,MIGSTATUSDESC FROM VAM_MIGVTAMSTPCUSER				GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1),'MIGVTAMPCUSER				',MIGSTATUSCODE,MIGSTATUSDESC FROM VAM_MIGVTAMPCUSER                GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1),'MIGVTAMPCUSRRLEMAP			',MIGSTATUSCODE,MIGSTATUSDESC FROM VAM_MIGVTAMPCUSRRLEMAP           GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1),'MIGVTCMCUSTUSRCNTRYMAP		',MIGSTATUSCODE,MIGSTATUSDESC FROM VAM_MIGVTCMCUSTUSRCNTRYMAP       GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1),'MIGVTCMCUSTUSRPRDMAP		',MIGSTATUSCODE,MIGSTATUSDESC FROM VAM_MIGVTCMCUSTUSRPRDMAP         GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1),'MIGVTCMCUSTUSRPRDACCMAP	',MIGSTATUSCODE,MIGSTATUSDESC FROM VAM_MIGVTCMCUSTUSRPRDACCMAP      GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1),'MIGVTCMCUSTUSRPRDACCFNCMAP	',MIGSTATUSCODE,MIGSTATUSDESC FROM VAM_MIGVTCMCUSTUSRPRDACCFNCMAP GROUP BY MIGSTATUSCODE,MIGSTATUSDESC ;
*/

/*

SELECT COUNT(*),'VTAMSTPCUSER'      		FROM VT_COB.VTAMSTPCUSER 	  		WHERE CRTIP='MIGVAM' UNION ALL
SELECT COUNT(*),'VTAMPCUSER'        		FROM VT_COB.VTAMPCUSER 	  			WHERE CRTIP='MIGVAM' UNION ALL
SELECT COUNT(*),'VTAMPCUSRRLEMAP'   		FROM VT_COB.VTAMPCUSRRLEMAP 		WHERE CRTIP='MIGVAM' UNION ALL
SELECT COUNT(*),'VTCMCUSTUSRCNTRYMAP'   	FROM VT_COB.VTCMCUSTUSRCNTRYMAP 	WHERE CRTIP='MIGVAM' UNION ALL
SELECT COUNT(*),'VTCMCUSTUSRPRDMAP'    		FROM VT_COB.VTCMCUSTUSRPRDMAP		WHERE CRTIP='MIGVAM' UNION ALL
SELECT COUNT(*),'VTCMCUSTUSRPRDACCMAP'  	FROM VT_COB.VTCMCUSTUSRPRDACCMAP	WHERE CRTIP='MIGVAM' UNION ALL
SELECT COUNT(*),'VTCMCUSTUSRPRDACCFNCMAP'   FROM VT_COB.VTCMCUSTUSRPRDACCFNCMAP	WHERE CRTIP='MIGVAM' ;
*/

 /*STAGING CUSTOMER USER*/

 LV_BATCHRUNID:=SEQ_MIG_VAM_BATCHRUNID.NEXTVAL;

 INSERT INTO MIG_VAM_VTSTBATCHPRCSTRN(BATCHRUNID,STARTDATE)
   VALUES(LV_BATCHRUNID,SYSDATE);

 UPDATE VAM_MIGVTAMSTPCUSER SET BATCHRUNID=LV_BATCHRUNID WHERE BATCHRUNID IS NULL AND MIGSTATUSCODE='P' AND ISMIG='Y';
 UPDATE VAM_MIGVTAMPCUSER SET BATCHRUNID=LV_BATCHRUNID WHERE BATCHRUNID IS NULL AND MIGSTATUSCODE='P' AND ISMIG='Y';
 UPDATE VAM_MIGVTAMPCUSRRLEMAP SET BATCHRUNID=LV_BATCHRUNID WHERE BATCHRUNID IS NULL AND MIGSTATUSCODE='P' AND ISMIG='Y';
 UPDATE VAM_MIGVTCMCUSTUSRCNTRYMAP SET BATCHRUNID=LV_BATCHRUNID WHERE BATCHRUNID IS NULL AND MIGSTATUSCODE='P' AND ISMIG='Y';
 UPDATE VAM_MIGVTCMCUSTUSRPRDMAP SET BATCHRUNID=LV_BATCHRUNID WHERE BATCHRUNID IS NULL AND MIGSTATUSCODE='P' AND ISMIG='Y';
 UPDATE VAM_MIGVTCMCUSTUSRPRDACCMAP SET BATCHRUNID=LV_BATCHRUNID WHERE BATCHRUNID IS NULL AND MIGSTATUSCODE='P' AND ISMIG='Y';

        MERGE INTO VAM_MIGVTAMSTPCUSER STG using
        (
        SELECT LOGINID, GCIFNO,COUNT(1) AS CNT
        FROM  VAM_MIGVTAMSTPCUSER
        WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P'
        GROUP BY LOGINID, GCIFNO
        HAVING  COUNT(1)>1
        )  SQ ON (SQ.LOGINID=STG.LOGINID AND SQ.GCIFNO=STG.GCIFNO)
        WHEN MATCHED THEN
        UPDATE  SET MIGSTATUSCODE='F', MIGSTATUSDESC= 'DATA DUPLICATED WITH IN THE FILE'
        WHERE BATCHRUNID = LV_BATCHRUNID AND MIGSTATUSCODE='P';


    UPDATE VAM_MIGVTAMSTPCUSER STG
        SET MIGSTATUSCODE='F', MIGSTATUSDESC= 'USER IS ALREADY AVAILABLE IN GCN' 
        WHERE BATCHRUNID = LV_BATCHRUNID AND MIGSTATUSCODE='P' AND 
        EXISTS (SELECT 1 FROM VT_COB.VTAMSTPCUSER A WHERE UPPER(A.LOGINID)=UPPER(STG.LOGINID) AND A.GCIFNO=STG.GCIFNO);


        UPDATE VAM_MIGVTAMSTPCUSER
		SET MIGSTATUSCODE='S',
		   MIGSTATUSDESC = 'VALIDATION SUCCESSFUL'
		WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';

 INSERT INTO VT_COB.VTAMSTPCUSER (
 STUSERID,             	APPID,             	GCIFNO,             CUSTNAME
,ONBOARDFLAG,			LOGINID,			FIRSTNAME,			MIDDLENAME
,LASTNAME,             	DISPLAYNAME,		STREETADDRESS,		CITY
,STATE,             	PINNO,             	COUNTRY,			EMAIL
,MOBCODE,             	MOBILENO,			CONTACTNO,			LANDCODE
,LANDAREACODE,			LANDLINENO,			EMPID,				DESIGNATION
,DOB,             		PASSWORD,			LOCKSTATUS,			ACCEXPIRYDATE
,LASTLOGINDATE,			LASTPWDCHANGEDATE,	LASTLOCKEDOUTDATE,	FAILEDPWDATTEMPTCOUNT
,ISPWDCHANGEREQ,		ISDELETED,			ACSTATUS,			STATUS
,ENTITYTYPE,			ENTITYID,			VAACCNO,			DEFLVID
,PWDEXPDATE,			PWDNOTIFDATE,		HLEVELID,			HLEVELCODE
,HLOCID,				LOGINTOKEN,			LOGINACTTOKEN,		TOKENEXPDATE
,LOGINFLAG,             LOGINDATE,			ISOTPREQ,			REMARKS
,CRTDATE,			CRTIP
,APDATE,             					MDYDATE,			MDYIP
,VASCOTOKEN,			ACCOUNTNO,			PARTNERUSERCODE,	EMAILSENDFLAG
,SDNVERFLAG,			SDNRATING,			CHECKERREMARKS,		PWDSENDDATE
,LOGINACTFLAG,			REQACTTIME,			AUTHZSETUP,			LASTSDNCHECK
,VAMAPFLAG,             CUSTREFNO,			REQTYPE,			SECURETOKENNO
,USERTYPE,             	BATCHRUNID,			APPENTFLAG,			MDYENTFLAG
,ENTITYFLAG,			LASTSUCCATMPT,		USERNUMBER,			TRANSACTIONID
,UPDATEDFLAG,			PRIMARYCIF,			MANAGERNAME,		DEPARTMENTNAME)

SELECT VT_COB.VTAMSTPCUSER_STUSERID_SEQ.NEXTVAL,	2,             	GCIFNO,             CUSTNAME
,ONBOARDFLAG,			LOGINID,			FIRSTNAME,			MIDDLENAME
,LASTNAME,             	DISPLAYNAME,		STREETADDRESS,		CITY
,STATE,             	PINNO,             	COUNTRY,			EMAIL
,MOBCODE,             	MOBILENO,			CONTACTNO,			LANDCODE
,LANDAREACODE,			LANDLINENO,			EMPID,				DESIGNATION
,DOB,             		PASSWORD,			LOCKSTATUS,			ACCEXPIRYDATE
,LASTLOGINDATE,			LASTPWDCHANGEDATE,	LASTLOCKEDOUTDATE,	FAILEDPWDATTEMPTCOUNT
,ISPWDCHANGEREQ,		ISDELETED,			ACSTATUS,			STATUS
,ENTITYTYPE,			ENTITYID,			VAACCNO,			DEFLVID
,PWDEXPDATE,			PWDNOTIFDATE,		HLEVELID,			HLEVELCODE
,HLOCID,				LOGINTOKEN,			LOGINACTTOKEN,		TOKENEXPDATE
,LOGINFLAG,             LOGINDATE,			ISOTPREQ,			REMARKS
,CRTDATE,			CRTIP
,APDATE,             					MDYDATE,			MDYIP
,VASCOTOKEN,			ACCOUNTNO,			PARTNERUSERCODE,	EMAILSENDFLAG
,SDNVERFLAG,			SDNRATING,			CHECKERREMARKS,		PWDSENDDATE
,LOGINACTFLAG,			REQACTTIME,			AUTHZSETUP,			LASTSDNCHECK
,VAMAPFLAG,             CUSTREFNO,			REQTYPE,			SECURETOKENNO
,USERTYPE,             	BATCHRUNID,			APPENTFLAG,			MDYENTFLAG
,ENTITYFLAG,			LASTSUCCATMPT,		USERNUMBER,			TRANSACTIONID
,UPDATEDFLAG,			PRIMARYCIF,			MANAGERNAME,		DEPARTMENTNAME
        FROM ( SELECT
     STG.STUSERID,             	2,             	CUST.GCIFNO,             STG.CUSTNAME
    ,STG.ONBOARDFLAG,			STG.LOGINID,			STG.FIRSTNAME,			STG.MIDDLENAME
    ,STG.LASTNAME,             	STG.DISPLAYNAME,		STG.STREETADDRESS,		STG.CITY
    ,STG.STATE,             	STG.PINNO,             	STG.COUNTRY,			STG.EMAIL
    ,STG.MOBCODE,             	STG.MOBILENO,			STG.CONTACTNO,			STG.LANDCODE
    ,STG.LANDAREACODE,			STG.LANDLINENO,			STG.EMPID,				STG.DESIGNATION
    ,STG.DOB,             		STG.PASSWORD,			STG.LOCKSTATUS,			STG.ACCEXPIRYDATE
    ,STG.LASTLOGINDATE,			STG.LASTPWDCHANGEDATE,	STG.LASTLOCKEDOUTDATE,	STG.FAILEDPWDATTEMPTCOUNT
    ,STG.ISPWDCHANGEREQ,		STG.ISDELETED,			STG.ACSTATUS,			STG.STATUS
    ,STG.ENTITYTYPE,			STG.ENTITYID,			STG.VAACCNO,			STG.DEFLVID
    ,STG.PWDEXPDATE,			STG.PWDNOTIFDATE,		STG.HLEVELID,			STG.HLEVELCODE
    ,STG.HLOCID,				STG.LOGINTOKEN,			STG.LOGINACTTOKEN,		STG.TOKENEXPDATE
    ,STG.LOGINFLAG,             STG.LOGINDATE,			STG.ISOTPREQ,			STG.REMARKS
    ,STG.CRTDATE,			'MIGVAM' AS CRTIP
    ,STG.APDATE,             					STG.MDYDATE,			STG.MDYIP
    ,STG.VASCOTOKEN,			STG.ACCOUNTNO,			STG.PARTNERUSERCODE,	STG.EMAILSENDFLAG
    ,STG.SDNVERFLAG,			STG.SDNRATING,			'' CHECKERREMARKS,		STG.PWDSENDDATE
    ,STG.LOGINACTFLAG,			STG.REQACTTIME,			STG.AUTHZSETUP,			STG.LASTSDNCHECK
    ,STG.VAMAPFLAG,             '' CUSTREFNO,			STG.REQTYPE,			STG.SECURETOKENNO
    ,STG.USERTYPE,             	STG.BATCHRUNID,			USR.APPENTFLAG,			USR.MDYENTFLAG
    ,USR.ENTITYFLAG,			USR.LASTSUCCATMPT,		STG.USERNUMBER,			STG.TRANSACTIONID
    ,STG.UPDATEDFLAG,			'' PRIMARYCIF,			'' MANAGERNAME,		'' DEPARTMENTNAME
        FROM VAM_MIGVTAMSTPCUSER STG
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STG.GCIFNO
--        LEFT JOIN VT_COB.VAM_USERMANDATORY USM ON UPPER(USM.LOGINID)=UPPER(STG.LOGINID) AND USM.GCIFNO=STG.GCIFNO
        LEFT JOIN VT_COB.VTAMSTPCUSER USR ON UPPER(STG.LOGINID)=UPPER(USR.LOGINID) AND STG.GCIFNO=USR.GCIFNO
        WHERE  STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S' AND USR.STUSERID IS NULL
        GROUP BY
STG.STUSERID,             	2,             	CUST.GCIFNO,             STG.CUSTNAME
,STG.ONBOARDFLAG,			STG.LOGINID,			STG.FIRSTNAME,			STG.MIDDLENAME
,STG.LASTNAME,             	STG.DISPLAYNAME,		STG.STREETADDRESS,		STG.CITY
,STG.STATE,             	STG.PINNO,             	STG.COUNTRY,			STG.EMAIL
,STG.MOBCODE,             	STG.MOBILENO,			STG.CONTACTNO,			STG.LANDCODE
,STG.LANDAREACODE,			STG.LANDLINENO,			STG.EMPID,				STG.DESIGNATION
,STG.DOB,             		STG.PASSWORD,			STG.LOCKSTATUS,			STG.ACCEXPIRYDATE
,STG.LASTLOGINDATE,			STG.LASTPWDCHANGEDATE,	STG.LASTLOCKEDOUTDATE,	STG.FAILEDPWDATTEMPTCOUNT
,STG.ISPWDCHANGEREQ,		STG.ISDELETED,			STG.ACSTATUS,			STG.STATUS
,STG.ENTITYTYPE,			STG.ENTITYID,			STG.VAACCNO,			STG.DEFLVID
,STG.PWDEXPDATE,			STG.PWDNOTIFDATE,		STG.HLEVELID,			STG.HLEVELCODE
,STG.HLOCID,				STG.LOGINTOKEN,			STG.LOGINACTTOKEN,		STG.TOKENEXPDATE
,STG.LOGINFLAG,             STG.LOGINDATE,			STG.ISOTPREQ,			STG.REMARKS
,STG.CRTDATE,			'MIGVAM'
,STG.APDATE,             					STG.MDYDATE,			STG.MDYIP
,STG.VASCOTOKEN,			STG.ACCOUNTNO,			STG.PARTNERUSERCODE,	STG.EMAILSENDFLAG
,STG.SDNVERFLAG,			STG.SDNRATING,			'',		STG.PWDSENDDATE
,STG.LOGINACTFLAG,			STG.REQACTTIME,			STG.AUTHZSETUP,			STG.LASTSDNCHECK
,STG.VAMAPFLAG,             '',			STG.REQTYPE,			STG.SECURETOKENNO
,STG.USERTYPE,             	STG.BATCHRUNID,			USR.APPENTFLAG,			USR.MDYENTFLAG
,USR.ENTITYFLAG,			USR.LASTSUCCATMPT,		STG.USERNUMBER,			STG.TRANSACTIONID
,STG.UPDATEDFLAG)A;

        UPDATE VT_COB.VTAMSTPCUSER SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';




         SELECT COUNT(1) INTO v_TOTCNT FROM VAM_MIGVTAMPCUSER WHERE BATCHRUNID =LV_BATCHRUNID;

	IF v_TOTCNT > 0
	THEN

        MERGE INTO VAM_MIGVTAMPCUSER STG using
        (
        SELECT  UPPER(STG.LOGINID) AS LOGINID,C.GCIFNO
        FROM VAM_MIGVTAMPCUSER STG
        INNER JOIN VT_COB.VTAMPCUSER CUST ON UPPER(CUST.LOGINID) = UPPER(STG.LOGINID)
        INNER JOIN VT_COB.VTCMCUST C ON CUST.ENTITYID=C.CUSTID
        WHERE  STG.BATCHRUNID = 1
        GROUP BY UPPER(STG.LOGINID) ,C.GCIFNO
        ) A ON (UPPER(STG.LOGINID)=UPPER(A.LOGINID) AND A.GCIFNO=STG.GCIFNO)
        WHEN MATCHED THEN
        UPDATE  SET MIGSTATUSCODE='F', MIGSTATUSDESC= 'UserID already available / VAM_MIGrated' 
        WHERE BATCHRUNID = 1 AND STG.MIGSTATUSCODE='P';


        MERGE INTO VAM_MIGVTAMPCUSER STG using
        (
        SELECT LOGINID, ENTITYID,COUNT(1) AS CNT
        FROM  VAM_MIGVTAMPCUSER
        WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P'
        GROUP BY LOGINID, ENTITYID
        HAVING  COUNT(1)>1
        )  SQ ON (UPPER(SQ.LOGINID)=UPPER(STG.LOGINID) AND SQ.ENTITYID=STG.ENTITYID)
        WHEN MATCHED THEN
        UPDATE  SET MIGSTATUSCODE='F', MIGSTATUSDESC= 'DATA DUPLICATED WITH IN THE FILE'
        WHERE BATCHRUNID = LV_BATCHRUNID AND MIGSTATUSCODE='P';


         UPDATE VAM_MIGVTAMPCUSER STG1 SET  MIGSTATUSCODE='F', MIGSTATUSDESC= 'User data is not available in staging Table'
        WHERE BATCHRUNID=1 AND STG1.MIGSTATUSCODE='P' AND 
        NOT EXISTS (SELECT 1 FROM VT_COB.VTAMSTPCUSER USR WHERE UPPER(USR.LOGINID)=UPPER(STG1.LOGINID) AND  USR.GCIFNO = STG1.GCIFNO);


         UPDATE VAM_MIGVTAMPCUSER
		SET MIGSTATUSCODE='S',
		   MIGSTATUSDESC = 'VALIDATION SUCCESSFUL'
		WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';

/*VTAMPCUSER*/

        INSERT INTO VT_COB.VTAMPCUSER
            (USERID,        			APPID,        				LOGINID,        			FIRSTNAME
            ,MIDDLENAME,        		LASTNAME,        			DISPLAYNAME
            ,STREETADDRESS,        		CITY,        				STATE,        				PINNO
            ,COUNTRY,        			EMAIL,        				MOBCODE,        			MOBILENO
            ,CONTACTNO,       			LANDCODE,        			LANDAREACODE,        		LANDLINENO
            ,EMPID,        				DESIGNATION,        		DOB,        				PASSWORD
            ,LOCKSTATUS,        		ACCEXPIRYDATE,        		LASTLOGINDATE,        		LASTPWDCHANGEDATE
            ,LASTLOCKEDOUTDATE,     	FAILEDPWDATTEMPTCOUNT,  	ISPWDCHANGEREQ,        		ISDELETED
            ,ACSTATUS,        			STATUS,        				ENTITYTYPE,        			ENTITYID
            ,VAACCNO,        			DEFLVID,        			PWDEXPDATE,        			PWDNOTIFDATE
            ,HLEVELID,        			HLEVELCODE,        			HLOCID,        				LOGINTOKEN
            ,LOGINACTTOKEN,        		TOKENEXPDATE,        		LOGINFLAG,        			LOGINDATE
            ,ISOTPREQ,        			REMARKS,        			        				CRTDATE
            ,CRTIP,                     APDATE
            ,MDYDATE,        			MDYIP,        				VASCOTOKEN,        			ACCOUNTNO
            ,PARTNERUSERCODE,       	EMAILSENDFLAG,        		SDNVERFLAG,        			SDNRATING
            ,CHECKERREMARKS,        	PWDSENDDATE,        		LOGINACTFLAG,      			REQTYPE
            ,AUTHZSETUP,        		SECURETOKENNO,        		VAMAPFLAG,        			CUSTREFNO
            ,LASTSDNCHECK,        		USERTYPE,        			REQACTTIME,        			BATCHRUNID
            )
        SELECT
             VT_COB.VTAMPCUSER_USERID_SEQ.NEXTVAL, 2,        		STG.LOGINID,        		STG.FIRSTNAME
            ,STG.MIDDLENAME,        	STG.LASTNAME,        		STG.DISPLAYNAME
            ,STG.STREETADDRESS,        	STG.CITY,        			STG.STATE,        			STG.PINNO
            ,STG.COUNTRY,        		STG.EMAIL,        			CASE WHEN STG.MOBCODE IS NULL THEN '971' ELSE STG.MOBCODE END        	
            ,CASE WHEN SUBSTR(STG.MOBILENO,1,3)='971' THEN SUBSTR(STG.MOBILENO,4,12) ELSE STG.MOBILENO END
            ,STG.CONTACTNO,       		STG.LANDCODE,        		STG.LANDAREACODE,        	STG.LANDLINENO
            ,STG.EMPID,        			STG.DESIGNATION,        	STG.DOB,        			STG.PASSWORD
            ,STG.LOCKSTATUS,        	STG.ACCEXPIRYDATE,        	STG.LASTLOGINDATE,        	STG.LASTPWDCHANGEDATE
            ,STG.LASTLOCKEDOUTDATE,     STG.FAILEDPWDATTEMPTCOUNT,  STG.ISPWDCHANGEREQ,        	STG.ISDELETED
            ,STG.ACSTATUS,        		STG.STATUS,        			STG.ENTITYTYPE,        		CUST.CUSTID
            ,STG.VAACCNO,        		STG.DEFLVID,        		STG.PWDEXPDATE,        		STG.PWDNOTIFDATE
            ,STG.HLEVELID,        		STG.HLEVELCODE,        		STG.HLOCID,        			STG.LOGINTOKEN
            ,STG.LOGINACTTOKEN,        	STG.TOKENEXPDATE,        	STG.LOGINFLAG,        		STG.LOGINDATE
            ,STG.ISOTPREQ,        		STG.REMARKS,               			STG.CRTDATE
            ,'MIGVAM',        			        			STG.APDATE
            ,STG.MDYDATE,        		STG.MDYIP,        			STG.VASCOTOKEN,        		STG.ACCOUNTNO
            ,STG.PARTNERUSERCODE,       STG.EMAILSENDFLAG,        	STG.SDNVERFLAG,        		STG.SDNRATING
            ,STG.CHECKERREMARKS,        STG.PWDSENDDATE,        	'N',      		            '' AS REQTYPE/*ACTUAL 19*/
            ,STG.AUTHZSETUP,        	STG.SECURETOKENNO,        	STG.VAMAPFLAG,        		STG.CUSTREFNO
            ,STG.LASTSDNCHECK,        	STG.USERTYPE,        		STG.REQACTTIME,        		STG.BATCHRUNID

        FROM VAM_MIGVTAMPCUSER STG
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STG.GCIFNO
        INNER JOIN VT_COB.VTAMSTPCUSER MAUSR ON UPPER(STG.LOGINID)=UPPER(MAUSR.LOGINID) AND MAUSR.GCIFNO=STG.GCIFNO
--        LEFT JOIN VT_COB.USERMANDATORY_RCP USM ON UPPER(USM.LOGINID)=UPPER(STG.LOGINID) AND USM.GCIFNO=STG.GCIFNO
        LEFT JOIN VT_COB.VTAMPCUSER USR ON UPPER(STG.LOGINID)=UPPER(USR.LOGINID) AND USR.ENTITYID=CUST.CUSTID
        WHERE  STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S' AND USR.USERID IS NULL;

        UPDATE VT_COB.VTAMPCUSER SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';
        UPDATE VTAMPCUSER SET LOGINID=UPPER(LOGINID) WHERE CRTIP='MIGVAM';
  


 MERGE INTO VAM_MIGVTAMPCUSER STG
 USING
 (
 SELECT A.GCIFNO,B.USERID,B.LOGINID
 FROM VT_COB.VTCMCUST A
 INNER JOIN VT_COB.VTAMPCUSER B ON A.CUSTID=B.ENTITYID
 GROUP BY A.GCIFNO,B.USERID,B.LOGINID
 )A ON (A.GCIFNO=STG.GCIFNO AND UPPER(A.LOGINID)=UPPER(STG.LOGINID))
 WHEN MATCHED THEN
 UPDATE  SET STG.USERID=A.USERID
 WHERE BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='P';

     INSERT INTO VTAMPCUSRRLEMAP(usrrlemapid,USERID,ROLEID,STATUS,CRTIP)
        SELECT 
        VTAMPCUSR_RLEMAPID_SEQ.NEXTVAL,A.USERID,C.ROLEID,A.STATUS,'MIGVAM'
        FROM VT_COB.VTAMPCUSER A
        CROSS JOIN VT_COB.VTAMPCROLE C 
        LEFT JOIN VT_COB.VTAMPCUSRRLEMAP B ON A.USERID=B.USERID AND C.ROLEID=B.ROLEID
        WHERE A.CRTIP='MIGVAM' AND C.CRTIP='MIGVAM' AND B.usrrlemapid IS NULL;




        ------------------------------IAM ENTRY-----------------------------------------  

        Insert into VT_IAM.VTAMPCUSER (USERID,APPID,LOGINID,FIRSTNAME,MIDDLENAME,LASTNAME,DISPLAYNAME,STREETADDRESS,CITY,STATE,PINNO,COUNTRY,EMAIL,MOBCODE,MOBILENO,CONTACTNO,LANDCODE,LANDAREACODE,LANDLINENO,EMPID,DESIGNATION,DOB,PASSWORD,LOCKSTATUS,ACCEXPIRYDATE,LASTLOGINDATE,LASTPWDCHANGEDATE,LASTLOCKEDOUTDATE,FAILEDPWDATTEMPTCOUNT,ISPWDCHANGEREQ,ISDELETED,ACSTATUS,STATUS,ENTITYTYPE,ENTITYID,VAACCNO,DEFLVID,PWDEXPDATE,PWDNOTIFDATE,HLEVELID,HLEVELCODE,HLOCID,LOGINTOKEN,LOGINACTTOKEN,TOKENEXPDATE,LOGINFLAG,LOGINDATE,ISOTPREQ,REMARKS,CRTBY,CRTDATE,CRTIP,APPBY,APDATE,MDYBY,MDYDATE,MDYIP,VASCOTOKEN,ACCOUNTNO,PARTNERUSERCODE,EMAILSENDFLAG,SDNVERFLAG,SDNRATING,CHECKERREMARKS,PWDSENDDATE,LOGINACTFLAG,REQTYPE,AUTHZSETUP,SECURETOKENNO,VAMAPFLAG,CUSTREFNO,LASTSDNCHECK,USERTYPE,REQACTTIME,BATCHRUNID,VERSION,APPDATE,APPIP,DEPTNAME,MANAGERNAME,SECURETOKENTYPE,SECURETOKENSTATUS,STAGINGFLAG,ACTLINKCOUNT,ALERTLANG,ALERTSUB,PRIMARYCIF,LOCATION) 
        SELECT 
        A.USERID,A.APPID,A.LOGINID,A.FIRSTNAME,A.MIDDLENAME,A.LASTNAME,A.DISPLAYNAME,A.STREETADDRESS,A.CITY,A.STATE,A.PINNO,A.COUNTRY,A.EMAIL,A.MOBCODE,A.MOBILENO,A.CONTACTNO,A.LANDCODE,A.LANDAREACODE,A.LANDLINENO,A.EMPID,A.DESIGNATION,A.DOB,A.PASSWORD,A.LOCKSTATUS,A.ACCEXPIRYDATE,A.LASTLOGINDATE,A.LASTPWDCHANGEDATE,A.LASTLOCKEDOUTDATE,A.FAILEDPWDATTEMPTCOUNT,A.ISPWDCHANGEREQ,A.ISDELETED,A.ACSTATUS,A.STATUS,A.ENTITYTYPE,A.ENTITYID,A.VAACCNO,A.DEFLVID,A.PWDEXPDATE,A.PWDNOTIFDATE,A.HLEVELID,A.HLEVELCODE,A.HLOCID,A.LOGINTOKEN,A.LOGINACTTOKEN,A.TOKENEXPDATE,A.LOGINFLAG,A.LOGINDATE,A.ISOTPREQ,A.REMARKS,A.CRTBY,A.CRTDATE,A.CRTIP,A.APPBY,A.APDATE,A.MDYBY,A.MDYDATE,A.MDYIP,A.VASCOTOKEN,A.ACCOUNTNO,A.PARTNERUSERCODE,A.EMAILSENDFLAG,A.SDNVERFLAG,A.SDNRATING,A.CHECKERREMARKS,A.PWDSENDDATE,A.LOGINACTFLAG,A.REQTYPE,A.AUTHZSETUP,A.SECURETOKENNO,A.VAMAPFLAG,A.CUSTREFNO,A.LASTSDNCHECK,A.USERTYPE,A.REQACTTIME,A.BATCHRUNID,A.VERSION,A.APPDATE,A.APPIP,A.DEPTNAME,A.MANAGERNAME,A.SECURETOKENTYPE,A.SECURETOKENSTATUS,A.STAGINGFLAG,A.ACTLINKCOUNT,'EN',A.ALERTSUB,A.PRIMARYCIF,A.LOCATION
        FROM VT_COB.VTAMPCUSER A
        LEFT JOIN VT_IAM.VTAMPCUSER B ON UPPER(A.LOGINID)=UPPER(B.LOGINID) AND A.ENTITYID=B.ENTITYID
        WHERE A.CRTIP='MIGVAM' AND B.USERID IS NULL;

        INSERT INTO VT_IAM.VTAMPCUSRRLEMAP(usrrlemapid,USERID,ROLEID,STATUS)
        SELECT 
        A.usrrlemapid,A.USERID,A.ROLEID,A.STATUS
        FROM VT_COB.VTAMPCUSRRLEMAP A
        LEFT JOIN VT_IAM.VTAMPCUSRRLEMAP B ON A.USERID=B.USERID AND A.ROLEID=B.ROLEID
        WHERE A.CRTIP='MIGVAM' AND B.usrrlemapid IS NULL;

        INSERT INTO VT_IAM.VTAMPCRLEFNCMAP (RLEFNCMAPID,ROLEID,FUNCID,STATUS)
        SELECT 
        A.RLEFNCMAPID,A.ROLEID,A.FUNCID,A.STATUS
        FROM VT_COB.VTAMPCRLEFNCMAP A
        LEFT JOIN VT_IAM.VTAMPCRLEFNCMAP B ON A.ROLEID=B.ROLEID AND A.FUNCID=B.FUNCID
        WHERE A.ROLEID IN(SELECT ROLEID FROM VTAMPCROLE WHERE CRTIP='MIGVAM')
        AND B.RLEFNCMAPID IS NULL;

        ------------------------------IAM ENTRY------------------------------------------

ELSE

	v_ENDTIME := SYSDATE;


END IF;

/*VTAMPCUSRRLEMAP*/



		SELECT COUNT(1) INTO v_TOTCNT FROM VAM_MIGVTAMPCUSRRLEMAP WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';

		IF v_TOTCNT > 0
	THEN

        UPDATE VAM_MIGVTAMPCUSRRLEMAP SET MIGSTATUSCODE='S',MIGSTATUSDESC = 'VALIDATION SUCCESSFUL'
        WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';


--        INSERT INTO VT_COB.VTAMPCUSRRLEMAP
--            (USERID,        	ROLEID,        		STATUS,CRTIP,ISDELETED,USRRLEMAPID)
--        SELECT
--             USR.USERID,        STG.ROLEID,        	STG.STATUS,'MIGVAM','N',	VT_COB.VTAMPCUSR_RLEMAPID_SEQ.NEXTVAL
--        FROM VAM_MIGVTAMPCUSRRLEMAP STG
--        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)=UPPER(STG.LOGINID) 
--        INNER JOIN VT_COB.VTCMCUST CUST ON STG.GCIFNO=CUST.GCIFNO AND USR.ENTITYID=CUST.CUSTID
--        LEFT JOIN VT_COB.VTAMPCUSRRLEMAP USR1 ON USR1.USERID=USR.USERID AND STG.ROLEID=USR1.ROLEID
--        WHERE CUST.GCIFNO IN('SCOPEILLC','MARSHLLC','ADNOCIHB') AND STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S' AND USR1.USRRLEMAPID IS NULL;  

    UPDATE VT_COB.VTAMPCUSRRLEMAP SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';

ELSE

	v_ENDTIME := SYSDATE;

END IF;




		SELECT COUNT(1) INTO v_TOTCNT FROM VAM_MIGVTCMCUSTUSRCNTRYMAP WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';


    INSERT INTO VT_COB.VTCMCUSTUSRCNTRYMAP 
        (USERID,			CBSCNTRYID,			STATUS,CRTIP ,ISDELETED,              CUSTUSRCNTRYMAPID) 
    SELECT  
         A.USERID,		1,                  'A','MIGVAM','N',                   VT_COB.CUSTUSRCNTRYMAP_ID_SEQ.NEXTVAL	
    FROM VTAMPCUSER A
    LEFT JOIN VTCMCUSTUSRCNTRYMAP B ON A.USERID=B.USERID AND B.CBSCNTRYID=1
    WHERE A.CRTIP='MIGVAM' AND B.CUSTUSRCNTRYMAPID IS NULL;

    UPDATE VT_COB.VTCMCUSTUSRCNTRYMAP SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';







		SELECT COUNT(1) INTO v_TOTCNT FROM VAM_MIGVTCMCUSTUSRPRDMAP WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';

		IF v_TOTCNT > 0
	THEN
    /*    MERGE INTO VAM_MIGVTCMCUSTUSRPRDMAP STG using
        (
        SELECT  DISTINCT(STG.PRDID)
        FROM VAM_MIGVTCMCUSTUSRPRDMAP STG
        LEFT JOIN VT_COB.VTSMPRD  PRD ON STG.PRDID = PRD.PRDID
        WHERE  BATCHRUNID = LV_BATCHRUNID AND STG.MIGSTATUSCODE='P'
        ) A ON (STG.PRDID<>A.PRDID)
        WHEN MATCHED THEN
        UPDATE  SET MIGSTATUSCODE='F', MIGSTATUSDESC= 'PRODUCT Code is not available in GCN'
        WHERE BATCHRUNID = LV_BATCHRUNID AND STG.MIGSTATUSCODE='P';*/

MERGE INTO VAM_MIGVTCMCUSTUSRPRDMAP STG
 USING
 (
 SELECT A.GCIFNO,A.CUSTID,B.USERID,B.LOGINID
 FROM VT_COB.VTCMCUST A
 INNER JOIN VT_COB.VTAMPCUSER B ON A.CUSTID=B.ENTITYID
 GROUP BY A.GCIFNO,A.CUSTID,B.USERID,B.LOGINID
 )A ON (A.GCIFNO=STG.GCIFNO AND UPPER(A.LOGINID)=UPPER(STG.LOGINID))
 WHEN MATCHED THEN
 UPDATE  SET STG.USERID=A.USERID
 WHERE BATCHRUNID = LV_BATCHRUNID AND STG.MIGSTATUSCODE='P';


        SELECT COUNT(1) INTO v_TOTCNT FROM VAM_MIGVTCMCUSTUSRPRDMAP WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';

		v_ENDTIME := SYSDATE;

        UPDATE VAM_MIGVTCMCUSTUSRPRDMAP SET MIGSTATUSCODE='S',MIGSTATUSDESC = 'VALIDATION SUCCESSFUL'
        WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';


 /*VTCMCUSTUSRPRDMAP*/

INSERT INTO VT_COB.VTCMCUSTUSRPRDMAP
(USRPRDMAPID,        USERID,        PRDID,        SUBPRDID
,FUNCID,        COUNTRYID,        COUNTRYCODE2,        STATUS,        ISDELETED,        VERSION
,CRTBY,        CRTDATE,        CRTIP,        MDYDATE
,MDYBY,        MDYIP,        APPDATE,        APPBY
,APPIP,        MANUALFLAG,        ACTIONTYPE,        MANCHECKTYPE, REMARKS
,CHECKERREMARKS)
SELECT VT_COB.CUSTUSRPRDMAP_ID_SEQ.NEXTVAL,
S.USERID,S.PRDID ,'', FUNCID,1,'AE','A','N'
,'',S.MID,SYSDATE,'MIGVAM',SYSDATE,S.MID,'0.0.0.0','','','','','','I'
,S.REMARKS,S.CHECKERREMARKS
FROM
(
SELECT
CUS.USERID ,PRD.PRDID , EF.NEWFUNCID AS FUNCID,
MUSR.USERID MID,STG.REMARKS,STG.CHECKERREMARKS, STG.STATUS
FROM  VAM_MIGVTCMCUSTUSRPRDMAP STG
INNER JOIN   VT_COB.VTCMCUST CUST ON STG.GCIFNO = CUST.GCIFNO
INNER JOIN   VT_COB.VTAMPCUSER CUS ON UPPER(STG.LOGINID) = UPPER(CUS.LOGINID) and cus.entityid = cust.custid
INNER JOIN   VT_COB.VTSMPRD  PRD ON PRD.PRDID = STG.PRDID
INNER JOIN   VT_COB.VTCMCUSTUSRCNTRYMAP  CTRYMAP ON CTRYMAP.USERID=CUS.USERID
INNER JOIN VT_COB.VAM_MIGVTCMVAMENTFUNC EF ON EF.OLDFUNCID=STG.FUNCID
LEFT JOIN   VT_COB.VTAMPCUSER MUSR ON UPPER(STG.LOGINID)=UPPER(MUSR.LOGINID)
LEFT JOIN  VT_COB.VTCMCUSTUSRPRDMAP MAP ON MAP.USERID = CUS.USERID  AND MAP.PRDID=STG.PRDID  and map.FUNCID = EF.NEWFUNCID
WHERE   STG.BATCHRUNID = LV_BATCHRUNID AND 	STG.MIGSTATUSCODE='S'
  AND STG.FUNCID IS NOT NULL AND MAP.USRPRDMAPID IS NULL--NEWLY ADDED
GROUP BY
CUS.USERID,PRD.PRDID ,EF.NEWFUNCID,MUSR.USERID
,STG.REMARKS,STG.CHECKERREMARKS, STG.STATUS
) S;

    UPDATE VT_COB.VTCMCUSTUSRPRDMAP SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';


ELSE

	v_ENDTIME := SYSDATE;


END IF;
/*PRC_MIG_CUSTUSERACCPRDENT_VAL*/



		SELECT COUNT(1) INTO v_TOTCNT FROM VAM_MIGVTCMCUSTUSRPRDACCMAP WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';

		IF v_TOTCNT > 0
	THEN
        MERGE INTO VAM_MIGVTCMCUSTUSRPRDACCMAP STG using
        (
        SELECT DISTINCT STG.GCIFNO
        FROM VAM_MIGVTCMCUSTUSRPRDACCMAP STG
        LEFT JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO = STG.GCIFNO
        WHERE  BATCHRUNID = LV_BATCHRUNID  AND STG.MIGSTATUSCODE='P' AND  CUST.GCIFNO IS NULL
        ) A ON (STG.GCIFNO<>A.GCIFNO)
        WHEN MATCHED THEN
        UPDATE  SET MIGSTATUSCODE='F', MIGSTATUSDESC= 'GCIFID  is not available for this CUSTOMERUSER TABLE'
        WHERE BATCHRUNID = LV_BATCHRUNID  AND STG.MIGSTATUSCODE='P' ;

 UPDATE VAM_MIGVTCMCUSTUSRPRDACCMAP STG SET STG.MIGSTATUSCODE='F', STG.MIGSTATUSDESC = 'ACCOUNT NUMBER IS NOT AVAILABLE IN GCN'
 WHERE ACCNO NOT IN (SELECT ACCNO FROM VT_COB.VTCMCUSTACC ) AND BATCHRUNID=LV_BATCHRUNID;-- AND MIGSTATUSCODE='P';


        MERGE INTO VAM_MIGVTCMCUSTUSRPRDACCMAP STG using
        (
        SELECT  STG.LOGINID,PRD.PRDID
        FROM  VAM_MIGVTCMCUSTUSRPRDACCMAP STG
        INNER JOIN  VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)=UPPER(STG.LOGINID)
        INNER JOIN  VT_COB.VTSMPRD  PRD ON PRD.PRDID = STG.PRDID
        INNER JOIN  VT_COB.VTCMCUSTUSRPRDACCMAP MAP ON USR.USERID=MAP.USERID and MAP.PRDID=PRD.PRDID
        WHERE STG.BATCHRUNID=LV_BATCHRUNID   AND STG.MIGSTATUSCODE='P'
        GROUP BY STG.LOGINID,PRD.PRDID
        ) A ON (UPPER(STG.LOGINID)=UPPER(A.LOGINID) AND A.PRDID=STG.PRDID)
        WHEN MATCHED THEN
        UPDATE  SET MIGSTATUSCODE='F', MIGSTATUSDESC= 'CustomerUserAccProductEntitle Data already available / VAM_MIGrated'
        WHERE BATCHRUNID = LV_BATCHRUNID   AND STG.MIGSTATUSCODE='P';

		SELECT COUNT(1) INTO v_TOTCNT FROM VAM_MIGVTCMCUSTUSRPRDACCMAP WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';

        MERGE INTO VAM_MIGVTCMCUSTUSRPRDACCMAP STG USING
(
SELECT USERID,LOGINID,GCIFNO
FROM VAM_MIGVTAMPCUSER
WHERE BATCHRUNID=LV_BATCHRUNID
GROUP BY USERID,LOGINID,GCIFNO
)A ON (UPPER(A.LOGINID)=UPPER(STG.LOGINID) AND A.GCIFNO=STG.GCIFNO)
WHEN MATCHED THEN
UPDATE
SET STG.USERID=A.USERID;

MERGE INTO VAM_MIGVTCMCUSTUSRPRDACCMAP STG
 USING
 (
 SELECT DISTINCT B.GCIFNO,B.CUSTID
 FROM VAM_MIGVTCMCUSTUSRPRDACCMAP A
 INNER JOIN VTCMCUST B ON A.GCIFNO=B.GCIFNO
 WHERE A.BATCHRUNID=LV_BATCHRUNID
 GROUP BY B.GCIFNO,B.CUSTID
 )A ON (A.GCIFNO=STG.GCIFNO)
 WHEN MATCHED THEN
 UPDATE  SET STG.CUSTID=A.CUSTID
 WHERE BATCHRUNID = LV_BATCHRUNID ;


  MERGE INTO VAM_MIGVTCMCUSTUSRPRDACCMAP STG
 USING
 (
 SELECT B.CIFNO,C.GCIFNO,B.CIFID,A.LOGINID
 FROM VAM_MIGVTCMCUSTUSRPRDACCMAP A
 INNER JOIN VT_COB.VTCMCUST C ON C.GCIFNO=A.GCIFNO
 INNER JOIN VT_COB.VTCMCUSTCIF B ON A.CIFNO=B.CIFNO AND C.CUSTID=B.CUSTID
 INNER JOIN VT_COB.VTCMCUSTACC D ON D.ACCNO=A.ACCNO
 WHERE A.BATCHRUNID=LV_BATCHRUNID
 GROUP BY B.CIFNO,C.GCIFNO,B.CIFID,A.LOGINID
 )A ON (A.CIFNO=STG.CIFNO AND A.GCIFNO=STG.GCIFNO AND UPPER(A.LOGINID)=UPPER(STG.LOGINID))
 WHEN MATCHED THEN
 UPDATE  SET STG.CIFID=A.CIFID
 WHERE BATCHRUNID = LV_BATCHRUNID ;

		v_ENDTIME := SYSDATE;

        UPDATE VAM_MIGVTCMCUSTUSRPRDACCMAP SET MIGSTATUSCODE='S',MIGSTATUSDESC = 'VALIDATION SUCCESSFUL'
        WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';

--ALL ACCOUNTS

INSERT INTO VT_COB.VTCMCUSTUSRPRDACCMAP
         ( CUSTUSRPRDACCMAPID,          USERID,          PRDID
,SUBPRDID,          FUNCID,          CIFID,          ACCID
,ACCFLAG,          ACCTYPEFLAG,          VAIBANID,          VAACCID
,REMARKS,          CHECKERREMARKS,          STATUS,          ISDELETED
,/*VERSION,*/           CRTBY,          CRTDATE,          CRTIP
,MDYDATE,          MDYBY,          MDYIP,          APPDATE
,APPBY   ,ISACCSELECTED   /*    APPIP,          PRDACCONFIGID,          VALUE
,ACTIONTYPE,          ISACCSELECTED,          VIRTUALACCID,          VAENTITYID*/)

SELECT
VT_COB.CUSTUSRPRDACCMAP_ID_SEQ.NEXTVAL,USERID,          PRDID
,SUBPRDID,          FUNCID,          CIFID,          ACCID
,ACCFLAG,          ACCTYPEFLAG,          VAIBANID,          VAACCID
,REMARKS,          CHECKERREMARKS,          STATUS,          ISDELETED
,/*VERSION,*/           CRTBY,          CRTDATE,          'MIGVAM'
,MDYDATE,          MDYBY,          MDYIP,          APPDATE
,APPBY,ISACCSELECTED     FROM
(SELECT USR.USERID, PRD.PRDID,
SUB.TRNPRDID AS SUBPRDID, FNC.NEWFUNCID AS FUNCID, cif.CIFID,0 AS ACCID,
 STG.ACCFLAG, CASE WHEN SUB.TRNPRDID IN (581,582,583) AND STG.ACCTYPEFLAG='VACC' THEN 'VC'
 ELSE STG.ACCTYPEFLAG END AS ACCTYPEFLAG,  STG.VAIBANID,  STG.VAACCID
,'MIG' AS REMARKS,        STG.CHECKERREMARKS,        STG.STATUS,        'N' AS ISDELETED
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP
,STG.MDYDATE,        STG.MDYBY,        STG.MDYIP,        STG.APPDATE
,STG.APPBY,'Y' AS ISACCSELECTED
FROM  VAM_MIGVTCMCUSTUSRPRDACCMAP STG
INNER JOIN VT_COB.VTCMCUST CUST ON STG.GCIFNO=CUST.GCIFNO
INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(STG.LOGINID)=UPPER(USR.LOGINID) AND USR.ENTITYID = CUST.CUSTID
inner join  VT_COB.VTCMCUSTCIF    CIF ON CIF.CIFNO= STG.CIFNO AND  STG.CIFID=CIF.CIFID AND CUST.CUSTID=CIF.CUSTID
LEFT JOIN VAM_MIGVTCMVAMENTFUNC FNC ON FNC.OLDFUNCID=STG.FUNCID 
INNER JOIN  VT_COB.VTSMPRD  PRD  on PRD.PRDID=STG.MAPSVCID
INNER JOIN VT_COB.VTSMTRNPRD SUB ON SUB.TRNPRDID=CASE WHEN STG.SVCID=22 THEN 579 WHEN STG.SVCID=67 THEN 587 WHEN STG.SVCID=6 THEN 600
WHEN STG.SVCID IN (111) THEN 581
WHEN STG.SVCID IN (112) THEN 582
WHEN STG.SVCID IN (113) THEN 583 END
LEFT JOIN VT_COB.VTCMCUSTUSRPRDACCMAP CU ON CU.USERID = USR.USERID AND CU.PRDID = PRD.PRDID AND CU.ACCID = STG.ACCID
         AND CU.SUBPRDID = SUB.TRNPRDID  AND  CASE WHEN SUB.TRNPRDID IN (581,582,583) AND STG.ACCTYPEFLAG='VACC' THEN 'VC'
     ELSE STG.ACCTYPEFLAG END = CU.ACCTYPEFLAG  AND STG.ACCFLAG = CU.ACCFLAG AND NVL(STG.VAIBANID,0) =NVL(CU.VAIBANID,0)
     AND NVL(STG.VAACCID,0) =NVL(CU.VAACCID,0)  
WHERE STG.BATCHRUNID =LV_BATCHRUNID  AND STG.MIGSTATUSCODE='S' and STG.ACCFLAG='A' AND STG.ACCID=0  AND  CU.CUSTUSRPRDACCMAPID IS NULL
GROUP BY
USR.USERID, PRD.PRDID,
SUB.TRNPRDID ,     FNC.NEWFUNCID, cif.CIFID,0,
 STG.ACCFLAG, CASE WHEN SUB.TRNPRDID IN (581,582,583) AND STG.ACCTYPEFLAG='VACC' THEN 'VC'
 ELSE STG.ACCTYPEFLAG END , STG.VAIBANID,  STG.VAACCID
,'MIG' ,        STG.CHECKERREMARKS,        STG.STATUS,        'N'
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP
,STG.MDYDATE,        STG.MDYBY,        STG.MDYIP,        STG.APPDATE
,STG.APPBY,'Y'
 )A;

--individual acc
 INSERT INTO VT_COB.VTCMCUSTUSRPRDACCMAP
         ( CUSTUSRPRDACCMAPID,          USERID,          PRDID
,SUBPRDID,          FUNCID,          CIFID,          ACCID
,ACCFLAG,          ACCTYPEFLAG,          VAIBANID,          VAACCID
,REMARKS,          CHECKERREMARKS,          STATUS,          ISDELETED
,/*VERSION,*/           CRTBY,          CRTDATE,          CRTIP
,MDYDATE,          MDYBY,          MDYIP,          APPDATE
,APPBY ,ISACCSELECTED     /*    APPIP,          PRDACCONFIGID,          VALUE
,ACTIONTYPE,          ISACCSELECTED,          VIRTUALACCID,          VAENTITYID*/)
SELECT
VT_COB.CUSTUSRPRDACCMAP_ID_SEQ.NEXTVAL,USERID,          PRDID
,SUBPRDID,          FUNCID,          CIFID,          ACCID
,ACCFLAG,          ACCTYPEFLAG,          VAIBANID,          VAACCID
,REMARKS,          CHECKERREMARKS,          STATUS,          ISDELETED
,/*VERSION,*/           CRTBY,          CRTDATE,          'MIGVAM'
,MDYDATE,          MDYBY,          MDYIP,          APPDATE
,APPBY, ISACCSELECTED     FROM
(SELECT USR.USERID, PRD.PRDID,
SUB.TRNPRDID AS SUBPRDID,   FNC.NEWFUNCID AS FUNCID, cif.CIFID,CASE WHEN STG.ACCID=0 THEN 0 ELSE ACC.ACCID END AS ACCID,
CASE WHEN STG.ACCID=0 THEN 'A' ELSE 'I' END AS ACCFLAG,'REAL' AS ACCTYPEFLAG, STG.VAIBANID, STG.VAACCID
,'MIG' AS REMARKS,        STG.CHECKERREMARKS,        STG.STATUS,        'N' AS ISDELETED
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP
,STG.MDYDATE,        STG.MDYBY,        STG.MDYIP,        STG.APPDATE
,STG.APPBY, 'Y' AS ISACCSELECTED, ACC.ACCNO
FROM  VAM_MIGVTCMCUSTUSRPRDACCMAP STG
INNER JOIN VT_COB.VTCMCUST CUST ON STG.GCIFNO=CUST.GCIFNO
INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(STG.LOGINID)=UPPER(USR.LOGINID) AND USR.ENTITYID = CUST.CUSTID
inner join  VT_COB.VTCMCUSTCIF    CIF ON CIF.CIFNO= STG.CIFNO AND  STG.CIFID=CIF.CIFID AND CUST.CUSTID=CIF.CUSTID
LEFT JOIN VAM_MIGVTCMVAMENTFUNC FNC ON FNC.OLDFUNCID=STG.FUNCID
LEFT JOIN VT_COB.VTCMCUSTACC  ACC ON ACC.ACCNO = STG.ACCNO
INNER JOIN  VT_COB.VTSMPRD  PRD  on PRD.PRDID=STG.MAPSVCID
INNER JOIN VT_COB.VTSMTRNPRD SUB ON SUB.TRNPRDID=CASE WHEN STG.SVCID=22 THEN 579 WHEN STG.SVCID=67 THEN 587 END
LEFT JOIN VT_COB.VTCMCUSTUSRPRDACCMAP CU ON CU.USERID = USR.USERID AND CU.PRDID = PRD.PRDID AND CU.ACCID = STG.ACCID
         AND CU.SUBPRDID = SUB.TRNPRDID  AND  CASE WHEN SUB.TRNPRDID IN (581,582,583) AND STG.ACCTYPEFLAG='VACC' THEN 'VC'
     ELSE STG.ACCTYPEFLAG END = CU.ACCTYPEFLAG  AND STG.ACCFLAG = CU.ACCFLAG AND NVL(STG.VAIBANID,0) =NVL(CU.VAIBANID,0)
     AND NVL(STG.VAACCID,0) =NVL(CU.VAACCID,0)  
WHERE STG.BATCHRUNID =LV_BATCHRUNID  AND STG.MIGSTATUSCODE='S' AND STG.ACCID <> 0 AND  CU.CUSTUSRPRDACCMAPID IS NULL
GROUP BY
USR.USERID, PRD.PRDID,
SUB.TRNPRDID , FNC.NEWFUNCID, cif.CIFID,CASE WHEN STG.ACCID=0 THEN 0 ELSE ACC.ACCID END,
CASE WHEN STG.ACCID=0 THEN 'A' ELSE 'I' END,'REAL' , STG.VAIBANID, STG.VAACCID
,'MIG',        STG.CHECKERREMARKS,        STG.STATUS,        'N'
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP
,STG.MDYDATE,        STG.MDYBY,        STG.MDYIP,        STG.APPDATE
,STG.APPBY,ACC.ACCNO )A;


--VA IBAN INDIVIDUAL DASHBOARD
INSERT INTO VT_COB.VTCMCUSTUSRPRDACCMAP
         ( CUSTUSRPRDACCMAPID,          USERID,          PRDID
,SUBPRDID,                    CIFID,          ACCID
,ACCFLAG,          ACCTYPEFLAG          
,REMARKS,          CHECKERREMARKS,          STATUS,          ISDELETED
,/*VERSION,*/           CRTBY,          CRTDATE,          CRTIP
,MDYDATE,          MDYBY,          MDYIP,          APPDATE
,APPBY   ,ISACCSELECTED   /*    APPIP,          PRDACCONFIGID,          VALUE
,ACTIONTYPE,          ISACCSELECTED,          VIRTUALACCID,          VAENTITYID*/)
SELECT
VT_COB.CUSTUSRPRDACCMAP_ID_SEQ.NEXTVAL,USERID,          PRDID
,SUBPRDID,                  CIFID,          ACCID
,ACCFLAG,          ACCTYPEFLAG          
,REMARKS,          CHECKERREMARKS,          STATUS,          ISDELETED
,/*VERSION,*/           CRTBY,          CRTDATE,          'MIGVAM'
,MDYDATE,          MDYBY,          MDYIP,          APPDATE
,APPBY ,ISACCSELECTED   FROM (
SELECT USR.USERID, 18 AS PRDID,
600 AS SUBPRDID,    cif.CIFID,STG.VAIBANID AS ACCID,
 'I'  AS ACCFLAG,'VACC' AS ACCTYPEFLAG, 
'MIG' AS REMARKS,        STG.CHECKERREMARKS,        STG.STATUS,        'N' AS ISDELETED
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP
,STG.MDYDATE,        STG.MDYBY,        STG.MDYIP,        STG.APPDATE
,STG.APPBY,'Y' AS ISACCSELECTED
FROM VAM_MIGVTCMCUSTUSRPRDACCMAP STG
INNER JOIN VT_COB.VTCMCUST CUST ON STG.GCIFNO=CUST.GCIFNO
INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(STG.LOGINID)=UPPER(USR.LOGINID) AND USR.ENTITYID = CUST.CUSTID
inner join  VT_COB.VTCMCUSTCIF CIF ON CIF.CIFNO= STG.CIFNO AND  STG.CIFID=CIF.CIFID  AND CUST.CUSTID=CIF.CUSTID 
LEFT JOIN VT_COB.VTCMCUSTUSRPRDACCMAP CU ON CU.USERID = USR.USERID AND NVL(CU.PRDID,0) = 18 AND CU.ACCID = STG.ACCID
         AND NVL(CU.SUBPRDID,0) = 600 AND  NVL(STG.ACCTYPEFLAG,0) = NVL(CU.ACCTYPEFLAG,0)  AND NVL(STG.ACCFLAG,0) = NVL(CU.ACCFLAG,0)
         AND NVL(STG.VAIBANID,0) =NVL(CU.VAIBANID,0)
     AND NVL(STG.VAACCID,0) =NVL(CU.VAACCID,0)  
WHERE STG.BATCHRUNID=LV_BATCHRUNID   AND STG.ACCFLAG='I' AND STG.FUNCID=1169 AND STG.ACCTYPEFLAG='VACC'  AND STG.CIFID IS NOT NULL
      AND CU.CUSTUSRPRDACCMAPID IS NULL
 GROUP BY USR.USERID, 18 ,
600 ,    cif.CIFID,STG.VAIBANID ,
 'I' ,'VACC' , 
'MIG' ,        STG.CHECKERREMARKS,        STG.STATUS,        'N' 
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP
,STG.MDYDATE,        STG.MDYBY,        STG.MDYIP,        STG.APPDATE
,STG.APPBY,'Y' );


--VA ENTITY/CARD INDIVIDUAL DASHBOARD
INSERT INTO VT_COB.VTCMCUSTUSRPRDACCMAP
         ( CUSTUSRPRDACCMAPID,          USERID,          PRDID
,SUBPRDID,                    CIFID,          ACCID
,ACCFLAG,          ACCTYPEFLAG          
,REMARKS,          CHECKERREMARKS,          STATUS,          ISDELETED,         CRTBY,          CRTDATE,          CRTIP
,MDYDATE,          MDYBY,          MDYIP,          APPDATE
,APPBY , ISACCSELECTED,VACUSTIDNT   )
SELECT
VT_COB.CUSTUSRPRDACCMAP_ID_SEQ.NEXTVAL,USERID,          PRDID
,
SUBPRDID,                  CIFID,          ACCID
,ACCFLAG,          ACCTYPEFLAG          
,REMARKS,          CHECKERREMARKS,          STATUS,          ISDELETED
,CRTBY,          CRTDATE,          'MIGVAM'
,MDYDATE,          MDYBY,          MDYIP,          APPDATE
,APPBY ,ISACCSELECTED,VACUSTIDNT   FROM (
SELECT USR.USERID, CASE WHEN STG.SVCID IN (22,67) THEN 8 
WHEN STG.SVCID IN (6) THEN 18
WHEN STG.SVCID IN (111,112,113) THEN 15 END AS PRDID,
CASE WHEN STG.SVCID IN (22) THEN 579 
WHEN STG.SVCID IN (67) THEN 587
WHEN STG.SVCID IN (6) THEN 600
WHEN STG.SVCID IN (111) THEN 581
WHEN STG.SVCID IN (112) THEN 582
WHEN STG.SVCID IN (113) THEN 583 END
AS SUBPRDID,    cif.CIFID,0 AS ACCID,
 'C'  AS ACCFLAG,CASE WHEN STG.SVCID IN (111,112,113) THEN 'VC' ELSE 'VACC' END AS ACCTYPEFLAG, 
'MIG' AS REMARKS,        STG.CHECKERREMARKS,        STG.STATUS,        'N' AS ISDELETED
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP
,STG.MDYDATE,        STG.MDYBY,        STG.MDYIP,        STG.APPDATE
,STG.APPBY,'Y' AS ISACCSELECTED, E.VACUSTIDNT AS VACUSTIDNT
FROM VAM_MIGVTCMCUSTUSRPRDACCMAP STG
INNER JOIN VT_COB.VTCMCUST CUST ON STG.GCIFNO=CUST.GCIFNO
INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(STG.LOGINID)=UPPER(USR.LOGINID) AND USR.ENTITYID = CUST.CUSTID
INNER JOIN VT_VAM.VTCMVAENTITY E ON E.VAENTITYID = STG.VAACCID
inner join  VT_COB.VTCMCUSTCIF CIF ON CIF.CIFNO= STG.CIFNO AND  STG.CIFID=CIF.CIFID
WHERE STG.BATCHRUNID=LV_BATCHRUNID AND STG.ACCFLAG='V' AND STG.ACCTYPEFLAG='VACC'  AND STG.CIFID IS NOT NULL 
 GROUP BY USR.USERID, CASE WHEN STG.SVCID IN (22,67) THEN 8 
WHEN STG.SVCID IN (6) THEN 18
WHEN STG.SVCID IN (111,112,113) THEN 15 END,
CASE WHEN STG.SVCID IN (22) THEN 579 
WHEN STG.SVCID IN (67) THEN 587
WHEN STG.SVCID IN (6) THEN 600
WHEN STG.SVCID IN (111) THEN 581
WHEN STG.SVCID IN (112) THEN 582
WHEN STG.SVCID IN (113) THEN 583 END
,    cif.CIFID,0 ,
 'C',CASE WHEN STG.SVCID IN (111,112,113) THEN 'VC' ELSE 'VACC' END , 
'MIG' ,        STG.CHECKERREMARKS,        STG.STATUS,        'N' 
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP
,STG.MDYDATE,        STG.MDYBY,        STG.MDYIP,        STG.APPDATE
,STG.APPBY,'Y', E.VACUSTIDNT);


---CARD INDIVIDUAL
INSERT INTO VT_COB.VTCMCUSTUSRPRDACCMAP
         ( CUSTUSRPRDACCMAPID,          USERID,          PRDID
,SUBPRDID,                    CIFID,          ACCID
,ACCFLAG,          ACCTYPEFLAG          
,REMARKS,          CHECKERREMARKS,          STATUS,          ISDELETED
,/*VERSION,*/           CRTBY,          CRTDATE,          CRTIP
,MDYDATE,          MDYBY,          MDYIP,          APPDATE
,APPBY   ,ISACCSELECTED   /*    APPIP,          PRDACCONFIGID,          VALUE
,ACTIONTYPE,          ISACCSELECTED,          VIRTUALACCID,          VAENTITYID*/)
SELECT
VT_COB.CUSTUSRPRDACCMAP_ID_SEQ.NEXTVAL,USERID,          PRDID
,SUBPRDID,                  CIFID,          ACCID
,ACCFLAG,          ACCTYPEFLAG          
,REMARKS,          CHECKERREMARKS,          STATUS,          ISDELETED
,/*VERSION,*/           CRTBY,          CRTDATE,          'MIGVAM'
,MDYDATE,          MDYBY,          MDYIP,          APPDATE
,APPBY ,ISACCSELECTED   FROM (
SELECT USR.USERID, 15 AS PRDID,
583 AS SUBPRDID,    cif.CIFID,STG.VAIBANID AS ACCID,
 'I'  AS ACCFLAG,'VC' AS ACCTYPEFLAG, 
'MIG' AS REMARKS,        STG.CHECKERREMARKS,        STG.STATUS,        'N' AS ISDELETED
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP
,STG.MDYDATE,        STG.MDYBY,        STG.MDYIP,        STG.APPDATE
,STG.APPBY,'Y' AS ISACCSELECTED
FROM VAM_MIGVTCMCUSTUSRPRDACCMAP STG
INNER JOIN VT_COB.VTCMCUST CUST ON STG.GCIFNO=CUST.GCIFNO
INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(STG.LOGINID)=UPPER(USR.LOGINID) AND USR.ENTITYID = CUST.CUSTID
inner join  VT_COB.VTCMCUSTCIF CIF ON CIF.CIFNO= STG.CIFNO AND  STG.CIFID=CIF.CIFID AND CUST.CUSTID=CIF.CUSTID
INNER JOIN VT_MIGRATION.STGVTSMVACCOUNTS B ON STG.VAIBANID=B.VAIBANID
INNER JOIN VT_MIGRATION.STGVTCMCUSTACC C ON C.ACCNO=STG.ACCNO
INNER JOIN VT_MIGRATION.STGVTSMVACARDS D ON C.ACCID=D.ACCID AND STG.VAIBANID=D.VAIBANID
WHERE  STG.BATCHRUNID=LV_BATCHRUNID AND  STG.ACCFLAG='I' AND STG.SVCID=113 AND STG.ACCTYPEFLAG='VACC'  AND STG.CIFID IS NOT NULL
 GROUP BY USR.USERID, 15 ,
583,    cif.CIFID,STG.VAIBANID ,
 'I' ,'VC' , 
'MIG',        STG.CHECKERREMARKS,        STG.STATUS,        'N'
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP
,STG.MDYDATE,        STG.MDYBY,        STG.MDYIP,        STG.APPDATE
,STG.APPBY,'Y' );

    UPDATE VT_COB.VTCMCUSTUSRPRDACCMAP SET CRTBY=102051,APPBY=102051,MDYBY=102051,ISACCSELECTED='Y' WHERE CRTIP='MIGVAM';

 UPDATE VAM_MIGVTCMCUSTUSRPRDACCMAP SET MIGSTATUSCODE='S',MIGSTATUSDESC = 'VALIDATION SUCCESSFUL'
        WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';


           UPDATE VAM_MIGVTCMCUSTUSRPRDACCFNCMAP STG1 SET  MIGSTATUSCODE='F', MIGSTATUSDESC= 'Account is not available in GCN Table'
        WHERE BATCHRUNID=LV_BATCHRUNID AND STG1.MIGSTATUSCODE='P' AND 
        NOT EXISTS (SELECT 1 FROM VT_COB.VTCMSTCUSTACC ACC WHERE STG1.ACCNO=ACC.ACCNO);

--COMMIT;
--RETURN;
 MERGE INTO VAM_MIGVTCMCUSTUSRPRDACCFNCMAP STG
 USING
 (
 SELECT A.GCIFNO,A.CUSTID,B.USERID,B.LOGINID
 FROM VT_COB.VTCMCUST A
 INNER JOIN VT_COB.VTAMPCUSER B ON A.CUSTID=B.ENTITYID
 GROUP BY  A.GCIFNO,A.CUSTID,B.USERID,B.LOGINID
 )A ON (A.GCIFNO=STG.GCIFNO AND UPPER(A.LOGINID)=UPPER(STG.LOGINID))
 WHEN MATCHED THEN
 UPDATE  SET STG.USERID=A.USERID
 WHERE BATCHRUNID = LV_BATCHRUNID AND STG.MIGSTATUSCODE='P';

  UPDATE VAM_MIGVTCMCUSTUSRPRDACCFNCMAP SET  BATCHRUNID=LV_BATCHRUNID;

 UPDATE VAM_MIGVTCMCUSTUSRPRDACCFNCMAP SET MIGSTATUSCODE='S',MIGSTATUSDESC = 'VALIDATION SUCCESSFUL'
        WHERE BATCHRUNID=LV_BATCHRUNID AND MIGSTATUSCODE='P';


--UPDATE VAM_MIGVTCMCUSTUSRPRDACCFNCMAP SET MAPSVCID=6 WHERE SVCID=6;
--UPDATE VAM_MIGVTCMCUSTUSRPRDACCFNCMAP SET MAPSVCID=1 WHERE SVCID=22;
--UPDATE VAM_MIGVTCMCUSTUSRPRDACCFNCMAP SET MAPSVCID=1 WHERE SVCID=67;
--UPDATE VAM_MIGVTCMCUSTUSRPRDACCFNCMAP SET MAPSVCID=110 WHERE SVCID=111;
--UPDATE VAM_MIGVTCMCUSTUSRPRDACCFNCMAP SET MAPSVCID=110 WHERE SVCID=113;

--ALL ACCOUNTS
INSERT INTO VT_COB.VTCMCUSTUSRPRDACCFNCMAP
(CUSTUSRPRDACCFNCMAPID,
USERID,PRDID,SUBPRDID,
FUNCID,CIFID,ACCID,ACCFLAG,ACCTYPEFLAG,
STATUS,ISDELETED,CRTBY,CRTDATE,CRTIP,MDYDATE,
MDYBY,          MDYIP,          APPDATE
,APPBY    )

SELECT
VT_COB.CUSTUSRPRDACCFNCMAP_ID_SEQ.NEXTVAL,
USERID,          PRDID, SUBPRDID,          
FUNCID,          CIFID,          ACCID,ACCFLAG,          ACCTYPEFLAG,
STATUS,           ISDELETED,CRTBY,          CRTDATE,          'MIGVAM',MDYDATE,  
MDYBY,          MDYIP,          APPDATE
,APPBY     FROM
(SELECT USR.USERID, PRD.PRDID,
SUB.TRNPRDID AS SUBPRDID,     FNC.NEWFUNCID AS FUNCID, CIF.CIFID,0 AS ACCID,
 STG.ACCFLAG, CASE WHEN SUB.TRNPRDID IN (581,582,583) AND STG.ACCTYPEFLAG='VACC' THEN 'VC'
 ELSE STG.ACCTYPEFLAG END AS ACCTYPEFLAG,  STG.STATUS,  'N' AS ISDELETED
--'MIG' AS REMARKS,        STG.CHECKERREMARKS,             
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP
,STG.MDYDATE,        STG.MDYBY,        STG.MDYIP,        STG.APPDATE
,STG.APPBY
FROM  VAM_MIGVTCMCUSTUSRPRDACCFNCMAP STG
INNER JOIN VT_COB.VTCMCUST CUST ON STG.GCIFNO=CUST.GCIFNO
INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(STG.LOGINID)=UPPER(USR.LOGINID) AND USR.ENTITYID = CUST.CUSTID
inner join  VT_COB.VTCMCUSTCIF    CIF ON CIF.CIFNO= STG.CIFNO AND  STG.CIFID=CIF.CIFID AND CIF.CUSTID=CUST.CUSTID
INNER JOIN  VT_COB.VTSMPRD  PRD  on PRD.PRDID=STG.MAPSVCID
INNER JOIN VT_COB.VTSMTRNPRD SUB ON SUB.TRNPRDID=CASE WHEN STG.SVCID=22 THEN 579 WHEN STG.SVCID=67 THEN 587 WHEN STG.SVCID=6 THEN 600
WHEN STG.SVCID IN (111) THEN 581
WHEN STG.SVCID IN (112) THEN 582
WHEN STG.SVCID IN (113) THEN 583 END
INNER JOIN VT_COB.VTAMPCSVC SVC ON SUB.MAPSVCID=SVC.SVCID
INNER JOIN VT_COB.VTAMPCMNUFNCMAP SC ON SVC.SVCID=SC.SVCID
INNER JOIN VAM_MIGVTCMVAMENTFUNC FNC ON FNC.OLDFUNCID=STG.FUNCID
--INNER JOIN VT_COB.VTAMPCRLEFNCMAP FNC ON   SC.FUNCID=FNC.FUNCID AND FNC.ROLEID=100598
LEFT JOIN VT_COB.VTCMCUSTUSRPRDACCFNCMAP CU ON CU.USERID = USR.USERID AND CU.PRDID = PRD.PRDID AND CU.ACCID = STG.ACCID
         AND CU.SUBPRDID = SUB.TRNPRDID  AND  CASE WHEN SUB.TRNPRDID IN (581,582,583) AND STG.ACCTYPEFLAG='VACC' THEN 'VC'
     ELSE STG.ACCTYPEFLAG END = CU.ACCTYPEFLAG  AND STG.ACCFLAG = CU.ACCFLAG AND NVL(STG.VAIBANID,0) =NVL(CU.VAIBANID,0)
     AND NVL(STG.VAACCID,0) =NVL(CU.VAACCID,0)  
WHERE STG.BATCHRUNID =LV_BATCHRUNID  AND STG.MIGSTATUSCODE='S' and STG.ACCFLAG='A' AND STG.ACCID=0  AND STG.SVCID<>6 
    AND  CU.CUSTUSRPRDACCFNCMAPID IS NULL
GROUP BY
USR.USERID, PRD.PRDID,
SUB.TRNPRDID,     FNC.NEWFUNCID, CIF.CIFID,0 ,
 STG.ACCFLAG, CASE WHEN SUB.TRNPRDID IN (581,582,583) AND STG.ACCTYPEFLAG='VACC' THEN 'VC'
 ELSE STG.ACCTYPEFLAG END,  STG.STATUS,  'N' 
--'MIG' AS REMARKS,        STG.CHECKERREMARKS,             
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP
,STG.MDYDATE,        STG.MDYBY,        STG.MDYIP,        STG.APPDATE
,STG.APPBY

 )A;

--individual acc
INSERT INTO VT_COB.VTCMCUSTUSRPRDACCFNCMAP
(CUSTUSRPRDACCFNCMAPID,USERID,PRDID,
SUBPRDID,FUNCID,CIFID,ACCID,
ACCFLAG,ACCTYPEFLAG,
STATUS,ISDELETED,CRTBY,CRTDATE,CRTIP,MDYDATE,
MDYBY,          MDYIP,          APPDATE
,APPBY    )
SELECT
VT_COB.CUSTUSRPRDACCFNCMAP_ID_SEQ.NEXTVAL,USERID,          PRDID
,SUBPRDID,          FUNCID,          CIFID,          ACCID
,ACCFLAG,          ACCTYPEFLAG,          
STATUS,          ISDELETED
,/*VERSION,*/           CRTBY,          CRTDATE,          'MIGVAM'
,MDYDATE,          MDYBY,          MDYIP,          APPDATE
,APPBY     FROM
(SELECT USR.USERID, PRD.PRDID,
SUB.TRNPRDID AS SUBPRDID,     FNC.NEWFUNCID AS FUNCID, cif.CIFID,CASE WHEN STG.ACCID=0 THEN 0 ELSE ACC.ACCID END AS ACCID,
CASE WHEN STG.ACCID=0 THEN 'A' ELSE 'I' END AS ACCFLAG,'REAL' AS ACCTYPEFLAG, STG.VAIBANID, STG.VAACCID
,'MIG' AS REMARKS,        STG.CHECKERREMARKS,        STG.STATUS,        'N' AS ISDELETED
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP
,STG.MDYDATE,        STG.MDYBY,        STG.MDYIP,        STG.APPDATE
,STG.APPBY, ACC.ACCNO
FROM  VAM_MIGVTCMCUSTUSRPRDACCFNCMAP STG
INNER JOIN VT_COB.VTCMCUST CUST ON STG.GCIFNO=CUST.GCIFNO
INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(STG.LOGINID)=UPPER(USR.LOGINID) AND USR.ENTITYID = CUST.CUSTID
inner join  VT_COB.VTCMCUSTCIF    CIF ON CIF.CIFNO= STG.CIFNO AND  STG.CIFID=CIF.CIFID AND CIF.CUSTID=CUST.CUSTID
LEFT JOIN VT_COB.VTCMCUSTACC  ACC ON ACC.ACCNO = STG.ACCNO
INNER JOIN  VT_COB.VTSMPRD  PRD  on PRD.PRDID=STG.MAPSVCID
INNER JOIN VT_COB.VTSMTRNPRD SUB ON SUB.TRNPRDID=CASE WHEN STG.SVCID=22 THEN 579 WHEN STG.SVCID=67 THEN 587 END
INNER JOIN VT_COB.VTAMPCSVC SVC ON SUB.MAPSVCID=SVC.SVCID
INNER JOIN VT_COB.VTAMPCMNUFNCMAP SC ON SVC.SVCID=SC.SVCID
INNER JOIN VAM_MIGVTCMVAMENTFUNC FNC ON FNC.OLDFUNCID=STG.FUNCID
--INNER JOIN VT_COB.VTAMPCRLEFNCMAP FNC ON SC.FUNCID=FNC.FUNCID AND FNC.ROLEID=100598
LEFT JOIN VT_COB.VTCMCUSTUSRPRDACCFNCMAP CU ON CU.USERID = USR.USERID AND CU.PRDID = PRD.PRDID AND CU.ACCID = STG.ACCID
         AND CU.SUBPRDID = SUB.TRNPRDID  AND  CASE WHEN SUB.TRNPRDID IN (581,582,583) AND STG.ACCTYPEFLAG='VACC' THEN 'VC'
     ELSE STG.ACCTYPEFLAG END = CU.ACCTYPEFLAG  AND STG.ACCFLAG = CU.ACCFLAG AND NVL(STG.VAIBANID,0) =NVL(CU.VAIBANID,0)
     AND NVL(STG.VAACCID,0) =NVL(CU.VAACCID,0)  
WHERE STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S' AND STG.ACCID <> 0 
      AND  CU.CUSTUSRPRDACCFNCMAPID IS NULL
GROUP BY
USR.USERID, PRD.PRDID,
SUB.TRNPRDID ,     FNC.NEWFUNCID, cif.CIFID,CASE WHEN STG.ACCID=0 THEN 0 ELSE ACC.ACCID END,
CASE WHEN STG.ACCID=0 THEN 'A' ELSE 'I' END,'REAL' , STG.VAIBANID,  STG.VAACCID
,'MIG',        STG.CHECKERREMARKS,        STG.STATUS,        'N'
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP
,STG.MDYDATE,        STG.MDYBY,        STG.MDYIP,        STG.APPDATE
,STG.APPBY,ACC.ACCNO )A;


--VA ENTITY/CARD INDIVIDUAL DASHBOARD

INSERT INTO VT_COB.VTCMCUSTUSRPRDACCFNCMAP
         ( CUSTUSRPRDACCFNCMAPID,          USERID,          PRDID
,SUBPRDID,       FUNCID,             CIFID,          ACCID
,ACCFLAG,          ACCTYPEFLAG          
,REMARKS,          CHECKERREMARKS,          STATUS,          ISDELETED,         CRTBY,          CRTDATE,          CRTIP
,MDYDATE,          MDYBY,          MDYIP,          APPDATE
,APPBY , ISACCSELECTED,VACUSTIDNT   )
SELECT
VT_COB.CUSTUSRPRDACCFNCMAP_ID_SEQ.NEXTVAL,USERID,          PRDID
,
SUBPRDID,       FUNCID, 
CIFID,        
ACCID
,ACCFLAG,          ACCTYPEFLAG          
,REMARKS,          CHECKERREMARKS,          STATUS,          ISDELETED
,CRTBY,          CRTDATE,          'MIGVAM'
,MDYDATE,          MDYBY,          MDYIP,          APPDATE
,APPBY ,ISACCSELECTED,VACUSTIDNT   FROM (
SELECT USR.USERID, CASE WHEN STG.SVCID IN (22,67) THEN 8 
WHEN STG.SVCID IN (6) THEN 18
WHEN STG.SVCID IN (111,112,113) THEN 15 END AS PRDID,
CASE WHEN STG.SVCID IN (22) THEN 579 
WHEN STG.SVCID IN (67) THEN 587
WHEN STG.SVCID IN (6) THEN 600
WHEN STG.SVCID IN (111) THEN 581
WHEN STG.SVCID IN (112) THEN 582
WHEN STG.SVCID IN (113) THEN 583 END
AS SUBPRDID, 
FNC.NEWFUNCID AS FUNCID, 
cif.CIFID,0 AS ACCID,
 'C'  AS ACCFLAG,CASE WHEN STG.SVCID IN (111,112,113) THEN 'VC' ELSE 'VACC' END AS ACCTYPEFLAG, 
'MIG' AS REMARKS,        STG.CHECKERREMARKS,        STG.STATUS,        'N' AS ISDELETED
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP
,STG.MDYDATE,        STG.MDYBY,        STG.MDYIP,        STG.APPDATE
,STG.APPBY,'Y' AS ISACCSELECTED, E.VACUSTIDNT AS VACUSTIDNT
    FROM VAM_MIGVTCMCUSTUSRPRDACCFNCMAP STG
    INNER JOIN VT_COB.VTCMCUST CUST ON STG.GCIFNO=CUST.GCIFNO
    INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(STG.LOGINID)=UPPER(USR.LOGINID) AND USR.ENTITYID = CUST.CUSTID
    INNER JOIN VT_VAM.VTCMVAENTITY E ON E.VAENTITYID = STG.VAACCID 
    inner join  VT_COB.VTCMCUSTCIF CIF ON CIF.CIFNO= STG.CIFNO AND  STG.CIFID=CIF.CIFID AND CIF.CUSTID=CUST.CUSTID
    INNER JOIN VT_COB.VTSMTRNPRD SUB ON SUB.TRNPRDID=CASE WHEN STG.SVCID IN (22) THEN 579 
    WHEN STG.SVCID IN (67) THEN 587
    WHEN STG.SVCID IN (6) THEN 600
    WHEN STG.SVCID IN (111) THEN 581
    WHEN STG.SVCID IN (112) THEN 582
    WHEN STG.SVCID IN (113) THEN 583 END 
    INNER JOIN VT_COB.VTAMPCSVC SVC ON SUB.MAPSVCID=SVC.SVCID
    INNER JOIN VT_COB.VTAMPCMNUFNCMAP SC ON SVC.SVCID=SC.SVCID  AND SC.STATUS='A'
    INNER JOIN VAM_MIGVTCMVAMENTFUNC FNC ON FNC.OLDFUNCID=STG.FUNCID
--    INNER JOIN VT_COB.VTAMPCRLEFNCMAP FNC ON FNC.ROLEID=100598 AND  SC.FUNCID=FNC.FUNCID 
WHERE STG.BATCHRUNID=LV_BATCHRUNID AND  STG.ACCFLAG='V' AND STG.ACCTYPEFLAG='VACC'  AND STG.CIFID IS NOT NULL 
 GROUP BY USR.USERID, CASE WHEN STG.SVCID IN (22,67) THEN 8 
WHEN STG.SVCID IN (6) THEN 18
WHEN STG.SVCID IN (111,112,113) THEN 15 END,
CASE WHEN STG.SVCID IN (22) THEN 579 
WHEN STG.SVCID IN (67) THEN 587
WHEN STG.SVCID IN (6) THEN 600
WHEN STG.SVCID IN (111) THEN 581
WHEN STG.SVCID IN (112) THEN 582
WHEN STG.SVCID IN (113) THEN 583 END
,  FNC.NEWFUNCID
,  cif.CIFID,0 ,
 'C',CASE WHEN STG.SVCID IN (111,112,113) THEN 'VC' ELSE 'VACC' END , 
'MIG' ,        STG.CHECKERREMARKS,        STG.STATUS,        'N' 
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP
,STG.MDYDATE,        STG.MDYBY,        STG.MDYIP,        STG.APPDATE
,STG.APPBY,'Y', E.VACUSTIDNT);


---CARD INDIVIDUAL
INSERT INTO VT_COB.VTCMCUSTUSRPRDACCFNCMAP
         ( CUSTUSRPRDACCFNCMAPID,          USERID,          PRDID
,SUBPRDID,                    CIFID,          ACCID
,ACCFLAG,          ACCTYPEFLAG          
,REMARKS,          CHECKERREMARKS,          STATUS,          ISDELETED,         CRTBY,          CRTDATE,          CRTIP
,MDYDATE,          MDYBY,          MDYIP,          APPDATE
,APPBY , ISACCSELECTED,FUNCID   )
SELECT
VT_COB.CUSTUSRPRDACCFNCMAP_ID_SEQ.NEXTVAL,USERID,          PRDID
,SUBPRDID,                  CIFID,          ACCID
,ACCFLAG,          ACCTYPEFLAG          
,REMARKS,          CHECKERREMARKS,          STATUS,          ISDELETED
,/*VERSION,*/           CRTBY,          CRTDATE,          'MIGVAM'
,MDYDATE,          MDYBY,          MDYIP,          APPDATE
,APPBY ,ISACCSELECTED,FUNCID   FROM (
SELECT USR.USERID, 15 AS PRDID,
583 AS SUBPRDID,    cif.CIFID,STG.VAIBANID AS ACCID,
 'I'  AS ACCFLAG,'VC' AS ACCTYPEFLAG, 
'MIG' AS REMARKS,        STG.CHECKERREMARKS,        STG.STATUS,        'N' AS ISDELETED
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP
,STG.MDYDATE,        STG.MDYBY,        STG.MDYIP,        STG.APPDATE
,STG.APPBY,'Y' AS ISACCSELECTED,FNC.NEWFUNCID AS FUNCID
FROM VAM_MIGVTCMCUSTUSRPRDACCFNCMAP STG
INNER JOIN VT_COB.VTCMCUST CUST ON STG.GCIFNO=CUST.GCIFNO
INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(STG.LOGINID)=UPPER(USR.LOGINID) AND USR.ENTITYID = CUST.CUSTID
inner join  VT_COB.VTCMCUSTCIF CIF ON CIF.CIFNO= STG.CIFNO AND  STG.CIFID=CIF.CIFID AND CIF.CUSTID=CUST.CUSTID
INNER JOIN VT_MIGRATION.STGVTSMVACCOUNTS B ON STG.VAIBANID=B.VAIBANID
INNER JOIN VT_MIGRATION.STGVTCMCUSTACC C ON C.ACCNO=STG.ACCNO
INNER JOIN VT_MIGRATION.STGVTSMVACARDS D ON C.ACCID=D.ACCID AND STG.VAIBANID=D.VAIBANID
INNER JOIN VT_COB.VTSMTRNPRD SUB ON SUB.TRNPRDID=CASE WHEN STG.SVCID IN (113) THEN 583 END 
    INNER JOIN VT_COB.VTAMPCSVC SVC ON SUB.MAPSVCID=SVC.SVCID
    INNER JOIN VT_COB.VTAMPCMNUFNCMAP SC ON SVC.SVCID=SC.SVCID
    INNER JOIN VAM_MIGVTCMVAMENTFUNC FNC ON FNC.OLDFUNCID=STG.FUNCID
--    INNER JOIN VT_COB.VTAMPCRLEFNCMAP FNC ON SC.FUNCID=FNC.FUNCID AND FNC.ROLEID=100598
WHERE STG.BATCHRUNID=LV_BATCHRUNID AND  STG.ACCFLAG='I' AND STG.SVCID=113 AND STG.ACCTYPEFLAG='VACC'  AND STG.CIFID IS NOT NULL
 GROUP BY USR.USERID, 15 ,
583,    cif.CIFID,STG.VAIBANID ,
 'I' ,'VC' , 
'MIG',        STG.CHECKERREMARKS,        STG.STATUS,        'N'
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP
,STG.MDYDATE,        STG.MDYBY,        STG.MDYIP,        STG.APPDATE
,STG.APPBY,'Y' ,FNC.NEWFUNCID);
---
    UPDATE VT_COB.VTCMCUSTUSRPRDACCFNCMAP SET CRTBY=102051,APPBY=102051,MDYBY=102051,ISACCSELECTED='Y' WHERE CRTIP='MIGVAM';


        MERGE INTO VAM_MIGVTCMCUSTUSRPRDACCMAP STG
        USING
        (
        SELECT MAP.CIFID
        FROM VAM_MIGVTCMCUSTUSRPRDACCMAP STG
        LEFT JOIN VT_COB.VTCMCUSTUSRPRDACCMAP MAP ON MAP.CIFID=STG.CIFID
        WHERE STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S'
        GROUP BY MAP.CIFID
        )A ON  (A.CIFID=STG.CIFID)
        WHEN MATCHED THEN
        UPDATE SET STG.MIGSTATUSCODE='M', STG.MIGSTATUSDESC = 'MIGRATION SUCCESSFUL'
        WHERE STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S';

UPDATE VAM_MIGVTCMCUSTUSRPRDACCMAP STG
SET STG.MIGSTATUSCODE='M', STG.MIGSTATUSDESC = 'MIGRATION SUCCESSFUL'
WHERE STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S';


        MERGE INTO VAM_MIGVTCMCUSTUSRPRDACCFNCMAP STG
        USING
        (
        SELECT STG.ACCID
        FROM VAM_MIGVTCMCUSTUSRPRDACCFNCMAP STG
--        LEFT JOIN VT_COB.VTCMCUSTUSRPRDACCFNCMAP MAP ON MAP.ACCID=STG.ACCID
        WHERE STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S'
        GROUP BY STG.ACCID
        )A ON  (A.ACCID=STG.ACCID)
        WHEN MATCHED THEN
        UPDATE SET STG.MIGSTATUSCODE='M', STG.MIGSTATUSDESC = 'MIGRATION SUCCESSFUL'
        WHERE STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S';

UPDATE VAM_MIGVTCMCUSTUSRPRDACCFNCMAP STG
SET STG.MIGSTATUSCODE='M', STG.MIGSTATUSDESC = 'MIGRATION SUCCESSFUL'
WHERE STG.BATCHRUNID =LV_BATCHRUNID AND STG.MIGSTATUSCODE='S';


	v_ENDTIME := SYSDATE;


END IF;

/*INSERT INTO VT_COB.VTCMCUSTUSRPRDACCFNCMAP
(CUSTUSRPRDACCFNCMAPID,
USERID,PRDID,SUBPRDID,
FUNCID,CIFID,ACCID,ACCFLAG,ACCTYPEFLAG,
STATUS,ISDELETED,CRTBY,CRTDATE,CRTIP,MDYDATE,
MDYBY,          MDYIP,          APPDATE
,APPBY  ,VACUSTIDNT  )

SELECT
VT_COB.CUSTUSRPRDACCFNCMAP_ID_SEQ.NEXTVAL,
USERID,          PRDID, SUBPRDID,          
FUNCID,          CIFID,          ACCID,ACCFLAG,          ACCTYPEFLAG,
STATUS,           ISDELETED,CRTBY,          CRTDATE,          'MIGVAM',MDYDATE,  
MDYBY,          MDYIP,          APPDATE
,APPBY ,VACUSTIDNT    FROM
(SELECT USR.USERID, STG.PRDID,
STG.SUBPRDID AS SUBPRDID,     MAP.FUNCID AS FUNCID, STG.CIFID,0 AS ACCID,
 STG.ACCFLAG, CASE WHEN STG.SUBPRDID IN (581,582,583) AND STG.ACCTYPEFLAG='VACC' THEN 'VC'
 ELSE STG.ACCTYPEFLAG END AS ACCTYPEFLAG,  STG.STATUS,  'N' AS ISDELETED
--'MIG' AS REMARKS,        STG.CHECKERREMARKS,             
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP
,STG.MDYDATE,        STG.MDYBY,        STG.MDYIP,        STG.APPDATE
,STG.APPBY,STG.VACUSTIDNT
FROM  VTCMCUSTUSRPRDACCMAP STG
INNER JOIN VTAMPCUSER USR ON STG.USERID=USR.USERID
INNER JOIN VTCMCUSTUSRPRDMAP MAP ON MAP.USERID=USR.USERID
LEFT JOIN VTCMCUSTUSRPRDACCFNCMAP MM ON MM.USERID=STG.USERID AND MM.PRDID=STG.PRDID
AND MM.SUBPRDID=STG.SUBPRDID AND MAP.FUNCID=STG.FUNCID AND MM.CIFID=STG.CIFID
AND MM.ACCID=STG.ACCID AND MM.ACCFLAG=STG.ACCFLAG AND MM.ACCTYPEFLAG=STG.ACCTYPEFLAG
WHERE STG.CRTIP='MIGVAM' AND MM.CUSTUSRPRDACCFNCMAPID IS NULL);
*/


INSERT INTO VT_COB.VTCMCUSTUSRPRDACCFNCMAP
(CUSTUSRPRDACCFNCMAPID,
USERID,PRDID,SUBPRDID,
FUNCID,CIFID,ACCID,ACCFLAG,ACCTYPEFLAG,
STATUS,ISDELETED,CRTBY,CRTDATE,CRTIP,MDYDATE,
MDYBY,          MDYIP,          APPDATE
,APPBY  ,VACUSTIDNT  )

SELECT
VT_COB.CUSTUSRPRDACCFNCMAP_ID_SEQ.NEXTVAL,
USERID,          PRDID, SUBPRDID,          
FUNCID,          CIFID,          ACCID,ACCFLAG,          ACCTYPEFLAG,
STATUS,           ISDELETED,CRTBY,          CRTDATE,          'MIGVAM',MDYDATE,  
MDYBY,          MDYIP,          APPDATE
,APPBY ,VACUSTIDNT    FROM
(SELECT USR.USERID, STG.PRDID,
STG.SUBPRDID AS SUBPRDID,     MAP.FUNCID AS FUNCID, STG.CIFID,0 AS ACCID,
 STG.ACCFLAG, CASE WHEN STG.SUBPRDID IN (581,582,583) AND STG.ACCTYPEFLAG='VACC' THEN 'VC'
 ELSE STG.ACCTYPEFLAG END AS ACCTYPEFLAG,  STG.STATUS,  'N' AS ISDELETED
--'MIG' AS REMARKS,        STG.CHECKERREMARKS,             
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP
,STG.MDYDATE,        STG.MDYBY,        STG.MDYIP,        STG.APPDATE
,STG.APPBY,STG.VACUSTIDNT
FROM  VTCMCUSTUSRPRDACCMAP STG
INNER JOIN VTAMPCUSER USR ON STG.USERID=USR.USERID
INNER JOIN (SELECT USERID,FUNCID 
FROM VTCMCUSTUSRPRDMAP
WHERE CRTIP='MIGVAM' 
UNION 
SELECT A.USERID,FUNCID
FROM VTAMPCUSER A
INNER JOIN VTAMPCUSRRLEMAP B ON A.USERID=B.USERID
INNER JOIN VTAMPCRLEFNCMAP C ON B.ROLEID=C.ROLEID 
WHERE A.CRTIP='MIGVAM'
GROUP BY  A.USERID,FUNCID)
MAP ON MAP.USERID=USR.USERID
LEFT JOIN VTCMCUSTUSRPRDACCFNCMAP MM ON MM.USERID=STG.USERID AND MM.PRDID=STG.PRDID
AND MM.SUBPRDID=STG.SUBPRDID AND MAP.FUNCID=STG.FUNCID AND MM.CIFID=STG.CIFID
AND MM.ACCID=STG.ACCID AND MM.ACCFLAG=STG.ACCFLAG AND MM.ACCTYPEFLAG=STG.ACCTYPEFLAG
WHERE STG.CRTIP='MIGVAM' AND MM.CUSTUSRPRDACCFNCMAPID IS NULL);

INSERT INTO VT_COB.VTCMCUSTUSRPRDACCMAP
(CUSTUSRPRDACCMAPID,
USERID,PRDID,SUBPRDID,
CIFID,ACCID,ACCFLAG,ACCTYPEFLAG,
STATUS,ISDELETED,CRTBY,CRTDATE,CRTIP,VACUSTIDNT  )

SELECT
VT_COB.CUSTUSRPRDACCMAP_ID_SEQ.NEXTVAL,
USERID,          PRDID, SUBPRDID,          
          CIFID,          ACCID,ACCFLAG,          ACCTYPEFLAG,
STATUS,           ISDELETED,CRTBY,          CRTDATE,          'MIGVAM',VACUSTIDNT    FROM
(SELECT USR.USERID, STG.PRDID,
STG.SUBPRDID AS SUBPRDID,   STG.CIFID,0 AS ACCID,
 STG.ACCFLAG, CASE WHEN STG.SUBPRDID IN (581,582,583) AND STG.ACCTYPEFLAG='VACC' THEN 'VC'
 ELSE STG.ACCTYPEFLAG END AS ACCTYPEFLAG,  STG.STATUS,  'N' AS ISDELETED
--'MIG' AS REMARKS,        STG.CHECKERREMARKS,             
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP,STG.VACUSTIDNT
FROM  (SELECT  STG.ACCTYPEFLAG,STG.USERID,18 AS PRDID,0 AS ACCID,
600 AS SUBPRDID,      STG.CIFID,
 STG.ACCFLAG,  STG.STATUS             
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP
,NVL(STG.VACUSTIDNT,0) AS VACUSTIDNT FROM VTCMCUSTUSRPRDACCMAP STG WHERE   CRTIP='MIGVAM'
AND STG.ACCTYPEFLAG='VACC'
GROUP BY STG.ACCTYPEFLAG,STG.USERID,      STG.CIFID,
 STG.ACCFLAG,  STG.STATUS             
, STG.CRTBY,        STG.CRTDATE,        STG.CRTIP
,NVL(STG.VACUSTIDNT,0)
)STG
INNER JOIN VTAMPCUSER USR ON STG.USERID=USR.USERID
LEFT JOIN VTCMCUSTUSRPRDACCMAP MM ON MM.USERID=STG.USERID AND MM.PRDID=stg.PRDID
AND MM.SUBPRDID=STG.SUBPRDID  AND MM.CIFID=STG.CIFID
AND MM.ACCID=STG.ACCID AND MM.ACCFLAG=STG.ACCFLAG AND MM.ACCTYPEFLAG=STG.ACCTYPEFLAG
WHERE STG.CRTIP='MIGVAM' AND MM.CUSTUSRPRDACCMAPID IS NULL
AND EXISTS(SELECT 1 FROM VTCMCUSTUSRPRDMAP MAP WHERE MAP.USERID=USR.USERID AND MAP.PRDID=18));

--------VIRTUAL CARD ACTIVATION


Insert into VTCMCUSTUSRPRDACCMAP 
    (CUSTUSRPRDACCMAPID,USERID,PRDID,SUBPRDID,FUNCID,CIFID,ACCID,ACCFLAG,ACCTYPEFLAG,VAIBANID,VAACCID,REMARKS,
    CHECKERREMARKS,STATUS,ISDELETED,VERSION,CRTBY,CRTDATE,CRTIP,MDYDATE,MDYBY,MDYIP,APPDATE,APPBY,APPIP,PRDACCONFIGID,
    VALUE,ACTIONTYPE,ISACCSELECTED,VIRTUALACCID,VAENTITYID,VACUSTIDNT)
    
SELECT
    VT_COB.CUSTUSRPRDACCMAP_ID_SEQ.NEXTVAL,
    CU.USERID,CU.PRDID,582,CU.FUNCID,CU.CIFID,CU.ACCID,CU.ACCFLAG,CU.ACCTYPEFLAG,CU.VAIBANID,CU.VAACCID,CU.REMARKS,
    CU.CHECKERREMARKS,CU.STATUS,CU.ISDELETED,CU.VERSION,CU.CRTBY,CU.CRTDATE,CU.CRTIP,CU.MDYDATE,CU.MDYBY,CU.MDYIP,CU.APPDATE,CU.APPBY,CU.APPIP,CU.PRDACCONFIGID,
    CU.VALUE,CU.ACTIONTYPE,CU.ISACCSELECTED,CU.VIRTUALACCID,CU.VAENTITYID,CU.VACUSTIDNT 
FROM  
    VTCMCUSTUSRPRDACCMAP CU
LEFT JOIN  VTCMCUSTUSRPRDACCMAP USR ON USR.USERID = CU.USERID 
                        AND USR.PRDID = CU.PRDID AND CU.SUBPRDID = 582 
                                 AND  USR.CIFID = CU.CIFID  
    WHERE CU.CRTIP='MIGVAM'  AND CU.SUBPRDID=581 AND USR.CUSTUSRPRDACCMAPID IS NULL;
    


INSERT INTO VTCMCUSTUSRPRDACCFNCMAP (CUSTUSRPRDACCFNCMAPID,USERID,PRDID,SUBPRDID,FUNCID,CIFID,ACCID,ACCFLAG,ACCTYPEFLAG,VAIBANID,VAACCID,REMARKS,
                                     CHECKERREMARKS,STATUS,ISDELETED,VERSION,CRTBY,CRTDATE,CRTIP,MDYDATE,MDYBY,MDYIP,APPDATE,APPBY,APPIP,
                                     ACTIONTYPE,ISACCSELECTED,VIRTUALACCID,VAENTITYID,VACUSTIDNT)

SELECT 
  VT_COB.CUSTUSRPRDACCFNCMAP_ID_SEQ.NEXTVAL,
  ACC.USERID,ACC.PRDID,582,ACC.FUNCID,ACC.CIFID,ACC.ACCID,ACC.ACCFLAG,ACC.ACCTYPEFLAG,ACC.VAIBANID,ACC.VAACCID,ACC.REMARKS,ACC.
  CHECKERREMARKS,ACC.STATUS,ACC.ISDELETED,ACC.VERSION,ACC.CRTBY,ACC.CRTDATE,ACC.CRTIP,ACC.MDYDATE,ACC.MDYBY,ACC.MDYIP,ACC.APPDATE,ACC.APPBY,ACC.APPIP,ACC.
  ACTIONTYPE,ACC.ISACCSELECTED,ACC.VIRTUALACCID,ACC.VAENTITYID,ACC.VACUSTIDNT
FROM 
  VTCMCUSTUSRPRDACCFNCMAP ACC
  LEFT JOIN VT_COB.VTCMCUSTUSRPRDACCFNCMAP CU ON CU.USERID = ACC.USERID AND CU.PRDID = ACC.PRDID 
         AND CU.CIFID = ACC.CIFID AND ACC.SUBPRDID = 582
  WHERE ACC.CRTIP='MIGVAM'  AND ACC.SUBPRDID = 581 AND  CU.CUSTUSRPRDACCFNCMAPID IS NULL ;



-------------REPORTS ENTITELMENT  ----------------

INSERT INTO VT_COB.VTCMCUSTUSRPRDMAP(USRPRDMAPID,USERID,PRDID,FUNCID,COUNTRYID,COUNTRYCODE2,STATUS,ISDELETED,MANCHECKTYPE,CRTIP)
SELECT VT_COB.CUSTUSRPRDMAP_ID_SEQ.NEXTVAL, U.USERID,16 AS PRDID,ENT.NEWFUNCID,1,'AE','A','N','I','MIGVAM'  
    FROM 
       VT_MIGRATION.STGVTCMCUSTUSERRPTMAP STG
    INNER JOIN VT_MIGRATION.STGVTAMPCUSER USR ON USR.USERID = STG.USERID
    INNER JOIN VT_COB.VTAMPCUSER U ON UPPER(U.LOGINID) = UPPER(USR.LOGINID)  
    INNER JOIN VT_MIGRATION.STGVTCMCUST  C ON TO_CHAR(C.CUSTID) = USR.ENTITYID
    INNER JOIN VT_COB.VAM_MIGVTCMVAMRPTENTFNC ENT ON ENT.OLDRPTID = STG.RPTID;

     Insert into VT_IAM.VTCMCUSTUSRPRDMAP (USRPRDMAPID,USERID,PRDID,SUBPRDID,FUNCID,COUNTRYID,COUNTRYCODE2,STATUS,
    MANUALFLAG,ACTIONTYPE,MANCHECKTYPE)
    SELECT A.USRPRDMAPID,A.USERID,A.PRDID,A.SUBPRDID,A.FUNCID,A.COUNTRYID,A.COUNTRYCODE2,A.STATUS,
    A.MANUALFLAG,A.ACTIONTYPE,A.MANCHECKTYPE
    FROM VT_COB.VTCMCUSTUSRPRDMAP A
    LEFT JOIN VT_IAM.VTCMCUSTUSRPRDMAP B ON A.USERID=B.USERID AND A.PRDID=B.PRDID AND A.FUNCID=B.FUNCID
    WHERE A.USERID IN(SELECT USERID FROM VTAMPCUSER WHERE CRTIP='MIGVAM')
    AND B.USRPRDMAPID IS NULL;
    
    UPDATE VTAMPCUSER SET AUTHTYPE='O',ALERTSUB='Y', NOTIFPARENT='N',ALERTLANG='EN',IDNUMBER=000345645,IDEXPDATE='30-JUN-24',USERNO=22112132121,IDTYPE='N' where crtip='MIGVAM';


 UPDATE VAM_MIGVTAMSTPCUSER SET  ISMIG='C' WHERE BATCHRUNID=LV_BATCHRUNID;
 UPDATE VAM_MIGVTAMPCUSER SET  ISMIG='C' WHERE BATCHRUNID=LV_BATCHRUNID;
 UPDATE VAM_MIGVTAMPCUSRRLEMAP SET  ISMIG='C' WHERE BATCHRUNID=LV_BATCHRUNID;
 UPDATE VAM_MIGVTCMCUSTUSRCNTRYMAP SET  ISMIG='C' WHERE BATCHRUNID=LV_BATCHRUNID ;
 UPDATE VAM_MIGVTCMCUSTUSRPRDMAP SET  ISMIG='C' WHERE BATCHRUNID=LV_BATCHRUNID;
 UPDATE VAM_MIGVTCMCUSTUSRPRDACCMAP SET  ISMIG='C' WHERE BATCHRUNID=LV_BATCHRUNID;

DBMS_OUTPUT.PUT_LINE('PROCEDURE COMPLETED AT '||TO_CHAR(SYSDATE,'DD-MM-YY HH24:MI:SS'));
---ALERTS
Insert into VAM_VTCMTEMPMGMNT (TEMPMGMNTID,TEMPLATETYPE,TEMPLATENAME,CUSTID,RCMSPRDID,EVENTID,SUBJECT,BODY,
    ALERTTYPE,REMARKS,CHECKERREMARKS,STATUS,ISDELETED,CRTBY,CRTDATE,CRTIP,APPBY,APPDATE,MDYBY,MDYDATE,MDYIP,
    ENTITYTYPE,ECOLSVC,EVENTTYPE,TEMPLANG,OLDTEMPMGMNTID) 

SELECT TEMPMGMNTID_SEQ.NEXTVAL, TEMPLATETYPE,TEMPLATENAME,CUSTID,RCMSPRDID,EVENTID,SUBJECT,BODY,
    ALERTTYPE,REMARKS,CHECKERREMARKS,STATUS,ISDELETED,CRTBY,CRTDATE,CRTIP,APPBY,APPDATE,MDYBY,MDYDATE,MDYIP,
    ENTITYTYPE,ECOLSVC,EVENTTYPE,TEMPLANG,OLDTEMPMGMNTID
    FROM (
   SELECT
t.TEMPLATETYPE,T.TEMPLATENAME,C.CUSTID,E.RCMSPRDID,E.EVENTID,CASE WHEN T.SUBJECT IS NULL THEN TO_CHAR(T.BODY) ELSE T.SUBJECT  END AS SUBJECT
,TO_CHAR(T.BODY) AS BODY,T.ALERTTYPE,
T.REMARKS,T.CHECKERREMARKS,T.STATUS,T.ISDELETED,NULL AS CRTBY,TO_DATE( SUBSTR(T.CRTDATE, 1, 19),'YYYY-MM-DD HH24:MI:SS' ) AS CRTDATE,'MIGVAM' AS CRTIP,NULL AS APPBY,
TO_DATE( SUBSTR(T.APPDATE, 1, 19),'YYYY-MM-DD HH24:MI:SS' ) AS APPDATE,
NULL AS MDYBY,TO_DATE( SUBSTR(T.MDYDATE, 1, 19),'YYYY-MM-DD HH24:MI:SS' ) AS MDYDATE,T.MDYIP,T.ENTITYTYPE,E.RCMSPRDID AS ECOLSVC,EVENTTYPE AS EVENTTYPE,
TEMPLANG AS TEMPLANG,TEMPMGMNTID AS OLDTEMPMGMNTID
   FROM VT_MIGRATION.STGVTCMTEMPMGMNT T
 INNER  JOIN VT_MIGRATION.STGVTCMEVENT EVE ON EVE.EVENTID = T.EVENTID  
 INNER JOIN VT_COB.VAM_VTCMTEMPALERTMAP A ON A.OLDEVENTCODE = EVE.EVENTCODE AND A.ALERTTYPE = T.ALERTTYPE
 INNER JOIN VTCMEVENT E ON E.EVENTCODE = A.NEWEVENTCODE
 INNER JOIN VT_MIGRATION.STGVTCMCUST STG ON STG.CUSTID = T.CUSTID
 INNER JOIN VT_COB.VTCMCUST C ON C.GCIFNO = STG.GCIFNO
 GROUP BY t.TEMPLATETYPE,T.TEMPLATENAME,C.CUSTID,E.RCMSPRDID,E.EVENTID,CASE WHEN T.SUBJECT IS NULL THEN TO_CHAR(T.BODY) ELSE T.SUBJECT  END
,TO_CHAR(T.BODY) ,T.ALERTTYPE,
T.REMARKS,T.CHECKERREMARKS,T.STATUS,T.ISDELETED,NULL,TO_DATE( SUBSTR(T.CRTDATE, 1, 19),'YYYY-MM-DD HH24:MI:SS' ) ,'MIGVAM' ,NULL,
TO_DATE( SUBSTR(T.APPDATE, 1, 19),'YYYY-MM-DD HH24:MI:SS' ),
TO_DATE( SUBSTR(T.MDYDATE, 1, 19),'YYYY-MM-DD HH24:MI:SS' ) ,T.MDYIP,T.ENTITYTYPE,E.RCMSPRDID ,EVENTTYPE,
TEMPLANG ,TEMPMGMNTID);



/*
MERGE INTO VAM_VTCMTEMPMGMNT V USING(
SELECT T.TEMPMGMNTID,U1.USERID
  FROM VAM_VTCMTEMPMGMNT T
   INNER JOIN VT_MIGRATION.STGVTCMTEMPMGMNT S ON S.TEMPMGMNTID = T.OLDTEMPMGMNTID
   LEFT JOIN VT_MIGRATION.STGVTAMPCUSER U ON U.USERID = S.CRTBY
   LEFT JOIN VTCMCUST C ON C.GCIFNO = U.GCIFNO 
   LEFT JOIN VTAMPCUSER U1 ON U1.ENTITYID =C.CUSTID AND U.LOGINID = U1.LOGINID)A
   ON (A.TEMPMGMNTID = V.TEMPMGMNTID)
   WHEN MATCHED THEN
   UPDATE
   SET CRTBY=A.USERID;
   */

 
 INSERT INTO VTCMTEMPMGMNT (TEMPMGMNTID,TEMPLATETYPE,TEMPLATENAME,CUSTID,RCMSPRDID,EVENTID,SUBJECT,BODY,
    ALERTTYPE,REMARKS,CHECKERREMARKS,STATUS,ISDELETED,CRTBY,CRTDATE,CRTIP,APPBY,APPDATE,MDYBY,MDYDATE,MDYIP,
    ENTITYTYPE,ECOLSVC,EVENTTYPE,TEMPLANG)
    SELECT TEMPMGMNTID,TEMPLATETYPE,TEMPLATENAME,CUSTID,RCMSPRDID,EVENTID,SUBJECT,BODY,
    ALERTTYPE,REMARKS,CHECKERREMARKS,STATUS,ISDELETED,CRTBY,CRTDATE,CRTIP,APPBY,APPDATE,MDYBY,MDYDATE,MDYIP,
    ENTITYTYPE,ECOLSVC,EVENTTYPE,TEMPLANG
    FROM VAM_VTCMTEMPMGMNT;
 
 
 Insert into VTCMALERTSUBSCR (ALERTSUBSCRID,TEMPMGMNTID,CUSTID,ACCID,RECIPIUSERTYPE,MAILTOLIST,MAILCCLIST,MAILBCCLIST,
 MAILTOCUST,MAILCCCUST,MAILBCCCUST,REMARKS,CHECKERREMARKS,STATUS,ISDELETED,CRTBY,CRTDATE,CRTIP,APPBY,APPDATE,MDYBY,
 MDYDATE,MDYIP,ENTITYTYPE,ALERTTYPE,ECOLSVC,EVENTTYPE,POBOENTID,RCMSPRDID,TEMPLATETYPE,VACUSTIDNT,VERSION,
 APPIP,CIFID,THRESHOLDVAL,ALERTSUBTYPE,EMAILFLAG,MOBILEFLAG,SMSCONTACTNOS) 

SELECT  ALERTSUBSCRID_SEQ.NEXTVAL,TEMPMGMNTID,CUSTID,ACCID,RECIPIUSERTYPE,MAILTOLIST,MAILCCLIST,MAILBCCLIST,
 MAILTOCUST,MAILCCCUST,MAILBCCCUST,REMARKS,CHECKERREMARKS,STATUS,ISDELETED,CRTBY,CRTDATE,CRTIP,APPBY,APPDATE,MDYBY,
 MDYDATE,MDYIP,ENTITYTYPE,ALERTTYPE,ECOLSVC,EVENTTYPE,POBOENTID,RCMSPRDID,TEMPLATETYPE,VACUSTIDNT,VERSION,
 APPIP,CIFID,THRESHOLDVAL,ALERTSUBTYPE,EMAILFLAG,MOBILEFLAG,SMSCONTACTNOS
 FROM(
 SELECT  B.TEMPMGMNTID,D.CUSTID,ACC.ACCID,
        CASE WHEN A.RECIPIUSERTYPE ='R' and A.ALERTTYPE='S' THEN '2'
             WHEN A.RECIPIUSERTYPE ='R' and A.ALERTTYPE='E' THEN '1'
             WHEN A.RECIPIUSERTYPE IN ('B','E','V')  THEN '4'
             WHEN A.RECIPIUSERTYPE ='P' THEN '3'
             END  AS RECIPIUSERTYPE,
CASE WHEN A.RECIPIUSERTYPE='P' AND A.ALERTTYPE='E' THEN A.PREDEFINEDLIST ELSE NULL END AS MAILTOLIST,
A.MAILCCLIST,A.MAILBCCLIST,A.MAILTOCUST,A.MAILCCCUST,A.MAILBCCCUST,A.REMARKS,A.CHECKERREMARKS,A.STATUS,
A.ISDELETED,A.CRTBY,TO_DATE( SUBSTR(A.CRTDATE, 1, 19),'YYYY-MM-DD HH24:MI:SS' ) CRTDATE,'MIGVAM' AS CRTIP,A.APPBY,
  TO_DATE( SUBSTR(A.APPDATE, 1, 19),'YYYY-MM-DD HH24:MI:SS' ) APPDATE,A.MDYBY,
   TO_DATE( SUBSTR(A.MDYDATE, 1, 19),'YYYY-MM-DD HH24:MI:SS' ) MDYDATE,
   A.MDYIP,A.ENTITYTYPE,A.ALERTTYPE,A.ECOLSVC,A.EVENTTYPE,
   CASE WHEN A.ATTACHREQ = 'Y' THEN '1' WHEN  A.ATTACHREQ = 'R' THEN '2' ELSE null end AS POBOENTID,B.RCMSPRDID,
   A.TEMPLATETYPE,A.VACUSTIDNT,NULL VERSION,NULL APPIP,NULL AS CIFID,A.THRESHOLDVAL,A.EVENTTYPE AS ALERTSUBTYPE,NULL EMAILFLAG,NULL MOBILEFLAG,
  CASE WHEN A.RECIPIUSERTYPE='P' AND A.ALERTTYPE='S' THEN A.PREDEFINEDLIST ELSE NULL END AS SMSCONTACTNOS
FROM VT_MIGRATION.STGVTCMALERTSUBSCR A  
INNER JOIN VAM_VTCMTEMPMGMNT B ON A.TEMPMGMNTID=B.OLDTEMPMGMNTID  
INNER JOIN VTCMEVENT E ON E.EVENTID = B.EVENTID AND E.MAILSMSFLAG =B.ALERTTYPE
INNER JOIN VT_MIGRATION.STGVTCMCUST C ON C.CUSTID=A.CUSTID
LEFT JOIN VT_MIGRATION.STGVTCMCUSTACC AC ON AC.ACCID = A.ACCID
LEFT JOIN VT_COB.VTCMCUSTACC ACC ON ACC.ACCNO = AC.ACCNO
INNER JOIN VT_COB.VTCMCUST D ON D.GCIFNO = C.GCIFNO
GROUP BY 
 B.TEMPMGMNTID,D.CUSTID,ACC.ACCID,
        CASE WHEN A.RECIPIUSERTYPE ='R' and A.ALERTTYPE='S' THEN '2'
             WHEN A.RECIPIUSERTYPE ='R' and A.ALERTTYPE='E' THEN '1'
             WHEN A.RECIPIUSERTYPE IN ('B','E','V')  THEN '4'
             WHEN A.RECIPIUSERTYPE ='P' THEN '3'
             END,
CASE WHEN A.RECIPIUSERTYPE='P' AND A.ALERTTYPE='E' THEN A.PREDEFINEDLIST ELSE NULL END,
A.MAILCCLIST,A.MAILBCCLIST,A.MAILTOCUST,A.MAILCCCUST,A.MAILBCCCUST,A.REMARKS,A.CHECKERREMARKS,A.STATUS,
A.ISDELETED,A.CRTBY,TO_DATE( SUBSTR(A.CRTDATE, 1, 19),'YYYY-MM-DD HH24:MI:SS' ) ,'MIGVAM' ,A.APPBY,
  TO_DATE( SUBSTR(A.APPDATE, 1, 19),'YYYY-MM-DD HH24:MI:SS' ) ,A.MDYBY,
   TO_DATE( SUBSTR(A.MDYDATE, 1, 19),'YYYY-MM-DD HH24:MI:SS' ) ,
   A.MDYIP,A.ENTITYTYPE,A.ALERTTYPE,A.ECOLSVC,A.EVENTTYPE,
   CASE WHEN A.ATTACHREQ = 'Y' THEN '1' WHEN  A.ATTACHREQ = 'R' THEN '2' ELSE null end ,B.RCMSPRDID,
   A.TEMPLATETYPE,A.VACUSTIDNT,NULL ,A.THRESHOLDVAL,A.EVENTTYPE,
  CASE WHEN A.RECIPIUSERTYPE='P' AND A.ALERTTYPE='S' THEN A.PREDEFINEDLIST ELSE NULL END
);
   
MERGE INTO VTCMALERTSUBSCR S USING
(SELECT A.ALERTSUBSCRID, LISTAGG(U.EMAIL,',') WITHIN GROUP (ORDER BY LOGINID) AS EMAIL
  FROM VTAMPCUSER U
     INNER JOIN VTCMALERTSUBSCR A ON A.CUSTID = U.ENTITYID
   WHERE  A.CRTIP='MIGVAM' AND A.RECIPIUSERTYPE='1' AND A.ALERTTYPE='E'
     GROUP BY A.ALERTSUBSCRID)A
     ON(A.ALERTSUBSCRID = S.ALERTSUBSCRID)
     WHEN MATCHED THEN 
     UPDATE 
      SET MAILTOLIST = A.EMAIL;
      
      
MERGE INTO VTCMALERTSUBSCR S USING
(SELECT A.ALERTSUBSCRID, LISTAGG( (MOBCODE||MOBILENO),',') WITHIN GROUP (ORDER BY LOGINID) AS SMSCONTENT
  FROM VTAMPCUSER U
     INNER JOIN VTCMALERTSUBSCR A ON A.CUSTID = U.ENTITYID
   WHERE  A.CRTIP='MIGVAM' AND A.RECIPIUSERTYPE='2' AND A.ALERTTYPE='S'
     GROUP BY A.ALERTSUBSCRID)A
     ON(A.ALERTSUBSCRID = S.ALERTSUBSCRID)
     WHEN MATCHED THEN 
     UPDATE 
      SET SMSCONTACTNOS = A.SMSCONTENT;      
    
    
UPDATE VTCMTEMPMGMNT SET BODY=REPLACE(BODY,'@VAIBAN@','@VA IBAN@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET BODY=REPLACE(BODY,'@VAENTITY NAME@','@VA Entity Name@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET BODY=REPLACE(BODY,'@VACUSTIDNT@','@VA Entity Identifier@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET BODY=REPLACE(BODY,'@VAACCNAME@','@Virtual Account Name@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET BODY=REPLACE(BODY,'@STATUS@','@Status@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET BODY = REPLACE(BODY,'@CARD EXPIRY DATE@','@Card Expired on@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET BODY = REPLACE(BODY,'@OLD CARD NO@','@Virtual Card Old Number@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET BODY = REPLACE(BODY,'@BUDGET REFNO@','@Budget Reference Number@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET BODY = REPLACE(BODY,'@UTILISED AMOUNT@','@Unutilized Amount@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET BODY = REPLACE(BODY,'@TXNTYPE@','@Txn Type@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET BODY = REPLACE(BODY,'@ALLOCATION AMOUNT@','@Allocation Amount@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET BODY = REPLACE(BODY,'@NET POSITION@','@Net Position@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET BODY = REPLACE(BODY,'@NOOF RECUR@','@No. of Recurrences@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET BODY = REPLACE(BODY,'@CHNREFNO@','@Channel Ref No@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET BODY = REPLACE(BODY,'@BUDGET TYPE@','@Budget Type@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET BODY = REPLACE(BODY,'@BUDGET PERIOD@','@Budget Period@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET BODY = REPLACE(BODY,'@UTILISED AMOUNT@','@Utilized Amount@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET BODY = REPLACE(BODY,'@CBSREFNO@','@CBS Ref No@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET BODY = REPLACE(BODY,'@CARDNO@','@Virtual Card Number@') WHERE CRTIP='MIGVAM';


UPDATE VTCMTEMPMGMNT SET SUBJECT=REPLACE(SUBJECT,'@VAIBAN@','@VA IBAN@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET SUBJECT=REPLACE(SUBJECT,'@VAENTITY NAME@','@VA Entity Name@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET SUBJECT=REPLACE(SUBJECT,'@VACUSTIDNT@','@VA Entity Identifier@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET SUBJECT=REPLACE(SUBJECT,'@VAACCNAME@','@Virtual Account Name@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET SUBJECT=REPLACE(SUBJECT,'@STATUS@','@Status@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET SUBJECT = REPLACE(SUBJECT,'@CARD EXPIRY DATE@','@Card Expired on@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET SUBJECT = REPLACE(SUBJECT,'@OLD CARD NO@','@Virtual Card Old Number@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET SUBJECT = REPLACE(SUBJECT,'@BUDGET REFNO@','@Budget Reference Number@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET SUBJECT = REPLACE(SUBJECT,'@UTILISED AMOUNT@','@Unutilized Amount@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET SUBJECT = REPLACE(SUBJECT,'@TXNTYPE@','@Txn Type@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET SUBJECT = REPLACE(SUBJECT,'@ALLOCATION AMOUNT@','@Allocation Amount@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET SUBJECT = REPLACE(SUBJECT,'@NET POSITION@','@Net Position@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET SUBJECT = REPLACE(SUBJECT,'@NOOF RECUR@','@No. of Recurrences@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET SUBJECT = REPLACE(SUBJECT,'@CHNREFNO@','@Channel Ref No@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET SUBJECT = REPLACE(SUBJECT,'@BUDGET TYPE@','@Budget Type@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET SUBJECT = REPLACE(SUBJECT,'@BUDGET PERIOD@','@Budget Period@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET SUBJECT = REPLACE(SUBJECT,'@UTILISED AMOUNT@','@Utilized Amount@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET SUBJECT = REPLACE(SUBJECT,'@CBSREFNO@','@CBS Ref No@') WHERE CRTIP='MIGVAM';
UPDATE VTCMTEMPMGMNT SET SUBJECT = REPLACE(SUBJECT,'@CARDNO@','@Virtual Card Number@') WHERE CRTIP='MIGVAM';

UPDATE VTCMTEMPMGMNT SET CRTBY=100006,MDYBY=100006,APPBY=100006 WHERE CRTIP='MIGVAM';
UPDATE VTCMALERTSUBSCR SET CRTBY=100006,MDYBY=100006,APPBY=100001 WHERE CRTIP='MIGVAM';


        -----ADDITIONAL INFORMATION --------
--Insert INTO VTCMCUSTADDTLSPARAM (CUSTPARAMID,CUSTID,PARAMTYPE,PARAMCODE1,PARAMCODE2,PARAMVALUE,STATUS,ISDELETED,CRTBY,CRTDATE,CRTIP,
--                                 MDYBY,MDYDATE,MDYIP,APPBY,APPDATE,APPIP) 
--SELECT ADDTLSPARAM_CUSTPARAMID_SEQ.NEXTVAL,
--C1.CUSTID,'VAIDNT','GCIF',C.GCIFNO,E.VAENTITYID,S.STATUS,'N',null,TO_DATE( SUBSTR(s.crtdate, 1, 19),'YYYY-MM-DD HH24:MI:SS' ),'MIGVAM',
--                               '2',TO_DATE( SUBSTR(s.MDYdate, 1, 19),'YYYY-MM-DD HH24:MI:SS' ),null, '101086',TO_DATE( SUBSTR(s.appdate, 1, 19),'YYYY-MM-DD HH24:MI:SS' ),null  
--from VT_MIGRATION.STGVTCMTPTENTACCESS s 
--INNER JOIN VT_COB.VAM_MIGVTCMCUST MIG  ON MIG.OLDCUSTID = S.CUSTID 
--INNER JOIN VT_COB.VTCMCUST C1 ON C1.GCIFNO = MIG.GCIFNO
--INNER JOIN VT_COB.VTCMCUST C  ON C.GCIFNO = s.TPTGCIFNO 
--INNER JOIN VT_VAM.VTCMVAENTITY E ON  E.VACUSTIDNT = S.TPTVACUSTIDNT
--INNER JOIN VT_COB.VTCMCUSTACC A ON A.ACCID = E.ACCID
--INNER JOIN VT_COB.VTCMCUSTACCCIF AC ON AC.ACCID = A.ACCID AND AC.CUSTID =C.CUSTID
--INNER JOIN VT_COB.VTCMCUSTCIF CIF ON CIF.CIFID = AC.CIFID;


COMMIT;
EXCEPTION

	WHEN NO_DATA_FOUND THEN
	BEGIN
		OUT_STATUSCODE :='83';
		OUT_STATUSDESC :=SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
        DBMS_OUTPUT.PUT_LINE('PROCEDURE COMPLETED AT '||TO_CHAR(SYSDATE,'DD-MM-YY HH24:MI:SS'));

		ROLLBACK;

            INSERT INTO MIG_VAM_VTSTBATCHPRCSTRN(BATCHRUNID,STARTDATE,ERRMSG,ERRPROC)
        VALUES(LV_BATCHRUNID,SYSDATE,OUT_STATUSDESC,'PRC_MIG_CUSTOMER_VAM');
	END;
	WHEN OTHERS THEN
	BEGIN
		OUT_STATUSCODE :='84';
		OUT_STATUSDESC := SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
        DBMS_OUTPUT.PUT_LINE('PROCEDURE COMPLETED AT '||TO_CHAR(SYSDATE,'DD-MM-YY HH24:MI:SS'));
    ROLLBACK;
    INSERT INTO VT_COB.VTSMERRLOG(ERRMSG,ERRPROC,ERRDATETIME)
    SELECT OUT_STATUSDESC,'PRC_MIG_CUSTOMERUSER_VAM',SYSTIMESTAMP FROM dual;
    INSERT INTO MIG_VAM_VTSTBATCHPRCSTRN(BATCHRUNID,STARTDATE,ERRMSG,ERRPROC)
        VALUES(LV_BATCHRUNID,SYSDATE,OUT_STATUSDESC,'PRC_MIG_CUSTOMER_VAM');


	END;

END PRC_MIG_CUSTOMERUSER_VAM;

/

--------------------1 VT_VAM----------------

create or replace PROCEDURE "PRC_MIG_VAM_DATAMOVE_VAM"
(OUT_STATUSCODE OUT VARCHAR2 ,
 OUT_STATUSDESC OUT VARCHAR2)
AS
LV_STATUSDESC VARCHAR2(2000);
BEGIN
/*SELECT COUNT(1),'STGVTSMVAACC		' FROM VT_MIGRATION.STGVTSMVAACC			  UNION ALL
SELECT COUNT(1),'STGVTSMVACCOUNTS	' FROM VT_MIGRATION.STGVTSMVACCOUNTS       UNION ALL
SELECT COUNT(1),'STGVTSMVACHNMAP	' FROM VT_MIGRATION.STGVTSMVACHNMAP       UNION ALL
SELECT COUNT(1),'STGVTSTPAYERUPL	' FROM VT_MIGRATION.STGVTSTPAYERUPL       UNION ALL
SELECT COUNT(1),'STGVTCMBUDSETUP	' FROM VT_MIGRATION.STGVTCMBUDSETUP       UNION ALL
SELECT COUNT(1),'STGVTSMVAACCTEMPMAP' FROM VT_MIGRATION.STGVTSMVAACCTEMPMAP   UNION ALL
SELECT COUNT(1),'STGVTSMVACARDS		' FROM VT_MIGRATION.STGVTSMVACARDS         UNION ALL
SELECT COUNT(1),'STGVTSTVACARDSUPL	' FROM VT_MIGRATION.STGVTSTVACARDSUPL      UNION ALL
SELECT COUNT(1),'STGVTPTTXN			' FROM VT_MIGRATION.STGVTPTTXN             UNION ALL
SELECT COUNT(1),'STGVTPTTXNEXP		' FROM VT_MIGRATION.STGVTPTTXNEXP          UNION ALL
SELECT COUNT(1),'STGVTFTLEDPOSTING	' FROM VT_MIGRATION.STGVTFTLEDPOSTING      UNION ALL
SELECT COUNT(1),'STGVTSTNARRATION	' FROM VT_MIGRATION.STGVTSTNARRATION       UNION ALL
SELECT COUNT(1),'STGVTPMNARRATION	' FROM VT_MIGRATION.STGVTPMNARRATION       UNION ALL
SELECT COUNT(1),'STGVTSMVAEARMARK	' FROM VT_MIGRATION.STGVTSMVAEARMARK       UNION ALL
SELECT COUNT(1),'STGVTSMVAEARMARKEXP' FROM VT_MIGRATION.STGVTSMVAEARMARKEXP   UNION ALL
SELECT COUNT(1),'STGVTPTTXNFUTURE	' FROM VT_MIGRATION.STGVTPTTXNFUTURE       UNION ALL
SELECT COUNT(1),'STGVTSTBATCHPRCSTRN' FROM VT_MIGRATION.STGVTSTBATCHPRCSTRN;

SELECT COUNT(1) , 'MIGVTCMVAENTITY		' FROM VAM_MIGVTCMVAENTITY		UNION ALL
SELECT COUNT(1) , 'MIGVTSMVACCOUNTS	'     FROM VAM_MIGVTSMVACCOUNTS         UNION ALL
SELECT COUNT(1) , 'MIGVTSMVACHNMAP		' FROM VAM_MIGVTSMVACHNMAP      UNION ALL
SELECT COUNT(1) , 'MIGVTSTPAYERUPL		' FROM VAM_MIGVTSTPAYERUPL      UNION ALL
SELECT COUNT(1) , 'MIGVTCMBUDSETUP		' FROM VAM_MIGVTCMBUDSETUP      UNION ALL
SELECT COUNT(1) , 'MIGVTSMVAACCTEMPMAP	' FROM VAM_MIGVTSMVAACCTEMPMAP  UNION ALL
SELECT COUNT(1) , 'MIGVTSMVACARDS		' FROM VAM_MIGVTSMVACARDS       UNION ALL
SELECT COUNT(1) , 'MIGVTSTVACARDSUPL	' FROM VAM_MIGVTSTVACARDSUPL    UNION ALL
SELECT COUNT(1) , 'MIGVTPTTXN			' FROM VAM_MIGVTPTTXN           UNION ALL
SELECT COUNT(1) , 'MIGVTPTTXNEXP		' FROM VAM_MIGVTPTTXNEXP        UNION ALL
SELECT COUNT(1) , 'MIGVTFTLEDPOSTING	' FROM VAM_MIGVTFTLEDPOSTING    UNION ALL
SELECT COUNT(1) , 'MIGVTPMNARRATION	' FROM VAM_MIGVTPMNARRATION         UNION ALL
SELECT COUNT(1) , 'MIGVTSMVAEARMARK	' FROM VAM_MIGVTSMVAEARMARK         UNION ALL
SELECT COUNT(1) , 'MIGVTSMVAEARMARKEXP	' FROM VAM_MIGVTSMVAEARMARKEXP  UNION ALL
SELECT COUNT(1) , 'MIGVTPTTXNFUTURE	' FROM VAM_MIGVTPTTXNFUTURE         UNION ALL
SELECT COUNT(1) , 'MIGVTSTBATCHPRCSTRN	' FROM VAM_MIGVTSTBATCHPRCSTRN;
*/

--UPDATE VAM_MIGVTCMVAENTITY		SET MIGSTATUSCODE='P',MIGSTATUSDESC='';
--UPDATE VAM_MIGVTSMVACCOUNTS     SET MIGSTATUSCODE='P',MIGSTATUSDESC='';
--UPDATE VAM_MIGVTSMVACHNMAP      SET MIGSTATUSCODE='P',MIGSTATUSDESC='';
--UPDATE VAM_MIGVTSTPAYERUPL      SET MIGSTATUSCODE='P',MIGSTATUSDESC='';
--UPDATE VAM_MIGVTCMBUDSETUP      SET MIGSTATUSCODE='P',MIGSTATUSDESC='';
--UPDATE VAM_MIGVTSMVAACCTEMPMAP  SET MIGSTATUSCODE='P',MIGSTATUSDESC='';
--UPDATE VAM_MIGVTSMVACARDS       SET MIGSTATUSCODE='P',MIGSTATUSDESC='';
--UPDATE VAM_MIGVTSTVACARDSUPL    SET MIGSTATUSCODE='P',MIGSTATUSDESC='';
--UPDATE VAM_MIGVTPTTXN           SET MIGSTATUSCODE='P',MIGSTATUSDESC='';
--UPDATE VAM_MIGVTPTTXNEXP        SET MIGSTATUSCODE='P',MIGSTATUSDESC='';
--UPDATE VAM_MIGVTFTLEDPOSTING    SET MIGSTATUSCODE='P',MIGSTATUSDESC='';
--UPDATE VAM_MIGVTPMNARRATION     SET MIGSTATUSCODE='P',MIGSTATUSDESC='';
--UPDATE VAM_MIGVTSMVAEARMARK     SET MIGSTATUSCODE='P',MIGSTATUSDESC='';
--UPDATE VAM_MIGVTSMVAEARMARKEXP  SET MIGSTATUSCODE='P',MIGSTATUSDESC='';
--UPDATE VAM_MIGVTPTTXNFUTURE     SET MIGSTATUSCODE='P',MIGSTATUSDESC='';
--UPDATE VAM_MIGVTSTBATCHPRCSTRN SET MIGSTATUSCODE='P',MIGSTATUSDESC='';


--STGVTSTBATCHPRCSTRN
INSERT INTO VAM_MIGVTSTBATCHPRCSTRN
(
BATCHRUNID,			BATCHID,			PSPID,				MERCHANTID,          FILENAME
,REQDATE,			PROCSTARTDATE,		PROCENDDATE,		TOTRECS
,SUCCRECS,			FAILRECS,			STARTDATE,          ENDDATE
,FILEUPLTHROUGH,	LVID,				ACKSTATUS,          ACKBATCHRUNID
,STOREID,			RECONCNT,			UNRECONCNT,         STATUSCODE
,STATUSDESC,		CRTBY,				CRTDATE,          	CRTIP
,TOTINVAMT,			PAYREFNO,			FILETYPE,          	REFID
,DENOMINATION,		INITCHN,			CBFILENAME,			CBBATCHRUNID
,CBRESPBATCHRUNID,	CUSTID,				ACCID,				LV1GROUPCODE
,LV2GROUPCODE,		LV3GROUPCODE,		LV4GROUPCODE,		LV5GROUPCODE
,LV1APPSTATUS,		LV2APPSTATUS,		LV3APPSTATUS,		LV4APPSTATUS
,LV5APPSTATUS,		LV1APPBY,			LV2APPBY,			LV3APPBY
,LV4APPBY,          LV5APPBY,			LV1APPDATE,			LV2APPDATE
,LV3APPDATE,		LV4APPDATE,			LV5APPDATE,			LV1APPREMARKS
,LV2APPREMARKS,		LV3APPREMARKS,		LV4APPREMARKS,		LV5APPREMARKS
,AUTOAPPFLAG,		AUT0APPDATE,		AUTHSEQFLAG,		SOLEAPPFLAG
,SOLEAPPDATE,		SOLEAPPREMARKS,		SOLEAPPBY,			AUTHDTLSID
,BILLNICNAME,		RETRYCOUNT,			ENTITYTYPE,			AUTOREJFLAG
,AUTOREJDATE,		ORGFILENAME,		DEBITTYPE,          BATCHREFNO
,FAILUREREASON,		CBMOLID,			CBRESPID,          	VERIFIEDBY
,VERIFIEDDATE,		DRACCTYPEFLAG,		H2HPSR,          	REQDEXCTNDT
,ALERTSENTFLAG,		SUBMITBY,			SUBMITDATE,         SUBMITIP
,APPBY,				APPDATE,			APPIP,				checkerRemark
,READEXEID,			READSTATUSCODE,		REJECTBY,			REJECTDATE
,REJECTIP,          HNIFLAG,          	NONHNIFLAG,			IMGUNMAPCOUNT
,OICNO,          	SUCCAMT,          	FAILAMT,			TOTAMT
,AUTOFLAGYN,		CBERRORCODE,		CBERRORDESC,		NESTREFNO
,PRCFILEPATH,		MDYBY,				MDYDATE,			SFTPFOLDER
,LOGINID,			LOGINID1,			LOGINID2,			GCIFNO
,MIGSTATUSCODE
)
SELECT
BATCHRUNID,			BATCHID,			PSPID,				MERCHANTID,          FILENAME
, TO_DATE( SUBSTR(REQDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ), 
TO_DATE( SUBSTR(PROCSTARTDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),		  TO_DATE( SUBSTR(PROCENDDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),		TOTRECS
,SUCCRECS,			FAILRECS,			 TO_DATE( SUBSTR(STARTDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),            TO_DATE( SUBSTR(ENDDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )
,FILEUPLTHROUGH,	LVID,				ACKSTATUS,          ACKBATCHRUNID
,STOREID,			RECONCNT,			UNRECONCNT,         STATUSCODE
,STATUSDESC,		CRTBY,				 TO_DATE( SUBSTR(CRTDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),          	CRTIP
,TOTINVAMT,			PAYREFNO,			FILETYPE,          	REFID
,DENOMINATION,		INITCHN,			CBFILENAME,			CBBATCHRUNID
,CBRESPBATCHRUNID,	CUSTID,				ACCID,				LV1GROUPCODE
,LV2GROUPCODE,		LV3GROUPCODE,		LV4GROUPCODE,		LV5GROUPCODE
,LV1APPSTATUS,		LV2APPSTATUS,		LV3APPSTATUS,		LV4APPSTATUS
,LV5APPSTATUS,		LV1APPBY,			LV2APPBY,			LV3APPBY
,LV4APPBY,          LV5APPBY,			 TO_DATE( SUBSTR(LV1APPDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),			  TO_DATE( SUBSTR(LV2APPDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )
,  TO_DATE( SUBSTR(LV3APPDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),		  TO_DATE( SUBSTR(LV4APPDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),			  TO_DATE( SUBSTR(LV5APPDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),			LV1APPREMARKS
,LV2APPREMARKS,		LV3APPREMARKS,		LV4APPREMARKS,		LV5APPREMARKS
,AUTOAPPFLAG,		AUT0APPDATE,		AUTHSEQFLAG,		SOLEAPPFLAG
,  TO_DATE( SUBSTR(SOLEAPPDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),		SOLEAPPREMARKS,		SOLEAPPBY,			AUTHDTLSID
,BILLNICNAME,		RETRYCOUNT,			ENTITYTYPE,			AUTOREJFLAG
,  TO_DATE( SUBSTR(AUTOREJDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),		ORGFILENAME,		DEBITTYPE,          BATCHREFNO
,FAILUREREASON,		CBMOLID,			CBRESPID,          	VERIFIEDBY
,  TO_DATE( SUBSTR(VERIFIEDDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),		DRACCTYPEFLAG,		H2HPSR,          	  TO_DATE( SUBSTR(REQDEXCTNDT, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )
,ALERTSENTFLAG,		SUBMITBY,			  TO_DATE( SUBSTR(SUBMITDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),         SUBMITIP
,APPBY,				  TO_DATE( SUBSTR(APPDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),			APPIP,				checkerRemark
,READEXEID,			READSTATUSCODE,		REJECTBY,			  TO_DATE( SUBSTR(REJECTDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )
,REJECTIP,          HNIFLAG,          	NONHNIFLAG,			IMGUNMAPCOUNT
,OICNO,          	SUCCAMT,          	FAILAMT,			TOTAMT
,AUTOFLAGYN,		CBERRORCODE,		CBERRORDESC,		NESTREFNO
,PRCFILEPATH,		MDYBY,				TO_DATE( SUBSTR(MDYDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),			SFTPFOLDER
,LOGINID,			LOGINID1,			LOGINID2,			GCIFNO
,'P'
FROM VT_MIGRATION.STGVTSTBATCHPRCSTRN;
DBMS_OUTPUT.PUT_LINE('MIGVTSTBATCHPRCSTRN '||SQL%ROWCOUNT||' rows inserted.');
--DBMS_OUTPUT.PUT_LINE('MIGVTSTBATCHPRCSTRN '||SQL%SAVE_EXCEPTIONS.COUNT||' rows inserted.');

/*
     MERGE INTO VAM_MIGVTSTBATCHPRCSTRN STG
      USING
      (
        SELECT STG.BATCHRUNID,USR.USERID
        FROM VT_MIGRATION.STGVTSTBATCHPRCSTRN  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER CU ON STG.CRTBY=CU.USERID
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(CU.LOGINID)
        WHERE STG.CRTBY IS NOT NULL)A
      ON (A.BATCHRUNID=STG.BATCHRUNID)
      WHEN MATCHED THEN
      UPDATE SET STG.CRTBY=A.USERID
      WHERE  STG.CRTBY IS NOT NULL;
      
      MERGE INTO VAM_MIGVTSTBATCHPRCSTRN STG
      USING
      (
        SELECT STG.BATCHRUNID,USR.USERID
        FROM VT_MIGRATION.STGVTSTBATCHPRCSTRN  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER CU ON STG.APPBY=CU.USERID
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(CU.LOGINID)
        WHERE STG.APPBY IS NOT NULL)A
      ON (A.BATCHRUNID=STG.BATCHRUNID)
      WHEN MATCHED THEN
      UPDATE SET STG.APPBY=A.USERID
      WHERE  STG.APPBY IS NOT NULL;
      
      MERGE INTO VAM_MIGVTSTBATCHPRCSTRN STG
      USING
      (
        SELECT STG.BATCHRUNID,USR.USERID
        FROM VT_MIGRATION.STGVTSTBATCHPRCSTRN  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER CU ON STG.MDYBY=CU.USERID
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(CU.LOGINID)
        WHERE STG.MDYBY IS NOT NULL)A
      ON (A.BATCHRUNID=STG.BATCHRUNID)
      WHEN MATCHED THEN
      UPDATE SET STG.MDYBY=A.USERID
      WHERE  STG.MDYBY IS NOT NULL;
*/
 --VTSMVAACC
 INSERT INTO VAM_MIGVTCMVAENTITY
 (
 VAACCID           ,COUNTRYID            ,GCIFNO           ,ACCID
,VACUSTIDNT        ,CURRENCYCODE         ,MATCHFLAG        ,HIERACHYTYPE
,PRNTMAP           ,PAYERMANITENANCE     ,IBANGENFLAG      ,VALLOCATION
,AUTOGENMAX        ,AUTOGENLIMIT         ,USERDEFMAX       ,USERDEFLIMIT
,ACCENTRY          ,MKRREMARKS           ,APRREMARKS       ,STATUS
,CRTBY             ,CRTDATE              ,CRTIP            ,APPBY
,APPDATE           ,APPIP                ,MDYBY            ,MDYDATE
,MDYIP             ,POOLACCNO            ,CHECKERREMARKS   ,LOCMAPFLAG
,LOCSETUPLVL       ,VACONFIG             ,VATYPE           ,HIERARCHYLVL
,HIERARCHYNAME     ,PAYERIDMAXLEN        ,PAYERIDCOUNTER   ,LOCID
,VAHGRP            ,ORDDETAILS           ,ENTITYNAME       ,BALANCECKREQ
,ZEROBALANCEACC    ,FREQUENCY            ,SELECTION        ,EMAIL
,VALENIDNT         ,VALIFECYCLE          ,LASTRUNDATE      ,POOLACCOUNT
,POOLACCOUNTVAID   ,MOBILENO             ,CARDUSAGETYPE    ,ISVABASED
,ENRICHFLAG        ,ACCNO                ,LOGINID          ,LOGINID1
,LOGINID2          ,MIGSTATUSCODE
)
SELECT
VAACCID           ,A.COUNTRYID             ,A.GCIFNO           ,A.ACCID
,VACUSTIDNT        ,CURRENCYCODE         ,MATCHFLAG        ,HIERACHYTYPE
,PRNTMAP           ,PAYERMANITENANCE     ,IBANGENFLAG      ,VALLOCATION
,AUTOGENMAX        ,AUTOGENLIMIT         ,USERDEFMAX       ,USERDEFLIMIT
,ACCENTRY          ,MKRREMARKS           ,APRREMARKS       ,A.STATUS
,A.CRTBY             , TO_DATE( SUBSTR(A.CRTDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )              ,A.CRTIP            ,A.APPBY
, TO_DATE( SUBSTR(A.APPDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )           ,A.APPIP                ,A.MDYBY            , TO_DATE( SUBSTR(A.MDYDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )
,A.MDYIP             ,POOLACCNO            ,CHECKERREMARKS   ,LOCMAPFLAG
,LOCSETUPLVL       ,VACONFIG             ,VATYPE           ,HIERARCHYLVL
,HIERARCHYNAME     ,PAYERIDMAXLEN        ,PAYERIDCOUNTER   ,LOCID
,VAHGRP            ,'VAD' AS ORDDETAILS           ,ENTITYNAME       ,BALANCECKREQ
,ZEROBALANCEACC    ,FREQUENCY            ,SELECTION        ,A.EMAIL
,VALENIDNT         ,VALIFECYCLE          , TO_DATE( SUBSTR(LASTRUNDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )     ,POOLACCOUNT
,POOLACCOUNTVAID   ,MOBILENO             ,CARDUSAGETYPE    ,ISVABASED
,ENRICHFLAG        ,B.ACCNO                ,A.LOGINID          ,A.LOGINID1
,A.LOGINID2          ,'P'
FROM VT_MIGRATION.STGVTSMVAACC A
INNER JOIN VT_MIGRATION.STGVTCMCUSTACC B ON A.ACCID=B.ACCID;

DBMS_OUTPUT.PUT_LINE('MIGVTCMVAENTITY '||SQL%ROWCOUNT||' rows inserted.');
--DBMS_OUTPUT.PUT_LINE('MIGVTCMVAENTITY '||SQL%SAVE_EXCEPTIONS.COUNT||' rows inserted.');

--VTSMVACCOUNTS
INSERT INTO VAM_MIGVTSMVACCOUNTS
(
VAIBANID          ,VAIBAN                 ,VAACCNAME        ,PAYERNAME
,VAACCID          ,VACUSTIDNT             ,ACCID            ,VAFLAG
,PARTNERID        ,EXTACCID               ,EXTACCNAME       ,EXTACCNO
,EMAIL            ,HIERARCHYTYPE          ,HIERARCHYLVL     ,HIERARCHYNAME
,LOCMAP           ,PRNTMAP                ,ENTITYTYPE       ,PAYERHGRP
,REMARKS          ,CHECKERREMARKS         ,STATUS           ,ISDELETED
,CRTBY            ,CRTDATE                ,CRTIP            ,APPBY
,APPDATE          ,APPIP                  ,MDYBY            ,MDYDATE
,MDYIP            ,COUNTRYID              ,COUNTRYCODE2     ,CURRENCYCODE
,ACCSTATUS        ,AVLBAL                 ,EFFBAL           ,BUILDBALFLAG
,BATCHRUNID       ,VACUSTTYPE             ,PAYERID          ,FILEUPLOAD
,EIDA             ,CONTACTNO              ,ADDR1            ,ADDR2
,ADDR3            ,VAALIAS                ,ACCOUNTNO        ,EARMARKAMT
,RETRYCOUNT       ,VACHNACTSTATUS         ,ENRICHFIELD1     ,ENRICHFIELD2
,ENRICHFIELD3     ,VACHNACTSTATUSDESC     ,REQTYPE          ,VAREQTYPE
,READEXEID        ,READSTATUSCODE         ,VARPTEXEID       ,VARPTSTATUSCODE
,APPENTITYTYPE    ,VAREQIDNTTYPE          ,APICALLBAKSTATUS ,APISTATUSCODE
,APISTATUSDESC    ,APICALLBAKDATE         ,APIBATCHRUNID    ,APIUPLID
,BBAN             ,ACCNO                  ,LOGINID          ,LOGINID1
,LOGINID2         ,GCIFNO                 ,MIGSTATUSCODE
)

SELECT 
VAIBANID          ,A.VAIBAN                 ,A.VAACCNAME        ,A.PAYERNAME
,A.VAACCID          ,A.VACUSTIDNT             ,A.ACCID            ,A.VAFLAG
,A.PARTNERID        ,A.EXTACCID               ,A.EXTACCNAME       ,A.EXTACCNO
,A.EMAIL            ,A.HIERARCHYTYPE          ,A.HIERARCHYLVL     ,A.HIERARCHYNAME
,A.LOCMAP           ,A.PRNTMAP                ,A.ENTITYTYPE       ,A.PAYERHGRP
,A.REMARKS          ,A.CHECKERREMARKS         ,A.STATUS           ,A.ISDELETED
,A.CRTBY            , TO_DATE( SUBSTR(A.CRTDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )                ,A.CRTIP            ,A.APPBY
,TO_DATE( SUBSTR(A.APPDATE,1, 19),'YYYY-MM-DD HH24:MI:SS' )          ,A.APPIP                  ,A.MDYBY            , TO_DATE( SUBSTR(A.MDYDATE,1,19),'YYYY-MM-DD HH24:MI:SS' )
,A.MDYIP            ,A.COUNTRYID              ,A.COUNTRYCODE2     ,A.CURRENCYCODE
,A.ACCSTATUS        ,A.AVLBAL                 ,A.EFFBAL           ,A.BUILDBALFLAG
,A.BATCHRUNID       ,A.VACUSTTYPE             ,A.PAYERID          ,A.FILEUPLOAD
,A.EIDA             ,A.CONTACTNO              ,A.ADDR1            ,A.ADDR2
,A.ADDR3            ,A.VAALIAS                ,A.ACCOUNTNO        ,A.EARMARKAMT
,A.RETRYCOUNT       ,A.VACHNACTSTATUS         ,A.ENRICHFIELD1     ,A.ENRICHFIELD2
,A.ENRICHFIELD3     ,A.VACHNACTSTATUSDESC     ,A.REQTYPE          ,A.VAREQTYPE
,A.READEXEID        ,A.READSTATUSCODE         ,A.VARPTEXEID       ,A.VARPTSTATUSCODE
,A.APPENTITYTYPE    ,A.VAREQIDNTTYPE          ,A.APICALLBAKSTATUS ,A.APISTATUSCODE
,A.APISTATUSDESC    ,A.APICALLBAKDATE         ,A.APIBATCHRUNID    ,A.APIUPLID
,A.BBAN             ,B.ACCNO                  ,A.LOGINID          ,A.LOGINID1
,A.LOGINID2         ,F.GCIFNO                 ,'P'
FROM VT_MIGRATION.STGVTSMVACCOUNTS A
INNER JOIN VT_MIGRATION.STGVTSMVAACC F ON A.VACUSTIDNT=F.VACUSTIDNT
LEFT JOIN VT_MIGRATION.STGVTCMCUSTACC B ON A.ACCID=B.ACCID;

 /*MERGE INTO VAM_MIGVTSMVACCOUNTS STG
      USING
      (
        SELECT STG.VACUSTIDNT,USR.USERID
        FROM VT_MIGRATION.STGVTSMVACCOUNTS  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER CU ON STG.CRTBY=CU.USERID
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(CU.LOGINID)
        WHERE STG.CRTBY IS NOT NULL)A
      ON (A.VACUSTIDNT=STG.VACUSTIDNT)
      WHEN MATCHED THEN
      UPDATE SET STG.CRTBY=A.USERID
      WHERE  STG.CRTBY IS NOT NULL;
      
      MERGE INTO VAM_MIGVTSMVACCOUNTS STG
      USING
      (
        SELECT STG.VACUSTIDNT,USR.USERID
        FROM VT_MIGRATION.STGVTSMVACCOUNTS  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER CU ON STG.APPBY=CU.USERID
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(CU.LOGINID)
        WHERE STG.APPBY IS NOT NULL)A
      ON (A.VACUSTIDNT=STG.VACUSTIDNT)
      WHEN MATCHED THEN
      UPDATE SET STG.APPBY=A.USERID
      WHERE  STG.APPBY IS NOT NULL;
      
      MERGE INTO VAM_MIGVTSMVACCOUNTS STG
      USING
      (
        SELECT STG.VACUSTIDNT,USR.USERID
        FROM VT_MIGRATION.STGVTSMVACCOUNTS  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER CU ON STG.MDYBY=CU.USERID
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(CU.LOGINID)
        WHERE STG.MDYBY IS NOT NULL)A
      ON (A.VACUSTIDNT=STG.VACUSTIDNT)
      WHEN MATCHED THEN
      UPDATE SET STG.MDYBY=A.USERID
      WHERE  STG.MDYBY IS NOT NULL;
*/
DBMS_OUTPUT.PUT_LINE('MIGVTSMVACCOUNTS '||SQL%ROWCOUNT||' rows inserted.');
--DBMS_OUTPUT.PUT_LINE('MIGVTSMVACCOUNTS '||SQL%SAVE_EXCEPTIONS.COUNT||' rows inserted.');

--VTSMVACHNMAP
/*
INSERT INTO VAM_MIGVTSMVACHNMAP
(
VACHNMAPID         ,VAIBANID              ,CHNID            ,STATUSCODE
,STATUSDESC        ,CRTBY                 ,CRTDATE          ,CRTIP
,APPBY             ,APPDATE               ,APPIP            ,EVENTTYPE
,READEXEID         ,READSTATUSCODE        ,VAIBAN           ,VACUSTIDNT
,LOGINID           ,LOGINID1              ,MIGSTATUSCODE
)
SELECT
VACHNMAPID         ,VAIBANID              ,CHNID            ,STATUSCODE
,STATUSDESC        ,CRTBY                 , TO_DATE( SUBSTR(CRTDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )          ,CRTIP
,APPBY             , TO_DATE( SUBSTR(APPDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )               ,APPIP            ,EVENTTYPE
,READEXEID         ,READSTATUSCODE        ,VAIBAN           ,VACUSTIDNT
,LOGINID           ,LOGINID1              ,'P'
FROM VT_MIGRATION.STGVTSMVACHNMAP;
*/
DBMS_OUTPUT.PUT_LINE('MIGVTSMVACHNMAP '||SQL%ROWCOUNT||' rows inserted.');
--DBMS_OUTPUT.PUT_LINE('MIGVTSMVACHNMAP '||SQL%SAVE_EXCEPTIONS.COUNT||' rows inserted.');

--VTSTPAYERUPL
INSERT INTO VAM_MIGVTSTPAYERUPL
(
BATCHRUNID           ,PAYERID                ,PAYERNAME        ,HIERARCHYTYPE
,HIERARCHYLVL        ,HIERARCHYNAME          ,EMAIL            ,VANAME
,LOCMAP              ,VAACCID                ,PRNTMAP          ,REMARKS
,STATUS              ,STATUSCODE             ,REQBY            ,REQDATE
,REQIP               ,STATUSDESC             ,VACUSTIDNT       ,COUNTRYCODE2
,VAIBAN              ,VACUSTTYPE             ,ADDR1            ,ADDR2
,ADDR3               ,EIDA                   ,CONTACTNO        ,VAALIAS
,RECSEQ              ,ENRICHFIELD1           ,ENRICHFIELD2     ,ENRICHFIELD3
,RECSTATUSCODE       ,APPREJBY               ,APPREJDATE       ,APPREJENTITYTYPE
,REQTYPE             ,ISDUPLICATE            ,LOGINID           ,MIGSTATUSCODE
)
SELECT
BATCHRUNID           ,PAYERID                ,PAYERNAME        ,HIERARCHYTYPE
,HIERARCHYLVL        ,HIERARCHYNAME          ,EMAIL            ,VANAME
,LOCMAP              ,VAACCID                ,PRNTMAP          ,REMARKS
,STATUS              ,STATUSCODE             ,REQBY            , TO_DATE( SUBSTR(REQDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )
,REQIP               ,STATUSDESC             ,VACUSTIDNT       ,COUNTRYCODE2
,VAIBAN              ,VACUSTTYPE             ,ADDR1            ,ADDR2
,ADDR3               ,EIDA                   ,CONTACTNO        ,VAALIAS
,RECSEQ              ,ENRICHFIELD1           ,ENRICHFIELD2     ,ENRICHFIELD3
,RECSTATUSCODE       ,APPREJBY               , TO_DATE( SUBSTR(APPREJDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )       ,APPREJENTITYTYPE
,REQTYPE             ,ISDUPLICATE            ,LOGINID          ,'P'
FROM VT_MIGRATION.STGVTSTPAYERUPL;
--WHERE BATCHRUNID IN (SELECT BATCHRUNID FROM VAM_MIGVTSTBATCHPRCSTRN WHERE STATUSCODE=5200);

DBMS_OUTPUT.PUT_LINE('MIGVTSTPAYERUPL '||SQL%ROWCOUNT||' rows inserted.');
--DBMS_OUTPUT.PUT_LINE('MIGVTSTPAYERUPL '||SQL%SAVE_EXCEPTIONS.COUNT||' rows inserted.');

INSERT INTO VAM_MIGVTCMBUDSETUP
(
 BUDID                      ,ENTITYID_IBAN                ,PARENTCODE              ,CURRENCYCODE
,DENOMINATION               ,FREQUENCY                    ,STARTDATE               ,ENDDATE
,BUDTYPE                    ,BUDLIMIT                     ,REMARKS                 ,CHECKERREMARKS
,STATUS                     ,ISDELETED                    ,CRTBY                   ,CRTDATE
,CRTIP                      ,APPBY                        ,APPDATE                 ,APPIP
,MDYBY                      ,MDYDATE                      ,MDYIP                   ,CUSTID
,RECURCYCLE                 ,RECURSTARTDATE               ,RECURENDDATE            ,NOOFOCCURRENCE
,CARRYFORWARDFLAG           ,ACCID                        ,ENTITYNAME              ,BUDMOD
,TOTAL_LIMIT                ,AVAILABLE_LIMIT              ,UTIL_LIMIT              ,BUDREFNO
,BUDGETDATAREFNO            ,DURATIONPERCYCLE             ,BUDGETSTATUSCODE        ,NXTOCCUR
,EARMARKAMT                 ,BUDREFID                     ,SUBBUDID                ,THRESHOLDAMNTFLAG
,AMNTEXCEEDFLAG             ,ADJUSTMENTAMT                ,BATCHRUNID              ,VACARDSUPLID
,GCIFNO                     ,ACCNO                         ,LOGINID                 ,LOGINID1
,LOGINID2                   ,MIGSTATUSCODE
)
SELECT
BUDID                      ,A.ENTITYID_IBAN                ,A.PARENTCODE              ,A.CURRENCYCODE
,A.DENOMINATION               ,A.FREQUENCY                    ,TO_DATE( SUBSTR(A.STARTDATE, 1, 19) , 'YYYY-MM-DD HH24:MI:SS' )               ,TO_DATE( SUBSTR(ENDDATE,1,19), 'YYYY-MM-DD HH24:MI:SS' )
,A.BUDTYPE                    ,A.BUDLIMIT                     ,A.REMARKS                 ,A.CHECKERREMARKS
,A.STATUS                     ,A.ISDELETED                    ,A.CRTBY                   ,TO_DATE( SUBSTR(A.CRTDATE, 1, 19),'YYYY-MM-DD HH24:MI:SS' )
,A.CRTIP                      ,A.APPBY                        ,TO_DATE( SUBSTR(A.APPDATE,1,19),'YYYY-MM-DD HH24:MI:SS' )                 ,A.APPIP
,A.MDYBY                      ,TO_DATE( SUBSTR(A.MDYDATE, 1, 19),'YYYY-MM-DD HH24:MI:SS' )                      ,A.MDYIP                   ,A.CUSTID
,A.RECURCYCLE                 ,TO_DATE( SUBSTR(A.RECURSTARTDATE,1, 19),'YYYY-MM-DD HH24:MI:SS' )               ,TO_DATE( SUBSTR(A.RECURENDDATE,1, 19), 'YYYY-MM-DD HH24:MI:SS' )             ,A.NOOFOCCURRENCE
,A.CARRYFORWARDFLAG           ,A.ACCID                        ,A.ENTITYNAME              ,A.BUDMOD
,A.TOTAL_LIMIT                ,A.AVAILABLE_LIMIT              ,A.UTIL_LIMIT              ,A.BUDREFNO
,A.BUDGETDATAREFNO             ,DBMS_LOB.SUBSTR(A.DURATIONPERCYCLE,4000,1)      ,A.BUDGETSTATUSCODE        ,A.NXTOCCUR
,A.EARMARKAMT                 ,A.BUDREFID                     ,A.SUBBUDID                ,A.THRESHOLDAMNTFLAG
,A.AMNTEXCEEDFLAG             ,A.ADJUSTMENTAMT                ,A.BATCHRUNID              ,A.VACARDSUPLID
,A.GCIFNO                    ,A.ACCNO                         ,A.LOGINID                 ,A.LOGINID1
,A.LOGINID2                  ,'P'
FROM VT_MIGRATION.STGVTCMBUDSETUP A;

DBMS_OUTPUT.PUT_LINE('MIGVTCMBUDSETUP '||SQL%ROWCOUNT||' rows inserted.');
--DBMS_OUTPUT.PUT_LINE('MIGVTCMBUDSETUP '||SQL%SAVE_EXCEPTIONS.COUNT||' rows inserted.');

--VTSMVAACCTEMPMAP
INSERT INTO VAM_MIGVTSMVAACCTEMPMAP
(
VACCTEMPID              ,VAENTITYID           ,TEMPID            ,TEMPCODE
,TEMPNAME               ,STATUS               ,ISDELETED         ,CRTBY
,CRTDATE                ,CRTIP                ,APPBY             ,APPDATE
,APPIP                  ,MDYBY                ,MDYDATE           ,MDYIP
,LOGINID                ,LOGINID1             ,LOGINID2          ,MIGSTATUSCODE
)
SELECT
VACCTEMPID              ,VAENTITYID           ,TEMPID            ,TEMPCODE
,TEMPNAME               ,STATUS               ,ISDELETED         ,CRTBY
, TO_DATE( SUBSTR(CRTDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )                ,CRTIP                ,APPBY             , TO_DATE( SUBSTR(APPDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )
,APPIP                  ,MDYBY                , TO_DATE( SUBSTR(MDYDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )           ,MDYIP
,LOGINID                ,LOGINID1             ,LOGINID2         ,'P'
FROM VT_MIGRATION.STGVTSMVAACCTEMPMAP;

DBMS_OUTPUT.PUT_LINE('MIGVTSMVAACCTEMPMAP '||SQL%ROWCOUNT||' rows inserted.');
--DBMS_OUTPUT.PUT_LINE('MIGVTSMVAACCTEMPMAP '||SQL%SAVE_EXCEPTIONS.COUNT||' rows inserted.');

--VTSTVACARDSUPL
INSERT INTO VAM_MIGVTSTVACARDSUPL
(
VACARDSUPLID          ,BATCHRUNID           ,VACUSTIDNT          ,FNAME
,LNAME                ,MNAME                ,DOB                 ,EMAIL
,MOBILENO             ,ADDLINE1             ,ADDLINE2            ,ADDLINE3
,ADDLINE4             ,CITY                 ,VALIDFROM           ,EXPIRYMONTHS
,CARDUSAGETYPE        ,FREQUENCY            ,BUDSTARTDATE        ,BUDENDDATE
,NOOFRECUR            ,BUDAMOUNT            ,CARDLIMIT           ,DAILYTXNLIMIT
,PERTXNLIMIT          ,DAILYTXNCOUNT        ,CONTACTPERSON       ,CONTACTEMAIL
,CONTACTMOBILE        ,MKRREMARKS           ,STATUSCODE          ,STATUSDESC
,CRTBY                ,CRTDATE              ,CRTIP               ,RECSEQ
,LIMITTYPE            ,RECSTATUSCODE        ,MOBCODE             ,CONTACTCNTRYCODE
,LOGINID              ,MIGSTATUSCODE
)

SELECT
VACARDSUPLID          ,BATCHRUNID           ,VACUSTIDNT          ,FNAME
,LNAME                ,MNAME                ,DOB                 ,EMAIL
,MOBILENO             ,ADDLINE1             ,ADDLINE2            ,ADDLINE3
,ADDLINE4             ,CITY                 ,VALIDFROM           ,EXPIRYMONTHS
,CARDUSAGETYPE        ,FREQUENCY            ,BUDSTARTDATE        ,BUDENDDATE
,NOOFRECUR            ,BUDAMOUNT            ,CARDLIMIT           ,DAILYTXNLIMIT
,PERTXNLIMIT          ,DAILYTXNCOUNT        ,CONTACTPERSON       ,CONTACTEMAIL
,CONTACTMOBILE        ,MKRREMARKS           ,STATUSCODE          ,STATUSDESC
,CRTBY                , TO_DATE( SUBSTR(CRTDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )              ,CRTIP               ,RECSEQ
,LIMITTYPE            ,RECSTATUSCODE        ,MOBCODE             ,CONTACTCNTRYCODE
,LOGINID              ,'P'
FROM  VT_MIGRATION.STGVTSTVACARDSUPL;

DBMS_OUTPUT.PUT_LINE('MIGVTSTVACARDSUPL '||SQL%ROWCOUNT||' rows inserted.');
--DBMS_OUTPUT.PUT_LINE('MIGVTSTVACARDSUPL '||SQL%SAVE_EXCEPTIONS.COUNT||' rows inserted.');


INSERT INTO VAM_MIGVTSMVACARDS
(VACARDID,         VACARDNO,         ACCID,         VACUSTIDNT
,VAIBANID,         VAIBAN,         FNAME
,LNAME,         MNAME,         DOB ,         EMAIL
,MOBILENO,         ADDLINE1,         ADDLINE2,         ADDLINE3
,ADDLINE4,         CITY,         VALIDFROM,         EXPIRYMONTHS
,DAILYTXNLIMIT,         PERTXNLIMIT,         DAILYTXNCOUNT,         KCPDETAILTYPE
,CARDEXPIRYDATE,         STATUS,         MKRREMARKS,         APRREMARKS
,CURRSTATUSCODE,         CURRSTATUSDESC,         CRTBY,         CRTDATE
,CRTIP,         APPBY,         APPDATE,         APPIP
,MDYBY,         MDYDATE,         MDYIP,         CUSTID,         MOBCODE
,CARDLIMIT,         LIMITTYPE,         RENEWALFLAG,         READSTATUSCODE
,TRANSACTIONID,         READEXEID,         BATCHRUNID,         VACARDSUPLID
,APPENTITYTYPE,         RENEWALDATE,         BLOCKEDDATE,         CLOSEDEODDATE
,EXPIREDALERTFLAG,         NEAREXPIREDALERTFLAG,         MASKCARDNO,         REQUESTTYPE
,ACCNO,         GCIFNO,         --LOGINID1,         LOGINID2
--,LOGINID3,         CRTBY_LOGINID,         APPBY_LOGINID,         MDYBY_LOGINID,
MIGSTATUSCODE)
SELECT
VACARDID,         VACARDNO,         A.ACCID,         VACUSTIDNT
,VAIBANID,         VAIBAN,         FNAME
,LNAME,         MNAME,          TO_DATE( SUBSTR(DOB, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),         A.EMAIL
,MOBILENO,         A.ADDLINE1,         A.ADDLINE2,         A.ADDLINE3
,ADDLINE4,         A.CITY,          TO_DATE( SUBSTR(VALIDFROM, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),         EXPIRYMONTHS
,DAILYTXNLIMIT,         PERTXNLIMIT,         DAILYTXNCOUNT,         KCPDETAILTYPE
, TO_DATE( SUBSTR(CARDEXPIRYDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),         A.STATUS,         MKRREMARKS,         APRREMARKS
,CURRSTATUSCODE,         CURRSTATUSDESC,         A.CRTBY,          TO_DATE( SUBSTR(A.CRTDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )
,A.CRTIP,         A.APPBY,          TO_DATE( SUBSTR(A.APPDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),         A.APPIP
,A.MDYBY,          TO_DATE( SUBSTR(A.MDYDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),         A.MDYIP,         A.CUSTID,         MOBCODE
,CARDLIMIT,         LIMITTYPE,         RENEWALFLAG,         READSTATUSCODE
,TRANSACTIONID,         READEXEID,         A.BATCHRUNID,         VACARDSUPLID
,APPENTITYTYPE,          TO_DATE( SUBSTR(RENEWALDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),           TO_DATE( SUBSTR(BLOCKEDDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),          TO_CHAR(TO_DATE(CLOSEDEODDATE, 'DD-MM-YYYY' ),'DD-MON-YY')
,EXPIREDALERTFLAG,         NEAREXPIREDALERTFLAG,         MASKCARDNO,         REQUESTTYPE
,B.ACCNO,         C.GCIFNO,    --    LOGINID1,         LOGINID2
--,LOGINID3,         CRTBY_LOGINID,         APPBY_LOGINID,         MDYBY_LOGINID,
'P'
FROM VT_MIGRATION.STGVTSMVACARDS A
INNER JOIN VT_MIGRATION.STGVTCMCUSTACC B ON A.ACCID=B.ACCID
INNER JOIN VT_MIGRATION.STGVTCMCUST C ON A.CUSTID=C.CUSTID;
DBMS_OUTPUT.PUT_LINE('MIGVTSTVACARDS '||SQL%ROWCOUNT||' rows inserted.');

/*
MERGE INTO VAM_MIGVTSMVACARDS STG
      USING
      (
        SELECT STG.VACARDID,USR.USERID
        FROM VT_MIGRATION.STGVTSMVACARDS  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER CU ON STG.CRTBY=CU.USERID
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(CU.LOGINID)
        WHERE STG.CRTBY IS NOT NULL)A
      ON (A.VACARDID=STG.VACARDID)
      WHEN MATCHED THEN
      UPDATE SET STG.CRTBY=A.USERID
      WHERE  STG.CRTBY IS NOT NULL;
      
      MERGE INTO VAM_MIGVTSMVACARDS STG
      USING
      (
        SELECT STG.VACARDID,USR.USERID
        FROM VT_MIGRATION.STGVTSMVACARDS  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER CU ON STG.APPBY=CU.USERID
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(CU.LOGINID)
        WHERE STG.APPBY IS NOT NULL)A
      ON (A.VACARDID=STG.VACARDID)
      WHEN MATCHED THEN
      UPDATE SET STG.APPBY=A.USERID
      WHERE  STG.APPBY IS NOT NULL;
      
      MERGE INTO VAM_MIGVTSMVACARDS STG
      USING
      (
        SELECT STG.VACARDID,USR.USERID
        FROM VT_MIGRATION.STGVTSMVACARDS  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER CU ON STG.MDYBY=CU.USERID
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(CU.LOGINID)
        WHERE STG.MDYBY IS NOT NULL)A
      ON (A.VACARDID=STG.VACARDID)
      WHEN MATCHED THEN
      UPDATE SET STG.MDYBY=A.USERID
      WHERE STG.MDYBY IS NOT NULL;
*/     

INSERT INTO VAM_MIGVTPTTXN
(
PAYTRNREFNO           ,REQPAYREFNO           ,PAYTRNINITDATE            ,BULKUPLRECSEQ
,TXNDATE              ,ACCID                 ,DRACCNO                   ,DRTXNAMOUNT
,DRCURRENCYCODE       ,DRDENOMINATION        ,DEALCODE                  ,DRACCNAME
,DRIBAN               ,BENINITTYPE           ,BENID                     ,CRACCNO
,CRTXNAMOUNT          ,CRCURRENCYCODE        ,CRDENOMINATION            ,BENNAME
,BENEMAIL             ,BENMOBNO              ,BENBICCODE                ,IDENTIFIER
,CLEARINGCODE         ,BENCOUNTRYID          ,COUNTRYCODE3              ,BENBANKNAME
,BENBANKADD           ,ISSAVEBEN             ,TXNAMOUNT                 ,CURRENCYCODE
,DENOMINATION         ,PAYCODEID             ,PAYMENTPURPCODE           ,PAYDTLS
,CUSTTXNREFNO         ,CHRGCODE              ,REQDEXCTNDT               ,ISSAVESTANDINSTR
,ADDNTLEMAIL          ,PAYADVTYPE            ,PAYADVDTLS                ,UPLOADPAYADVFILE
,CHREFNO              ,DRACCTYPE             ,TXNTYPE                   ,VAT
,CHRGAMT              ,CHRGTYPE              ,INITCHN                   ,RECURID
,BATCHRUNID           ,RSSTATUSCODE          ,RSSTATUSDESC              ,RSSEVERITY
,RSSOURCE             ,RSBILLPAIDSTATUS      ,INSEQ                     ,LV1GROUPCODE
,LV2GROUPCODE         ,LV3GROUPCODE          ,LV4GROUPCODE              ,LV5GROUPCODE
,LV1APPSTATUS         ,LV2APPSTATUS          ,LV3APPSTATUS              ,LV4APPSTATUS
,LV5APPSTATUS         ,LV1APPBY              ,LV2APPBY                  ,LV3APPBY
,LV4APPBY             ,LV5APPBY              ,LV1APPDATE                ,LV2APPDATE
,LV3APPDATE           ,LV4APPDATE            ,LV5APPDATE                ,AUTOAPPFLAG
,AUTOAPPDATE          ,AUTHDTLSID            ,LV1APPREMARKS             ,LV2APPREMARKS
,LV3APPREMARKS        ,LV4APPREMARKS         ,LV5APPREMARKS             ,CHNREFNO
,BENADV               ,PAYDATE               ,BENBANKCODE               ,BENBANKLOC
,PRDCODE              ,BENADDR1              ,BENADDR2                  ,BENADDR3
,BENADDR4             ,CURRSTATUSCODE        ,CURRSTATUSDESC            ,REMARKS
,CHECKERREMARKS       ,STATUS                ,ISDELETED                 ,CRTBY
,CRTDATE              ,CRTIP                 ,APPBY                     ,APPDATE
,APPIP                ,MDYBY                 ,MDYDATE                   ,MDYIP
,PAYMETHODID          ,FAVOURITE             ,THREADID                  ,PAYTYPE
,COREJOURNAL          ,TRNPROCESS            ,TRNPROCESSTYPE            ,BENADVSTATUS
,BENADVDATE           ,BATCHREFNO            ,DEBITTYPE                 ,RETRYCOUNT
,LASTRETRYDATE        ,BNKCHRGAMT            ,BNKVATAMT                 ,TRNCHRGAMT
,TRNVATAMT            ,BNKCHRGLOGID          ,TRNCHRGLOGID              ,DRACCTYPEFLAG
,CRACCTYPEFLAG        ,COUNTRYCODE2          ,VERIFIERREMARKS           ,VERIFIERFLAG
,VERIFIEDDATE         ,VERIFIEDBY            ,DRCOUNTRYCODE2            ,CANREQBY
,CANREQDATE           ,CANREQREMARKS         ,CANAPPBY                  ,CANAPPDATE
,CANAPPREMARKS        ,BENBRANCHNAME         ,CANSOLEAPPFLAG            ,DRBRANCHCODE
,BENCOUNTRYCODE       ,MAILREF               ,EXCHANGERATE              ,CUSTID
,CBERRORCODE          ,CBERRORDESC           ,SIERRORCODE               ,SIERRORDESC
,CHRGCURRENCYCODE     ,CHRGDENOMINATION      ,CURRTXNTYPE               ,ACCBAL
,CRETEID              ,CBSREFNO              ,PREVIOUSREFNO             ,EARMARKREFNO
,NARRATION            ,REMBNKINFOLINE1       ,REMBNKINFOLINE2           ,REMBNKINFOLINE3
,REMBNKINFOLINE4      ,REMBNKINFOLINE5       ,REMBNKINFOLINE6           ,NEGOTIATEDRATE
,RATETYPE             ,VALUEDATE             ,STMTSEQUENCE              ,STMTENTRYID
,SEGMENT              ,REQUESTID             ,REVERSALINDICATOR         ,ENTITYID
,BUDID                ,CR21NARRATION         ,OWNNARRATION              ,SUBBUDID
,ADJUSTMENTAMT        ,CBSTATUSCODE          ,MERCHANTCATEGORYCODE      ,VACARDID
,TXNNARRATION         ,APICALLSTATUS         ,APICALLBAKDATE
,NARRFLAG             ,ACCNO                 ,LOGINID                   ,LOGINID1
,LOGINID2             ,GCIFNO                ,MIGSTATUSCODE
)
SELECT 
 PAYTRNREFNO           ,A.REQPAYREFNO           ,TO_DATE( SUBSTR(A.PAYTRNINITDATE,1,19), 'YYYY-MM-DD HH24:MI:SS' )            ,A.BULKUPLRECSEQ
,TO_DATE( SUBSTR(A.TXNDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )            ,A.ACCID                 ,A.DRACCNO                   ,A.DRTXNAMOUNT
,A.DRCURRENCYCODE       ,A.DRDENOMINATION        ,A.DEALCODE                  ,A.DRACCNAME
,A.DRIBAN               ,A.BENINITTYPE           ,A.BENID                     ,A.CRACCNO
,A.CRTXNAMOUNT          ,A.CRCURRENCYCODE        ,A.CRDENOMINATION            ,A.BENNAME
,A.BENEMAIL             ,A.BENMOBNO              ,A.BENBICCODE                ,A.IDENTIFIER
,A.CLEARINGCODE         ,A.BENCOUNTRYID          ,A.COUNTRYCODE3              ,A.BENBANKNAME
,A.BENBANKADD           ,A.ISSAVEBEN             ,A.TXNAMOUNT                 ,A.CURRENCYCODE
,A.DENOMINATION         ,A.PAYCODEID             ,A.PAYMENTPURPCODE           ,A.PAYDTLS
,A.CUSTTXNREFNO         ,A.CHRGCODE              ,A.REQDEXCTNDT               ,A.ISSAVESTANDINSTR
,A.ADDNTLEMAIL          ,A.PAYADVTYPE            ,A.PAYADVDTLS                ,A.UPLOADPAYADVFILE
,A.CHREFNO              ,A.DRACCTYPE             ,A.TXNTYPE                   ,A.VAT
,A.CHRGAMT              ,A.CHRGTYPE              ,A.INITCHN                   ,A.RECURID
,A.BATCHRUNID           ,A.RSSTATUSCODE          ,A.RSSTATUSDESC              ,A.RSSEVERITY
,A.RSSOURCE             ,A.RSBILLPAIDSTATUS      ,A.INSEQ                     ,A.LV1GROUPCODE
,A.LV2GROUPCODE         ,A.LV3GROUPCODE          ,A.LV4GROUPCODE              ,A.LV5GROUPCODE
,A.LV1APPSTATUS         ,A.LV2APPSTATUS          ,A.LV3APPSTATUS              ,A.LV4APPSTATUS
,A.LV5APPSTATUS         ,A.LV1APPBY              ,A.LV2APPBY                  ,A.LV3APPBY
,A.LV4APPBY             ,A.LV5APPBY              ,A.LV1APPDATE                ,A.LV2APPDATE
,A.LV3APPDATE           ,A.LV4APPDATE            ,A.LV5APPDATE                ,A.AUTOAPPFLAG
,A.AUTOAPPDATE          ,A.AUTHDTLSID            ,A.LV1APPREMARKS             ,A.LV2APPREMARKS
,A.LV3APPREMARKS        ,A.LV4APPREMARKS         ,A.LV5APPREMARKS             ,A.CHNREFNO
,A.BENADV               ,TO_DATE( SUBSTR(A.PAYDATE,1, 19),'YYYY-MM-DD HH24:MI:SS' )               ,A.BENBANKCODE               ,A.BENBANKLOC
,A.PRDCODE              ,A.BENADDR1              ,A.BENADDR2                  ,A.BENADDR3
,A.BENADDR4             ,A.CURRSTATUSCODE        ,A.CURRSTATUSDESC            ,A.REMARKS
,A.CHECKERREMARKS       ,A.STATUS                ,A.ISDELETED                 ,A.CRTBY
, TO_DATE( SUBSTR(A.CRTDATE,1, 19), 'YYYY-MM-DD HH24:MI:SS' )              ,A.CRTIP                 ,A.APPBY                     ,A.APPDATE
,A.APPIP                ,A.MDYBY                 ,TO_DATE( SUBSTR(A.MDYDATE, 1, 19),'YYYY-MM-DD HH24:MI:SS' )                   ,A.MDYIP
,A.PAYMETHODID          ,A.FAVOURITE             ,A.THREADID                  ,A.PAYTYPE
,A.COREJOURNAL          ,A.TRNPROCESS            ,A.TRNPROCESSTYPE            ,A.BENADVSTATUS
,A.BENADVDATE           ,A.BATCHREFNO            ,A.DEBITTYPE                 ,A.RETRYCOUNT
,A.LASTRETRYDATE        ,A.BNKCHRGAMT            ,A.BNKVATAMT                 ,A.TRNCHRGAMT
,A.TRNVATAMT            ,A.BNKCHRGLOGID          ,A.TRNCHRGLOGID              ,A.DRACCTYPEFLAG
,A.CRACCTYPEFLAG        ,A.COUNTRYCODE2          ,A.VERIFIERREMARKS           ,A.VERIFIERFLAG
,A.VERIFIEDDATE         ,A.VERIFIEDBY            ,A.DRCOUNTRYCODE2            ,A.CANREQBY
,A.CANREQDATE           ,A.CANREQREMARKS         ,A.CANAPPBY                  ,A.CANAPPDATE
,A.CANAPPREMARKS        ,A.BENBRANCHNAME         ,A.CANSOLEAPPFLAG            ,A.DRBRANCHCODE
,A.BENCOUNTRYCODE       ,A.MAILREF               ,A.EXCHANGERATE              ,A.CUSTID
,A.CBERRORCODE          ,A.CBERRORDESC           ,A.SIERRORCODE               ,A.SIERRORDESC
,A.CHRGCURRENCYCODE     ,A.CHRGDENOMINATION      ,A.CURRTXNTYPE               ,A.ACCBAL
,A.CRETEID              ,A.CBSREFNO              ,A.PREVIOUSREFNO             ,A.EARMARKREFNO
,A.NARRATION            ,A.REMBNKINFOLINE1       ,A.REMBNKINFOLINE2           ,A.REMBNKINFOLINE3
,A.REMBNKINFOLINE4      ,A.REMBNKINFOLINE5       ,A.REMBNKINFOLINE6           ,A.NEGOTIATEDRATE
,A.RATETYPE             ,TO_DATE( SUBSTR(VALUEDATE,1,19),'YYYY-MM-DD HH24:MI:SS' )            ,A.STMTSEQUENCE              ,A.STMTENTRYID
,A.SEGMENT              ,A.REQUESTID             ,A.REVERSALINDICATOR         ,A.ENTITYID
,A.BUDID                ,A.CR21NARRATION         ,A.OWNNARRATION              ,A.SUBBUDID
,A.ADJUSTMENTAMT        ,A.CBSTATUSCODE          ,A.MERCHANTCATEGORYCODE      ,A.VACARDID
,A.TXNNARRATION         ,A.APICALLSTATUS         ,A.APICALLBAKDATE
,A.NARRFLAG             ,''ACCNO                 ,A.LOGINID                   ,A.LOGINID1
,A.LOGINID2             ,''GCIFNO                ,'P'
FROM VT_MIGRATION.STGVTPTTXN A;

DBMS_OUTPUT.PUT_LINE('MIGVTPTTXN '||SQL%ROWCOUNT||' rows inserted.');
--DBMS_OUTPUT.PUT_LINE('MIGVTPTTXN '||SQL%SAVE_EXCEPTIONS.COUNT||' rows inserted.');

--VTPTTXNEXP
INSERT INTO VAM_MIGVTPTTXNEXP
( TXNEXPID,                    	PAYTRNREFNO,					REQPAYREFNO
,PAYTRNINITDATE,				BULKUPLRECSEQ,					TXNDATE,                    	ACCID
,DRACCNO,                    	DRTXNAMOUNT,                    DRCURRENCYCODE,                 DRDENOMINATION
,DEALCODE,                    	DRACCNAME,                    	DRIBAN,                    		BENINITTYPE
,BENID,                    		CRACCNO,                    	CRTXNAMOUNT,                    CRCURRENCYCODE
,CRDENOMINATION,                BENNAME,                    	BENEMAIL,                    	BENMOBNO
,BENBICCODE,                    IDENTIFIER,                    	CLEARINGCODE,                   BENCOUNTRYID
,COUNTRYCODE3,                  BENBANKNAME,                    BENBANKADD,                    	ISSAVEBEN
,TXNAMOUNT,                    	CURRENCYCODE,                   DENOMINATION,                   PAYCODEID
,PAYMENTPURPCODE,				PAYDTLS,                    	CUSTTXNREFNO,                   CHRGCODE
,REQDEXCTNDT,                   ISSAVESTANDINSTR,				ADDNTLEMAIL,                    PAYADVTYPE
,PAYADVDTLS,                    UPLOADPAYADVFILE,				CHREFNO,                    	DRACCTYPE
,TXNTYPE,                    	VAT,							CHRGAMT,                    	CHRGTYPE
,INITCHN,                    	RECURID,						BATCHRUNID,                     RSSTATUSCODE
,RSSTATUSDESC,                  RSSEVERITY,						RSSOURCE,                    	RSBILLPAIDSTATUS
,CHNREFNO,                    	BENADV,							PAYDATE,                    	BENBANKCODE
,BENBANKLOC,                    PRDCODE,                    	BENADDR1,                    	BENADDR2
,BENADDR3,                    	BENADDR4,                    	STATUSCODE,                    	STATUSDESC
,REMARKS,                    	CHECKERREMARKS,					EXPSTATUSCODE,                  EXPSTATUSDESC
,STATUS,                    	ISDELETED,						CRTBY,                    		CRTDATE
,CRTIP,                    		APPBY,							APPDATE,                    	APPIP
,MDYBY,                    		MDYDATE,                    	MDYIP,                    		PAYMETHODID
,FAVOURITE,                    	THREADID,                    	PAYTYPE,                    	COREJOURNAL
,TRNPROCESS,                    TRNPROCESSTYPE,					BENADVSTATUS,                   BENADVDATE
,BATCHREFNO,                    DEBITTYPE,						RETRYCOUNT,                   	LASTRETRYDATE
,BNKCHRGAMT,                    BNKVATAMT,						TRNCHRGAMT,                    	TRNVATAMT
,BNKCHRGLOGID,                  TRNCHRGLOGID,					DRACCTYPEFLAG,                  CRACCTYPEFLAG
,COUNTRYCODE2,                  DRCOUNTRYCODE2,					BENBRANCHNAME,                  DRBRANCHCODE
,BENCOUNTRYCODE,				MAILREF,                    	EXCHANGERATE,                   CUSTID
,CBERRORCODE,                   CBERRORDESC,                    SIERRORCODE,                    SIERRORDESC
,CHRGCURRENCYCODE,				CHRGDENOMINATION,				CURRTXNTYPE,                    ACCBAL
,CRETEID,						CBSREFNO,                    	PREVIOUSREFNO,                  EARMARKREFNO
,NARRATION,                    	REMBNKINFOLINE1,                REMBNKINFOLINE2,                REMBNKINFOLINE3
,REMBNKINFOLINE4,				REMBNKINFOLINE5,                REMBNKINFOLINE6,                NEGOTIATEDRATE
,RATETYPE,                    	VALUEDATE,                    	STMTSEQUENCE,                   STMTENTRYID
,SEGMENT,                    	REQUESTID,                    	REVERSALINDICATOR,				POSTEDFLAG
,REQUESTDATETIME,				SERVICENAME,                    SERVICECODE,                    CHANNELCODE
,CUSTOMERCODE,					LANGCODE,                    	EVENTTYPE,                    	ENTITYID
,BUDID,							LOGINID,                    	LOGINID1,                    	LOGINID2
,ACCNO,							IBAN,                    		VAIBAN,                    		GCIFNO
,MIGSTATUSCODE
)
SELECT
A.TXNEXPID,                    	A.PAYTRNREFNO,					A.REQPAYREFNO
, TO_DATE( SUBSTR(A.PAYTRNINITDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),				A.BULKUPLRECSEQ,					  TO_DATE( SUBSTR(A.TXNDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),                    	A.ACCID
,A.DRACCNO,                    	A.DRTXNAMOUNT,                   A.DRCURRENCYCODE,                 A.DRDENOMINATION
,A.DEALCODE,                    	A.DRACCNAME,                    	A.DRIBAN,                    		A.BENINITTYPE
,A.BENID,                    		A.CRACCNO,                    	A.CRTXNAMOUNT,                    A.CRCURRENCYCODE
,A.CRDENOMINATION,                A.BENNAME,                    	A.BENEMAIL,                    	A.BENMOBNO
,A.BENBICCODE,                    A.IDENTIFIER,                    	A.CLEARINGCODE,                   A.BENCOUNTRYID
,A.COUNTRYCODE3,                  A.BENBANKNAME,                    A.BENBANKADD,                    	A.ISSAVEBEN
,A.TXNAMOUNT,                    	A.CURRENCYCODE,                   A.DENOMINATION,                   A.PAYCODEID
,A.PAYMENTPURPCODE,				A.PAYDTLS,                    	A.CUSTTXNREFNO,                   A.CHRGCODE
,TO_DATE( SUBSTR(REQDEXCTNDT, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),                   A.ISSAVESTANDINSTR,				A.ADDNTLEMAIL,                    A.PAYADVTYPE
,A.PAYADVDTLS,                    A.UPLOADPAYADVFILE,				A.CHREFNO,                    	A.DRACCTYPE
,A.TXNTYPE,                    	A.VAT,							A.CHRGAMT,                    	A.CHRGTYPE
,A.INITCHN,                    	A.RECURID,						A.BATCHRUNID,                     A.RSSTATUSCODE
,A.RSSTATUSDESC,                 A.RSSEVERITY,						A.RSSOURCE,                    A.RSBILLPAIDSTATUS
,A.CHNREFNO,                    	A.BENADV,							 TO_DATE( SUBSTR(A.PAYDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),                    	A.BENBANKCODE
,A.BENBANKLOC,                    A.PRDCODE,                    	A.BENADDR1,                    	A.BENADDR2
,A.BENADDR3,                    	A.BENADDR4,                    	A.STATUSCODE,                    	A.STATUSDESC
,A.REMARKS,                    	A.CHECKERREMARKS,					A.EXPSTATUSCODE,                 A.EXPSTATUSDESC
,A.STATUS,                    	A.ISDELETED,						A.CRTBY,                    		 TO_DATE( SUBSTR(A.CRTDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )
,A.CRTIP,                    		A.APPBY,							 TO_DATE( SUBSTR(A.APPDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),                    	A.APPIP
,A.MDYBY,                    		 TO_DATE( SUBSTR(A.MDYDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),                    	A.MDYIP,                    		A.PAYMETHODID
,A.FAVOURITE,                    	A.THREADID,                    A.PAYTYPE,                    	A.COREJOURNAL
,A.TRNPROCESS,                    A.TRNPROCESSTYPE,					A.BENADVSTATUS,                     TO_DATE( SUBSTR(A.BENADVDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )
,A.BATCHREFNO,                    A.DEBITTYPE,						A.RETRYCOUNT,                   	 TO_DATE( SUBSTR(A.LASTRETRYDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )
,A.BNKCHRGAMT,                    A.BNKVATAMT,						A.TRNCHRGAMT,                    	A.TRNVATAMT
,A.BNKCHRGLOGID,                  A.TRNCHRGLOGID,					A.DRACCTYPEFLAG,                  A.CRACCTYPEFLAG
,A.COUNTRYCODE2,                  A.DRCOUNTRYCODE2,					A.BENBRANCHNAME,                  A.DRBRANCHCODE
,A.BENCOUNTRYCODE,				A.MAILREF,                    	A.EXCHANGERATE,                  A.CUSTID
,A.CBERRORCODE,                   A.CBERRORDESC,                    A.SIERRORCODE,                     A.SIERRORDESC
,A.CHRGCURRENCYCODE,				A.CHRGDENOMINATION,				A.CURRTXNTYPE,                    A.ACCBAL
,A.CRETEID,						A.CBSREFNO,                    	A.PREVIOUSREFNO,                  A.EARMARKREFNO
,A.NARRATION,                    	A.REMBNKINFOLINE1,                A.REMBNKINFOLINE2,                A.REMBNKINFOLINE3
,A.REMBNKINFOLINE4,				A.REMBNKINFOLINE5,                A.REMBNKINFOLINE6,                A.NEGOTIATEDRATE
,A.RATETYPE,                    	 TO_DATE( SUBSTR(A.VALUEDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),                    	A.STMTSEQUENCE,                  A.STMTENTRYID
,A.SEGMENT,                    	A.REQUESTID,                    	A.REVERSALINDICATOR,				A.POSTEDFLAG
,A.REQUESTDATETIME,				A.SERVICENAME,                    SERVICECODE,                    A.CHANNELCODE
,A.CUSTOMERCODE,					A.LANGCODE,                    A.EVENTTYPE,                    	A.ENTITYID
,A.BUDID,							A.LOGINID,                    	A.LOGINID1,                    A.LOGINID2
,A.ACCNO,							A.IBAN,                    		A.VAIBAN,                    		A.GCIFNO
,'P'
FROM VT_MIGRATION.STGVTPTTXNEXP A;

DBMS_OUTPUT.PUT_LINE('MIGVTPTTXNEXP '||SQL%ROWCOUNT||' rows inserted.');
--DBMS_OUTPUT.PUT_LINE('MIGVTPTTXNEXP '||SQL%SAVE_EXCEPTIONS.COUNT||' rows inserted.');

--STGVTFTLEDPOSTING
INSERT INTO VAM_MIGVTFTLEDPOSTING
(
LEDGERNO,                  LVID,                    	TRNID
,TEMPID,                   DRCRFLAG,                    LEDGERSEQ,					TRNCODE
,FINCODE,                  VALUEDATE,                   EFFDATE,                    ACCNO
,AMOUNT,                   CURRENCYCODE,                CURRENCYNAME,				NARRATTION
,REFNO,                    POSTTYPE,                    STATUS,                    	CRTBY
,CRTDT,                    CRTIP,                    	MDYBY,                    	MDYDATE
,MDYIP,                    STOREID,                    	SUB_TRNCODE,				INDICATOR
,JVTYPE,                   PAYADVBATCHID,               NESSIEBATCHRUNID,			NESSIEFLAG
,ADDITIONALINFO1,          ADDITIONALINFO2,				ADDITIONALINFO3,			ADDITIONALINFO4
,ADDITIONALINFO5,          PAYMENTMODE,					POSTREFNO,					INVREFNO
,DENOMINATION,             VALUEDATENEW,				ORDERING_CUST_NAME,			ORDERING_CUST_AC_NO
,ORDERING_CUST_IBAN,	   ORDERING_CUST_COUNTRY_CODE,	UBSTRNREFNO,				CHNREFNO
,RUNBAL,                   PAYMETHODID,					UTI_REF,                    COREJOURNAL
,CUSTREFNO,                EXCHANGERATE,				LOGINID,                    LOGINID2
,MIGSTATUSCODE
)
SELECT
LEDGERNO,                  LVID,                    	TRNID
,TEMPID,                   DRCRFLAG,                    LEDGERSEQ,					TRNCODE
,FINCODE,                  VALUEDATE,                    TO_DATE( SUBSTR(EFFDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),                    ACCNO
,AMOUNT,                   CURRENCYCODE,                CURRENCYNAME,				NARRATTION
,REFNO,                    POSTTYPE,                    STATUS,                    	CRTBY
,TO_DATE( SUBSTR(CRTDT, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),                    CRTIP,                    	MDYBY,                    	 TO_DATE( SUBSTR(MDYDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )
,MDYIP,                    STOREID,                    	SUB_TRNCODE,				INDICATOR
,JVTYPE,                   PAYADVBATCHID,               NESSIEBATCHRUNID,			NESSIEFLAG
,ADDITIONALINFO1,          ADDITIONALINFO2,				ADDITIONALINFO3,			ADDITIONALINFO4
,ADDITIONALINFO5,          PAYMENTMODE,					POSTREFNO,					INVREFNO
,DENOMINATION,              TO_DATE( SUBSTR(VALUEDATENEW, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),				ORDERING_CUST_NAME,			ORDERING_CUST_AC_NO
,ORDERING_CUST_IBAN,	   ORDERING_CUST_COUNTRY_CODE,	UBSTRNREFNO,				CHNREFNO
,RUNBAL,                   PAYMETHODID,					UTI_REF,                    COREJOURNAL
,CUSTREFNO,                EXCHANGERATE,				LOGINID,                    LOGINID2
,'P'
FROM VT_MIGRATION.STGVTFTLEDPOSTING;

DBMS_OUTPUT.PUT_LINE('MIGVTFTLEDPOSTING '||SQL%ROWCOUNT||' rows inserted.');
--DBMS_OUTPUT.PUT_LINE('MIGVTFTLEDPOSTING '||SQL%SAVE_EXCEPTIONS.COUNT||' rows inserted.');

--STGVTSTNARRATION
INSERT INTO VAM_MIGVTSTNARRATION
(REQUESTID,				CHNREFNO,			CBSREFNO
,NARRATION,				VAIBAN,				ACCNO,				BRANCH
,STMTSEQUENCE,			STMTENTRYID,		SEGMENT,			STATUSCODE
,CRTBY,					CRTDATE,			MDYBY,				MDYDATE
,CRTIP,					MDYIP,				LOGINID,			LOGINID2
,MIGSTATUSCODE
)
SELECT
REQUESTID,				CHNREFNO,			CBSREFNO
,NARRATION,				VAIBAN,				ACCNO,				BRANCH
,STMTSEQUENCE,			STMTENTRYID,		SEGMENT,			STATUSCODE
,CRTBY,					 TO_DATE( SUBSTR(CRTDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),			MDYBY,				 TO_DATE( SUBSTR(MDYDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )
,'MIGVAM',					MDYIP,				LOGINID,			LOGINID2
,'P'
FROM VT_MIGRATION.STGVTSTNARRATION;

DBMS_OUTPUT.PUT_LINE('MIGVTSTNARRATION '||SQL%ROWCOUNT||' rows inserted.');
--DBMS_OUTPUT.PUT_LINE('MIGVTSTNARRATION '||SQL%SAVE_EXCEPTIONS.COUNT||' rows inserted.');

--STGVTPMNARRATION
INSERT INTO VAM_MIGVTPMNARRATION
(
NARRATIONID,		CUSTID,             ACCID,				VAACCID,              VAIBANID
,SVCTYPE,			MKRREMARKS,			APRREMARKS,			STATUS
,NARRATION,			CRTBY,              CRTDATE,			CRTIP
,APPBY,				APPDATE,			APPIP,              MDYBY
,MDYDATE,			MDYIP,              LOGINID,			LOGINID1
,LOGINID2,          ACCNO,              IBAN,              	VAIBAN
,MIGSTATUSCODE,     GCIFNO
)
SELECT
NARRATIONID,		STG.CUSTID,             STG.ACCID,				STG.VAACCID,              STG.VAIBANID
,SVCTYPE,			MKRREMARKS,			APRREMARKS,			STG.STATUS
,NARRATION,			STG.CRTBY,               TO_DATE( SUBSTR(STG.CRTDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),			STG.CRTIP
,STG.APPBY,				 TO_DATE( SUBSTR(STG.APPDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),			STG.APPIP,              STG.MDYBY
, TO_DATE( SUBSTR(STG.MDYDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),			STG.MDYIP,              STG.LOGINID,			STG.LOGINID1
,STG.LOGINID2,          E.ACCNO,              E.IBAN,              	F.VAIBAN
,'P',               CU.GCIFNO
FROM VT_MIGRATION.STGVTPMNARRATION STG
INNER JOIN VT_MIGRATION.STGVTCMCUST CU ON STG.CUSTID=CU.CUSTID
INNER JOIN VT_MIGRATION.STGVTCMCUSTACC E ON STG.ACCID=E.ACCID
LEFT JOIN VT_MIGRATION.STGVTSMVACCOUNTS F ON STG.VAIBANID=F.VAIBANID;

DBMS_OUTPUT.PUT_LINE('MIGVTPMNARRATION '||SQL%ROWCOUNT||' rows inserted.');
--DBMS_OUTPUT.PUT_LINE('MIGVTPMNARRATION '||SQL%SAVE_EXCEPTIONS.COUNT||' rows inserted.');


--STGVTSMVAEARMARK
INSERT INTO VAM_MIGVTSMVAEARMARK
(EARMARKREFID,			EARMARKREFNO,		CHNREFNO,			ACCNO
,AMOUNT,              	CHNID,              CHNCODE,			EARMARKTYPE
,STATUSCODE,			STATUSDESC,			CRTBY,              CRTDATE
,CRTIP,					APPBY,              APPDATE,			APPIP
,PAYERID,				OVERRIDEBUDGETFLAG,	REQUESTID,			RELEASEAMOUNT
,READSTATUS,			VATYPE,				BUDID,              ENTITYID
,BUDREFID,              SUBBUDID,			ADDITIONALINFO,		VACARDID
,MERCHANTCATEGORYCODE,	TXNNARRATION,		LOGINID,			LOGINID1
,MIGSTATUSCODE
)
SELECT
EARMARKREFID,			EARMARKREFNO,		CHNREFNO,			ACCNO
,AMOUNT,              	CHNID,              CHNCODE,			EARMARKTYPE
,STATUSCODE,			STATUSDESC,			CRTBY,               TO_DATE( SUBSTR(CRTDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )
,CRTIP,					APPBY,               TO_DATE( SUBSTR(APPDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),			APPIP
,PAYERID,				OVERRIDEBUDGETFLAG,	REQUESTID,			RELEASEAMOUNT
,READSTATUS,			VATYPE,				BUDID,              ENTITYID
,BUDREFID,              SUBBUDID,			ADDITIONALINFO,		VACARDID
,MERCHANTCATEGORYCODE,	TXNNARRATION,		LOGINID,			LOGINID1
,'P'
FROM VT_MIGRATION.STGVTSMVAEARMARK;

DBMS_OUTPUT.PUT_LINE('MIGVTSMVAEARMARK '||SQL%ROWCOUNT||' rows inserted.');
--DBMS_OUTPUT.PUT_LINE('MIGVTSMVAEARMARK '||SQL%SAVE_EXCEPTIONS.COUNT||' rows inserted.');

--STGVTSMVAEARMARKEXP
INSERT INTO VAM_MIGVTSMVAEARMARKEXP
(
EARMARKEXPID,              	EARMARKREFNO,           CHNREFNO
,ACCNO,              		AMOUNT,              	CHNID,              	CHNCODE
,EARMARKTYPE,              	STATUSCODE,             STATUSDESC,             MAKERREMARKS
,CHECKERREMARKS,            EXPSTATUSCODE,			EXPSTATUSDESC,			PAYERID
,OVERRIDEBUDGETFLAG,		REQUESTID,              RELEASEAMOUNT,			CRTBY
,CRTDATE,              		CRTIP,              	APPBY,					APPDATE
,APPIP,              		MDYBY,              	MDYDATE,				MDYIP
,ENTITYID,              	BUDID,              	VATYPE,					BUDREFID
,SUBBUDID,              	VACARDID,              	ADDITIONALINFO,			MERCHANTCATEGORYCODE
,TXNNARRATION,              LOGINID,              	LOGINID1,				LOGINID2
,MIGSTATUSCODE
)
SELECT
EARMARKEXPID,              	EARMARKREFNO,           CHNREFNO
,ACCNO,              		AMOUNT,              	CHNID,              	CHNCODE
,EARMARKTYPE,              	STATUSCODE,             STATUSDESC,             MAKERREMARKS
,CHECKERREMARKS,            EXPSTATUSCODE,			EXPSTATUSDESC,			PAYERID
,OVERRIDEBUDGETFLAG,		REQUESTID,              RELEASEAMOUNT,			CRTBY
, TO_DATE( SUBSTR(CRTDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),              		CRTIP,              	APPBY,					 TO_DATE( SUBSTR(APPDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )
,APPIP,              		MDYBY,              	 TO_DATE( SUBSTR(MDYDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),				MDYIP
,ENTITYID,              	BUDID,              	VATYPE,					BUDREFID
,SUBBUDID,              	VACARDID,              	ADDITIONALINFO,			MERCHANTCATEGORYCODE
,TXNNARRATION,              LOGINID,              	LOGINID1,				LOGINID2
,'P'
FROM VT_MIGRATION.STGVTSMVAEARMARKEXP;-- WHERE STATUSCODE=30;

DBMS_OUTPUT.PUT_LINE('MIGVTSMVAEARMARKEXP '||SQL%ROWCOUNT||' rows inserted.');
--DBMS_OUTPUT.PUT_LINE('MIGVTSMVAEARMARKEXP '||SQL%SAVE_EXCEPTIONS.COUNT||' rows inserted.');


INSERT INTO VAM_MIGVTPTTXNFUTURE
(TXNFUTUREID,		REQMSG,				REQID
,STATUS,			STATUSCODE,			CRTBY
,CRTDATE,			CRTIP,              LOGINID
,MIGSTATUSCODE
)
SELECT
TXNFUTUREID,		REQMSG,				REQID
,STATUS,			STATUSCODE,			CRTBY
, TO_DATE( SUBSTR(CRTDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),			'MIGVAM',              LOGINID
,'P'
FROM VT_MIGRATION.STGVTPTTXNFUTURE;
DBMS_OUTPUT.PUT_LINE('MIGVTPTTXNFUTURE '||SQL%ROWCOUNT||' rows inserted.');
--DBMS_OUTPUT.PUT_LINE('MIGVTPTTXNFUTURE '||SQL%SAVE_EXCEPTIONS.COUNT||' rows inserted.');

--INSERT INTO VAM_MIGVTCMTEMPMGMNT
--(TEMPMGMNTID,		TEMPLATETYPE,		TEMPLATENAME,		CUSTID,			RCMSPRDID
--,EVENTID,			SUBJECT,			BODY,				ALERTTYPE
--,REMARKS,			CHECKERREMARKS,		STATUS,				ISDELETED
--,CRTBY,				CRTDATE,			CRTIP,				APPBY
--,APPDATE,			MDYBY,				MDYDATE,			MDYIP
--,ENTITYTYPE,		ECOLSVC,			EVENTTYPE,			TEMPLANG
--,GCIFNO)
--SELECT
-- TEMPMGMNTID,		TEMPLATETYPE,		TEMPLATENAME,		A.CUSTID,			RCMSPRDID
--,CASE WHEN EVENTID=17 THEN 1398
--WHEN EVENTID=18 THEN 1399
--WHEN EVENTID=19 THEN 1400
--WHEN EVENTID=20 THEN 1401
--WHEN EVENTID=21 THEN 1402
--WHEN EVENTID=22 THEN 1403
--WHEN EVENTID=23 THEN 1404
--WHEN EVENTID=24 THEN 1405
--WHEN EVENTID=25 THEN 1406
--WHEN EVENTID=27 THEN 1408
--WHEN EVENTID=28 THEN 1409 ELSE EVENTID END,			SUBJECT,			BODY,				ALERTTYPE
--,A.REMARKS,			A.CHECKERREMARKS,		A.STATUS,				A.ISDELETED
--,A.CRTBY,				A.CRTDATE,			A.CRTIP,				A.APPBY
--,A.APPDATE,			A.MDYBY,				A.MDYDATE,			A.MDYIP
--,ENTITYTYPE,		ECOLSVC,			EVENTTYPE,			TEMPLANG
--,B.GCIFNO
--FROM VT_MIGRATION.STGVTCMTEMPMGMNT A
--INNER JOIN VT_MIGRATION.STGVTCMCUST B ON A.CUSTID=B.CUSTID
--WHERE TEMPLATETYPE='C' AND ECOLSVC IN ('POBO','VA','VC');


--    INSERT INTO VAM_MIGVTCMALERTSUBSCR
--    (
--    ALERTSUBSCRID,         TEMPMGMNTID,         CUSTID
--    ,ACCID,         THRESHOLDVAL,         RECIPIUSERTYPE,         MAILTOLIST
--    ,MAILCCLIST,         MAILBCCLIST,         MAILTOCUST,         MAILCCCUST
--    ,MAILBCCCUST,         REMARKS,         CHECKERREMARKS,         STATUS
--    ,ISDELETED,         CRTBY,         CRTDATE,         CRTIP
--    ,APPBY,         APPDATE,         MDYBY,         MDYDATE
--    ,MDYIP,         ENTITYTYPE,         ALERTTYPE,         ECOLSVC
--    ,EVENTTYPE,         POBOENTID,         RCMSPRDID,         SMSCONTACTNOS
--    ,TEMPLATETYPE,         VACUSTIDNT,         PREDEFINEDLIST,         ATTACHREQ)
--    SELECT
--    ALERTSUBSCRID,         TEMPMGMNTID,         CUSTID
--    ,ACCID,         THRESHOLDVAL,         RECIPIUSERTYPE,         MAILTOLIST
--    ,MAILCCLIST,         MAILBCCLIST,         MAILTOCUST,         MAILCCCUST
--    ,MAILBCCCUST,         REMARKS,         CHECKERREMARKS,         STATUS
--    ,ISDELETED,         CRTBY,         CRTDATE,         CRTIP
--    ,APPBY,         APPDATE,         MDYBY,         MDYDATE
--    ,MDYIP,         ENTITYTYPE,         ALERTTYPE,         ECOLSVC
--    ,EVENTTYPE,         POBOENTID,         RCMSPRDID,         SMSCONTACTNOS
--    ,TEMPLATETYPE,         VACUSTIDNT,         PREDEFINEDLIST,         ATTACHREQ
--    FROM VT_MIGRATION.STGVTCMALERTSUBSCR WHERE TEMPLATETYPE='C';


    INSERT INTO VAM_MIGVTCMBUDGETLOG
    (BUDLOGID,BUDID,ENTITYID_IBAN,PARENTCODE,CURRENCYCODE,DENOMINATION,FREQUENCY,STARTDATE,ENDDATE,BUDTYPE,BUDLIMIT,REMARKS,CHECKERREMARKS,STATUS,
    ISDELETED,CRTBY,CRTDATE,CRTIP,APPBY,APPDATE,APPIP,MDYBY,MDYDATE,MDYIP,CUSTID,RECURCYCLE,RECURSTARTDATE,RECURENDDATE,NOOFOCCURRENCE,
    CARRYFORWARDFLAG,ACCID,ENTITYNAME,BUDMOD,BUDREFNO,BUDGETDATAREFNO,TOTALAMT,AVAILAMT,UTILAMT,CARRYAMT,ADJUSTMENTAMT,EARMARKAMT,MIGSTATUSCODE)

    SELECT
    BUDLOGID,BUDID,ENTITYID_IBAN,PARENTCODE,CURRENCYCODE,DENOMINATION,FREQUENCY,TO_DATE( SUBSTR(STARTDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),
     TO_DATE( SUBSTR(ENDDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),BUDTYPE,BUDLIMIT,REMARKS,CHECKERREMARKS,STATUS,
    ISDELETED,CRTBY, TO_DATE( SUBSTR(CRTDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),'MIGVAM',APPBY, TO_DATE( SUBSTR(APPDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),
    APPIP,MDYBY, TO_DATE( SUBSTR(MDYDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),MDYIP,CUSTID,RECURCYCLE,
    TO_DATE( SUBSTR(RECURSTARTDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ), TO_DATE( SUBSTR(RECURENDDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),NOOFOCCURRENCE,
    CARRYFORWARDFLAG,ACCID,ENTITYNAME,BUDMOD,BUDREFNO,BUDGETDATAREFNO,TOTALAMT,AVAILAMT,UTILAMT,CARRYAMT,ADJUSTMENTAMT,EARMARKAMT,'P'
    FROM VT_MIGRATION.STGVTCMBUDGETLOG;

 COMMIT;
    EXCEPTION
	WHEN NO_DATA_FOUND THEN
	BEGIN
		ROLLBACK;
        OUT_STATUSCODE :='83';
		OUT_STATUSDESC := SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
		DBMS_OUTPUT.PUT_LINE('NO Data found');
        DBMS_OUTPUT.PUT_LINE('PROCEDURE COMPLETED AT '||TO_CHAR(SYSDATE,'DD-MM-YY HH24:MI:SS'));

		RETURN;
	END;
	WHEN OTHERS THEN
	BEGIN
		ROLLBACK;
		OUT_STATUSCODE :='84';
		OUT_STATUSDESC := SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
       ROLLBACK; 
INSERT INTO VT_COB.VTSMERRLOG(ERRMSG,ERRPROC,ERRDATETIME)
SELECT OUT_STATUSDESC,'PRC_MIG_VAM_DATAMOVE_VAM',SYSTIMESTAMP FROM dual;

		RETURN;
                DBMS_OUTPUT.PUT_LINE('PROCEDURE COMPLETED AT '||TO_CHAR(SYSDATE,'DD-MM-YY HH24:MI:SS'));

	END;

END PRC_MIG_VAM_DATAMOVE_VAM;


/


-------------2 VT_VAM -------------------


create or replace PROCEDURE "PRC_MIG_VAM_EXEC_VAM" ( IN_BATCHRUNID NUMBER,
OUT_STATUSCODE OUT VARCHAR2 ,
OUT_STATUSDESC OUT VARCHAR2)
AS
v_STARTTIME TIMESTAMP(3);
v_ENDTIME TIMESTAMP(3);
v_TOTCNT NUMBER(10):=0;
v_SUCCNT NUMBER(10):=0;
v_FAILCNT NUMBER(10):=0;
v_ERRMSG VARCHAR2(4000);
v_ERRCODE VARCHAR2(100);
v_ERRPROC VARCHAR2(200);
v_SESSIONID NUMBER(19);

BEGIN
DBMS_OUTPUT.PUT_LINE('PROCEDURE STARTED AT '||TO_CHAR(SYSDATE,'DD-MM-YY HH24:MI:SS'));
/*
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTCMVAENTITY' 		FROM VAM_MIGVTCMVAENTITY		GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTSMVACCOUNTS'     FROM VAM_MIGVTSMVACCOUNTS		GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTSMVACHNMAP' 		FROM VAM_MIGVTSMVACHNMAP      	GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTSTPAYERUPL' 		FROM VAM_MIGVTSTPAYERUPL      	GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTCMBUDSETUP' 		FROM VAM_MIGVTCMBUDSETUP      	GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTSMVAACCTEMPMAP' 	FROM VAM_MIGVTSMVAACCTEMPMAP  	GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTSMVACARDS' 		FROM VAM_MIGVTSMVACARDS       	GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTSTVACARDSUPL'	FROM VAM_MIGVTSTVACARDSUPL    	GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTPTTXN'			FROM VAM_MIGVTPTTXN           	GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTPTTXNEXP'		FROM VAM_MIGVTPTTXNEXP        	GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTFTLEDPOSTING'	FROM VAM_MIGVTFTLEDPOSTING    	GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTPMNARRATION'		FROM VAM_MIGVTPMNARRATION		GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTSMVAEARMARK'		FROM VAM_MIGVTSMVAEARMARK		GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTSMVAEARMARKEXP'	FROM VAM_MIGVTSMVAEARMARKEXP	GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTPTTXNFUTURE'		FROM VAM_MIGVTPTTXNFUTURE		GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTSTBATCHPRCSTRN'	FROM VAM_MIGVTSTBATCHPRCSTRN	GROUP BY MIGSTATUSCODE,MIGSTATUSDESC ;

SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTCMVAENTITY' 		FROM VAM_MIGVTCMVAENTITY		GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTSMVACCOUNTS'     FROM VAM_MIGVTSMVACCOUNTS		GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTSMVACHNMAP' 		FROM VAM_MIGVTSMVACHNMAP      	GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTSTPAYERUPL' 		FROM VAM_MIGVTSTPAYERUPL      	GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTCMBUDSETUP' 		FROM VAM_MIGVTCMBUDSETUP      	GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTSMVAACCTEMPMAP' 	FROM VAM_MIGVTSMVAACCTEMPMAP  	GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTSMVACARDS' 		FROM VAM_MIGVTSMVACARDS       	GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTSTVACARDSUPL'	FROM VAM_MIGVTSTVACARDSUPL    	GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTPTTXN'			FROM VAM_MIGVTPTTXN           	GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTPTTXNEXP'		FROM VAM_MIGVTPTTXNEXP        	GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTFTLEDPOSTING'	FROM VAM_MIGVTFTLEDPOSTING    	GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTPMNARRATION'		FROM VAM_MIGVTPMNARRATION		GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTSMVAEARMARK'		FROM VAM_MIGVTSMVAEARMARK		GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTSMVAEARMARKEXP'	FROM VAM_MIGVTSMVAEARMARKEXP	GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
--SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTPTTXNFUTURE'		FROM VAM_MIGVTPTTXNFUTURE		GROUP BY MIGSTATUSCODE,MIGSTATUSDESC UNION ALL
SELECT COUNT(1) ,MIGSTATUSCODE,MIGSTATUSDESC,'MIGVTSTBATCHPRCSTRN'	FROM VAM_MIGVTSTBATCHPRCSTRN	GROUP BY MIGSTATUSCODE,MIGSTATUSDESC ;


UPDATE VAM_MIGVTCMVAENTITY		  SET CRTBY_LOGINID='CRTBY', APPBY_LOGINID='APPBY',MDYBY_LOGINID='MDYBY';
UPDATE VAM_MIGVTSMVACCOUNTS	      SET CRTBY_LOGINID='CRTBY', APPBY_LOGINID='APPBY',MDYBY_LOGINID='MDYBY';
UPDATE VAM_MIGVTSMVACHNMAP        SET CRTBY_LOGINID='CRTBY', APPBY_LOGINID='APPBY';
UPDATE VAM_MIGVTSTPAYERUPL        SET CRTBY_LOGINID='CRTBY', APPBY_LOGINID='APPBY',MDYBY_LOGINID='MDYBY';
UPDATE VAM_MIGVTCMBUDSETUP        SET CRTBY_LOGINID='CRTBY', APPBY_LOGINID='APPBY',MDYBY_LOGINID='MDYBY';
UPDATE VAM_MIGVTSMVAACCTEMPMAP    SET CRTBY_LOGINID='CRTBY', APPBY_LOGINID='APPBY';
UPDATE VAM_MIGVTSMVACARDS         SET CRTBY_LOGINID='CRTBY', APPBY_LOGINID='APPBY',MDYBY_LOGINID='MDYBY';
UPDATE VAM_MIGVTSTVACARDSUPL      SET CRTBY_LOGINID='CRTBY', APPBY_LOGINID='APPBY',MDYBY_LOGINID='MDYBY';
UPDATE VAM_MIGVTPTTXN             SET CRTBY_LOGINID='CRTBY', APPBY_LOGINID='APPBY',MDYBY_LOGINID='MDYBY';
UPDATE VAM_MIGVTPTTXNEXP          SET CRTBY_LOGINID='CRTBY', APPBY_LOGINID='APPBY',MDYBY_LOGINID='MDYBY';
UPDATE VAM_MIGVTFTLEDPOSTING      SET CRTBY_LOGINID='CRTBY', APPBY_LOGINID='APPBY',MDYBY_LOGINID='MDYBY';
UPDATE VAM_MIGVTPMNARRATION	      SET CRTBY_LOGINID='CRTBY', APPBY_LOGINID='APPBY',MDYBY_LOGINID='MDYBY';
UPDATE VAM_MIGVTSMVAEARMARK	      SET CRTBY_LOGINID='CRTBY', APPBY_LOGINID='APPBY',MDYBY_LOGINID='MDYBY';
UPDATE VAM_MIGVTSMVAEARMARKEXP    SET CRTBY_LOGINID='CRTBY', APPBY_LOGINID='APPBY',MDYBY_LOGINID='MDYBY';
UPDATE VAM_MIGVTSTBATCHPRCSTRN    SET CRTBY_LOGINID='CRTBY', APPBY_LOGINID='APPBY',MDYBY_LOGINID='MDYBY';



SELECT * FROM   VT_VAM.VTCMVAENTITY		WHERE CRTIP='MIGVAM';
SELECT * FROM   VT_VAM.VTSMVACCOUNTS 	WHERE CRTIP='MIGVAM';
SELECT * FROM   VT_VAM.VTCMVAENTCHNMAP	WHERE CRTIP='MIGVAM';
SELECT * FROM   VT_VAM.VTSTPAYERUPL     WHERE REQIP='MIGVAM';
SELECT * FROM   VT_VAM.VTCMBUDSETUP     WHERE CRTIP='MIGVAM';
SELECT * FROM   VT_VAM.VTSMVACARDS      WHERE CRTIP='MIGVAM';
SELECT * FROM   VT_VAM.VTSTVACARDSUPL   WHERE CRTIP='MIGVAM';
SELECT * FROM   VT_VAM.VTPTTXN          WHERE CRTIP='MIGVAM';
SELECT * FROM   VT_VAM.VTPTTXNEXP       WHERE CRTIP='MIGVAM';
SELECT * FROM   VT_VAM.VTFTLEDPOSTING   WHERE CRTIP='MIGVAM';
SELECT * FROM   VT_VAM.VTPMNARRATION	WHERE CRTIP='MIGVAM';
SELECT * FROM   VT_VAM.VTSMVAEARMARK	WHERE CRTIP='MIGVAM';
SELECT * FROM   VT_VAM.VTSMVAEARMARKEXP WHERE CRTIP='MIGVAM';
SELECT * FROM   VT_VAM.VTSTBATCHPRCSTRN WHERE CRTIP='MIGVAM';
*/



UPDATE VAM_MIGVTCMVAENTITY SET MIGSTATUSCODE='F',MIGSTATUSDESC='VA ENTITY IS ALREADY AVAILABLE' WHERE VAACCID IN (SELECT VAENTITYID FROM VT_VAM.VTCMVAENTITY);

UPDATE VAM_MIGVTCMVAENTITY SET MIGSTATUSCODE='F',MIGSTATUSDESC='VA CUSTIDNT IS ALREADY AVAILABLE' WHERE VACUSTIDNT IN (SELECT VACUSTIDNT FROM VT_VAM.VTCMVAENTITY);

UPDATE VAM_MIGVTSMVACCOUNTS SET MIGSTATUSCODE='F',MIGSTATUSDESC='VA ACCID IS ALREADY AVAILABLE' WHERE VAIBANID IN (SELECT VIRTUALACCID FROM VT_VAM.VTSMVACCOUNTS);

UPDATE VAM_MIGVTSMVACHNMAP SET MIGSTATUSCODE='F',MIGSTATUSDESC='VA CHANNEL ID IS ALREADY AVAILABLE' WHERE VACHNMAPID IN (SELECT VACHNMAPID FROM VT_VAM.VTSMVACHNMAP);

UPDATE VAM_MIGVTSMVACHNMAP SET MIGSTATUSCODE='F',MIGSTATUSDESC='VA READSTATUSCODE ID IS ALREADY AVAILABLE' WHERE READEXEID IN (SELECT READEXEID FROM VAM_MIGVTSMVACHNMAP);

UPDATE VAM_MIGVTSTPAYERUPL SET MIGSTATUSCODE='F',MIGSTATUSDESC='BATCHRUNID IS ALREADY AVAILABLE' WHERE BATCHRUNID IN (SELECT BATCHRUNID FROM VT_VAM.VTSTPAYERUPL);

UPDATE VAM_MIGVTCMBUDSETUP SET MIGSTATUSCODE='F',MIGSTATUSDESC='BUDGET SETUP IS ALREADY AVAILABLE' WHERE BUDREFID IN (SELECT BUDREFID FROM VT_VAM.VTCMBUDSETUP);

UPDATE VAM_MIGVTCMBUDSETUP SET MIGSTATUSCODE='F',MIGSTATUSDESC='BUDGET REFNO IS ALREADY AVAILABLE' WHERE BUDREFNO IN (SELECT BUDREFNO FROM VT_VAM.VTCMBUDSETUP);

UPDATE VAM_MIGVTCMBUDSETUP SET MIGSTATUSCODE='F',MIGSTATUSDESC='BUDGET BUDGETDATAREFNO IS ALREADY AVAILABLE' WHERE BUDGETDATAREFNO IN (SELECT BUDGETDATAREFNO FROM VT_VAM.VTCMBUDSETUP);

UPDATE VAM_MIGVTCMBUDSETUP SET MIGSTATUSCODE='F',MIGSTATUSDESC='BUDGET BUDID IS ALREADY AVAILABLE' WHERE BUDID IN (SELECT BUDID FROM VT_VAM.VTCMBUDSETUP);

UPDATE VAM_MIGVTCMBUDSETUP SET MIGSTATUSCODE='F',MIGSTATUSDESC='BUDGET SUBBUDID IS ALREADY AVAILABLE' WHERE SUBBUDID IN (SELECT SUBBUDID FROM VT_VAM.VTCMBUDSETUP);

UPDATE VAM_MIGVTCMBUDGETLOG SET MIGSTATUSCODE='F',MIGSTATUSDESC='BUDGETLOG BUDLOGID IS ALREADY AVAILABLE' WHERE BUDLOGID IN (SELECT BUDLOGID FROM VT_VAM.VTCMBUDGETLOG);

UPDATE VAM_MIGVTSMVACARDS SET MIGSTATUSCODE='F',MIGSTATUSDESC='CARD SETUP IS ALREADY AVAILABLE' WHERE VACARDID IN (SELECT VACARDID FROM VT_VAM.VTSMVACARDS);

UPDATE VAM_MIGVTSTVACARDSUPL SET MIGSTATUSCODE='F',MIGSTATUSDESC='CARD UPLOAD SETUP IS ALREADY AVAILABLE' WHERE VACARDSUPLID IN (SELECT VACARDSUPLID FROM VT_VAM.VTSTVACARDSUPL);

UPDATE VAM_MIGVTPTTXN SET MIGSTATUSCODE='F',MIGSTATUSDESC='TXN REFNO IS ALREADY AVAILABLE' WHERE PAYTRNREFNO IN (SELECT PAYTRNREFNO FROM VT_VAM.VTPTTXN);

UPDATE VAM_MIGVTPTTXNEXP SET MIGSTATUSCODE='F',MIGSTATUSDESC='TXN EXCEPTION REFNO IS ALREADY AVAILABLE' WHERE TXNEXPID IN (SELECT TXNEXPID FROM VT_VAM.VTPTTXNEXP);

UPDATE VAM_MIGVTFTLEDPOSTING SET MIGSTATUSCODE='F',MIGSTATUSDESC='LEDGERNO IS ALREADY AVAILABLE' WHERE LEDGERNO IN (SELECT LEDGERNO FROM VT_VAM.VTFTLEDPOSTING);

UPDATE VAM_MIGVTPMNARRATION SET MIGSTATUSCODE='F',MIGSTATUSDESC='NARRATIONID IS ALREADY AVAILABLE' WHERE NARRATIONID IN (SELECT NARRATIONID FROM VT_VAM.VTPMNARRATION);

UPDATE VAM_MIGVTSMVAEARMARK SET MIGSTATUSCODE='F',MIGSTATUSDESC='EARMARKREFID IS ALREADY AVAILABLE' WHERE EARMARKREFID IN (SELECT EARMARKREFID FROM VT_VAM.VTSMVAEARMARK);

UPDATE VAM_MIGVTSMVAEARMARKEXP SET MIGSTATUSCODE='F',MIGSTATUSDESC='EARMARK EXP REFID IS ALREADY AVAILABLE' WHERE EARMARKEXPID IN (SELECT EARMARKEXPID FROM VT_VAM.VTSMVAEARMARKEXP);

UPDATE VAM_MIGVTSTBATCHPRCSTRN SET MIGSTATUSCODE='F',MIGSTATUSDESC='BATCHRUNID IS ALREADY AVAILABLE' WHERE BATCHRUNID IN (SELECT BATCHRUNID FROM VT_VAM.VTSTBATCHPRCSTRN);

v_STARTTIME := SYSTIMESTAMP;

    UPDATE VAM_MIGVTSTBATCHPRCSTRN SET BATCHRUNID1=IN_BATCHRUNID WHERE BATCHRUNID1 IS NULL AND MIGSTATUSCODE='P';

UPDATE VAM_MIGVTSTBATCHPRCSTRN
    SET MIGSTATUSCODE='S', MIGSTATUSDESC = 'Validation Successfull'
    WHERE BATCHRUNID1=IN_BATCHRUNID AND MIGSTATUSCODE='P';

MERGE INTO VAM_MIGVTSTBATCHPRCSTRN STG USING 
    (
    SELECT A.CUSTID ,A.GCIFNO
    FROM VT_MIGRATION.STGVTCMCUST A
    GROUP BY A.CUSTID ,A.GCIFNO
    )A
    ON (A.CUSTID=STG.CUSTID)
    WHEN MATCHED THEN
    UPDATE 
    SET STG.GCIFNO=A.GCIFNO 
    WHERE
    STG.CUSTID IS NOT NULL;

    INSERT INTO VT_VAM.VTSTBATCHPRCSTRN

        (BATCHRUNID,			BATCHID,				PSPID,					MERCHANTID
        ,FILENAME,				REQDATE,        		PROCSTARTDATE,  		PROCENDDATE
        ,TOTRECS,        		SUCCRECS,        		FAILRECS,       		STARTDATE
        ,ENDDATE,        		FILEUPLTHROUGH,     	LVID,        			ACKSTATUS
        ,ACKBATCHRUNID,        	STOREID,        		RECONCNT,				UNRECONCNT
        ,STATUSCODE,        	STATUSDESC,        		       			CRTDATE
        ,CRTIP,        			TOTINVAMT,        		PAYREFNO,    			FILETYPE
        ,REFID,        			DENOMINATION,       	INITCHN,     			CBFILENAME
        ,CBBATCHRUNID,        	CBRESPBATCHRUNID,		CUSTID,      			ACCID
        ,LV1GROUPCODE,        	LV2GROUPCODE,			LV3GROUPCODE,       	LV4GROUPCODE
        ,LV5GROUPCODE,        	LV1APPSTATUS,			LV2APPSTATUS,       	LV3APPSTATUS
        ,LV4APPSTATUS,        	LV5APPSTATUS,			LV1APPBY,        		LV2APPBY
        ,LV3APPBY,        		LV4APPBY,				LV5APPBY,        		LV1APPDATE
        ,LV2APPDATE,        	LV3APPDATE,				LV4APPDATE,        		LV5APPDATE
        ,LV1APPREMARKS,        	LV2APPREMARKS,			LV3APPREMARKS,      	LV4APPREMARKS
        ,LV5APPREMARKS,        	SOLEAPPFLAG,        	SOLEAPPDATE,        	SOLEAPPREMARKS
        ,SOLEAPPBY,        		AUTOAPPFLAG,        	AUT0APPDATE,        	AUTHDTLSID
        ,AUTHSEQFLAG,        	BILLNICNAME,        	ENTITYTYPE,        		AUTOREJFLAG
        ,AUTOREJDATE,        	ORGFILENAME,        	DEBITTYPE,        		BATCHREFNO
        ,FAILUREREASON,        	CBRESPID,				CBMOLID,        		VERIFIEDBY
        ,VERIFIEDDATE,        	DRACCTYPEFLAG,			RETRYCOUNT,        		REQDEXCTNDT
        ,H2HPSR,        		VERAPPBY,				VERAPPDATE,        		CIFID
        ,COUNTRYID,        		EODRECS,				ALERTSENTFLAG,      	PDFIMAGE
        ,VERSION,        		ISDELETED,				        			MDYDATE
        ,MDYIP,        								APPDATE,      			APPIP
        ,STATUS,        		IMGUNMAPCOUNT,			OICNO,        			AUTOFLAGYN
        ,CBERRORCODE,        	CBERRORDESC,        	NESTREFNO,    			SUBMITBY
        ,SUBMITDATE,        	SUBMITIP,				TEMPTYPE,				REQTYPE
        ,MISSINGRECONCOUNT,     MISSINGAPICOUNT,		SEQNO,        			FILEPATH
        ,INFILEFORMAT,        	VAENTITYID,				REMARKS,				REJECTREASON
        ,REJECTDATE,        	REJECTBY,				READSTATUSCODE,     	READEXEID
--        ,CRTBY, APPBY, MDYBY
        )
    SELECT
        A.BATCHRUNID,       		A.BATCHID,       		A.PSPID,       			A.MERCHANTID
        ,A.FILENAME,      		A.REQDATE,       		A.PROCSTARTDATE,    	A.PROCENDDATE
        ,A.TOTRECS,       		A.SUCCRECS,      		A.FAILRECS,       		A.STARTDATE
        ,A.ENDDATE,       		A.FILEUPLTHROUGH,   	A.LVID,       			A.ACKSTATUS
        ,A.ACKBATCHRUNID,       A.STOREID,       		A.RECONCNT,       		A.UNRECONCNT
        ,A.STATUSCODE,       	A.STATUSDESC,       	      			A.CRTDATE
        ,'MIGVAM'AS CRTIP,       		A.TOTINVAMT,       		A.PAYREFNO,       		A.FILETYPE
        ,A.REFID,       		A.DENOMINATION,     	A.INITCHN,       		A.CBFILENAME
        ,A.CBBATCHRUNID,       	A.CBRESPBATCHRUNID, 	CU.CUSTID,       		A.ACCID
        ,A.LV1GROUPCODE,       	A.LV2GROUPCODE,     	A.LV3GROUPCODE,     	A.LV4GROUPCODE
        ,A.LV5GROUPCODE,       	A.LV1APPSTATUS,     	null AS LV2APPSTATUS,	A.LV3APPSTATUS
        ,A.LV4APPSTATUS,       	A.LV5APPSTATUS,     	A.LV1APPBY,       		A.LV2APPBY
        ,A.LV3APPBY,       		A.LV4APPBY,       		A.LV5APPBY,       		A.LV1APPDATE
        ,A.LV2APPDATE,       	A.LV3APPDATE,       	A.LV4APPDATE,       	A.LV5APPDATE
        ,A.LV1APPREMARKS,       A.LV2APPREMARKS,    	A.LV3APPREMARKS,    	A.LV4APPREMARKS
        ,A.LV5APPREMARKS,       A.SOLEAPPFLAG,     		A.SOLEAPPDATE,      	A.SOLEAPPREMARKS
        ,A.SOLEAPPBY,       	A.AUTOAPPFLAG,     		A.AUT0APPDATE,      	A.AUTHDTLSID
        ,A.AUTHSEQFLAG,       	A.BILLNICNAME,     		A.ENTITYTYPE,       	A.AUTOREJFLAG
        ,A.AUTOREJDATE,       	A.ORGFILENAME,     		A.DEBITTYPE,       		A.BATCHREFNO
        ,A.FAILUREREASON,       A.CBRESPID,       		A.CBMOLID,       		A.VERIFIEDBY
        ,A.VERIFIEDDATE,       	A.DRACCTYPEFLAG,    	A.RETRYCOUNT,       	A.REQDEXCTNDT
        ,A.H2HPSR,       		null AS VERAPPBY,     	null AS VERAPPDATE,   	null AS CIFID
        ,null AS COUNTRYID,       null AS EODRECS,      	null AS ALERTSENTFLAG,	null AS PDFIMAGE
        ,null AS VERSION,       	null AS ISDELETED,    	       			A.MDYDATE
        ,null AS MDYIP,       	       		null AS APPDATE,      	null AS APPIP
        ,null AS STATUS,       	null AS IMGUNMAPCOUNT,	null AS OICNO,       		null AS AUTOFLAGYN
        ,A.CBERRORCODE,       	A.CBERRORDESC,      	A.NESTREFNO,       		A.SUBMITBY
        ,A.SUBMITDATE,       	A.SUBMITIP,       		null AS TEMPTYPE,     	null AS REQTYPE
        ,null AS MISSINGRECONCOUNT,null AS MISSINGAPICOUNT,	null AS SEQNO,     	    null AS FILEPATH
        ,null AS INFILEFORMAT,    null AS VAENTITYID,   	null AS REMARKS,      	null AS REJECTREASON
        ,A.REJECTDATE,       	A.REJECTBY,       		A.READSTATUSCODE,   	A.READEXEID
--        ,MAUSR.USERID,APUSR.USERID,MDUSR.USERID
    FROM VAM_MIGVTSTBATCHPRCSTRN A
    LEFT JOIN VT_COB.VTCMCUST CU ON A.GCIFNO=CU.GCIFNO
    LEFT JOIN VTSTBATCHPRCSTRN MDUSR ON A.BATCHRUNID=MDUSR.BATCHRUNID
    WHERE --A.GCIFNO IN ('ADNOCIHB') AND 
    BATCHRUNID1=IN_BATCHRUNID AND MIGSTATUSCODE='S' AND MDUSR.BATCHRUNID IS NULL 
    AND A.STATUSCODE IN ('5200','10000') AND A.BATCHID IN (31,10,130);
---TAKING ONLY 31,32,34

    UPDATE VT_VAM.VTSTBATCHPRCSTRN SET BATCHID=CASE WHEN BATCHID=31 AND FILETYPE='VMOD' THEN 34
    WHEN BATCHID=31 AND FILETYPE='VACT' THEN 32
    WHEN BATCHID=31 AND FILETYPE='VADD' THEN 31 
    WHEN BATCHID=130  THEN 35 
    ELSE 0
    END
    WHERE  BATCHID IN(31,130) AND CRTIP='MIGVAM';

    UPDATE VT_VAM.VTSTBATCHPRCSTRN SET CRTBY=102051,APPBY=102051,MDYBY=102051,SUBMITBY=102051 WHERE CRTIP='MIGVAM';

/*VTCMVAENTITY*/
    UPDATE VAM_MIGVTCMVAENTITY SET BATCHRUNID1=IN_BATCHRUNID WHERE BATCHRUNID1 IS NULL AND MIGSTATUSCODE='P';

    SELECT COUNT(1) INTO v_TOTCNT FROM VAM_MIGVTCMVAENTITY WHERE BATCHRUNID1=IN_BATCHRUNID ;

    IF v_TOTCNT > 0  THEN

  UPDATE VAM_MIGVTCMVAENTITY STG SET STG.MIGSTATUSCODE='F', STG.MIGSTATUSDESC = 'ACCOUNT NUMBER IS NOT AVAILABLE IN GCN'
 WHERE NOT EXISTS (SELECT 1 FROM VT_COB.VTCMCUSTACC A WHERE A.ACCNO=STG.ACCNO) AND BATCHRUNID1=IN_BATCHRUNID ;

UPDATE VAM_MIGVTCMVAENTITY STG SET STG.MIGSTATUSCODE='F', STG.MIGSTATUSDESC = 'GCIFNO IS NOT AVAILABLE IN GCN'
 WHERE NOT EXISTS (SELECT 1 FROM VT_COB.VTCMCUST A WHERE A.GCIFNO=STG.GCIFNO) AND BATCHRUNID1=IN_BATCHRUNID ;

    UPDATE VAM_MIGVTCMVAENTITY
    SET MIGSTATUSCODE='S', MIGSTATUSDESC = 'Validation Successfull'
    WHERE BATCHRUNID1=IN_BATCHRUNID AND MIGSTATUSCODE='P';

    INSERT INTO VT_VAM.VTCMVAENTITY(
         VAENTITYID,               		COUNTRYID,              GCIFNO,                 ACCID
        ,VACUSTIDNT,               		CURRENCYCODE,           HIERACHYTYPE,           PRNTMAP
        ,VAGENERATOR,              	    VAGENMODE,              ACCENTRY,               MKRREMARKS
        ,APRREMARKS,               		STATUS,                                   CRTDATE
        ,CRTIP,                    		                  APPDATE,                APPIP
        ,                    		MDYDATE,                MDYIP,                  LOCMAPFLAG
        ,LOCSETUPLVL,              		ENTITYTYPE,             VAENTFUNCTION,          HIERARCHYLVL
        ,HIERARCHYNAME,            		PAYERIDMAXLEN,          PAYERIDCOUNTER,         LOCID
        ,ORDDETAILS,               		ENTITYNAME,             VAHGRP,                 BALANCECKREQ
        ,VAACCTYPE,                		FREQUENCY,              SELECTION,              EMAIL
        ,VALENIDNT,                		LASTRUNDATE,            LINKVATO,               EIPPFLAG
        ,MAXNOVA,                  		VACCMAXLEN,             ALIASFLAG,              STMTRUNBALFLAG
        ,STMTCHILDVAFLAG,          		DYNAMICVAFLAG,          DISPFLOWFLAG,           AUTORECONFLAG
        ,MANRECONFLAG,             		RECONCUSTAPP,           ISDELETED,              RTPLINK
        ,PUSHNOTIFICATION,         		RTPCHNEMAIL,            RTPCHNSMS,              ENABLEREMINDER
        ,OBVAMENTITYID,            		MID,                    REQTYPE,                REQIDNTTYPE
        ,MODCODE,                  		MOBILENO,               POOLACCNO,              ENRICHFLAG
        ,ZEROBALANCEACC,           		VACONFIG,               CARDUSAGETYPE,          POOLACCOUNTVAID
--        ,CRTBY, APPBY, MDYBY
        ,IBANGENAPI)
	SELECT
		 STG.VAACCID,                   1,                      STG.GCIFNO,       		ACC.ACCID
        ,STG.VACUSTIDNT,       			STG.CURRENCYCODE,       CASE WHEN STG.HIERACHYTYPE=1 THEN 'P' WHEN STG.HIERACHYTYPE=2 THEN 'C' ELSE STG.HIERACHYTYPE END,       STG.PRNTMAP
        ,CASE 
        WHEN STG.VACONFIG='VC' THEN '2'
        WHEN STG.PAYERMANITENANCE=1 THEN '2'
        WHEN STG.PAYERMANITENANCE=2 THEN '1'
        WHEN STG.PAYERMANITENANCE=0 THEN null
        ELSE STG.PAYERMANITENANCE END  AS VAGENERATOR,       		STG.VALLOCATION AS VAGENMODE,       	STG.ACCENTRY,       	STG.MKRREMARKS
        ,STG.APRREMARKS,       			STG.STATUS,       		       		STG.CRTDATE
        ,'MIGVAM',       				       		STG.APPDATE,       		STG.APPIP
        ,       				STG.MDYDATE,       		STG.MDYIP,       		STG.LOCMAPFLAG
         ,STG.LOCSETUPLVL,       		CASE WHEN STG.VACONFIG='BASIC' THEN 'VACC' ELSE STG.VACONFIG END AS ENTITYTYPE,       STG.VATYPE AS VAENTFUNCTION,      STG.HIERARCHYLVL
        ,STG.HIERARCHYNAME,       		STG.PAYERIDMAXLEN,      STG.PAYERIDCOUNTER,     STG.LOCID
        ,'VAD' ORDDETAILS,       			STG.ENTITYNAME,       	STG.VAHGRP,       		STG.BALANCECKREQ
        ,STG.ZEROBALANCEACC AS VAACCTYPE,               STG.FREQUENCY,       	STG.SELECTION,       	STG.EMAIL
        ,STG.VALENIDNT,       			STG.LASTRUNDATE,       	'C' AS LINKVATO,       	CASE WHEN STG.VATYPE ='EIPP' THEN 'Y' ELSE 'N' END AS EIPPFLAG
        ,STG.USERDEFLIMIT AS MAXNOVA,                 STG.VALENIDNT AS VACCMAXLEN,       	null AS ALIASFLAG,       	'Y' AS STMTRUNBALFLAG
        ,'Y' AS STMTCHILDVAFLAG,       	null AS DYNAMICVAFLAG,    null AS DISPFLOWFLAG,     null AS AUTORECONFLAG
        ,null AS MANRECONFLAG,       		null AS RECONCUSTAPP,     'N' AS ISDELETED,       	null AS RTPLINK
        ,null AS PUSHNOTIFICATION,       	null AS RTPCHNEMAIL,      null AS RTPCHNSMS,       	null AS ENABLEREMINDER
        ,null AS OBVAMENTITYID,           null AS MID,              null AS REQTYPE,          null AS REQIDNTTYPE
        ,CASE WHEN LENGTH(STG.MOBILENO) >11 THEN SUBSTR(STG.MOBILENO,1,3) ELSE '971' END AS MODCODE       			
        ,CASE WHEN LENGTH(STG.MOBILENO) >11 AND STG.MOBILENO LIKE '971%' THEN 0||SUBSTR(STG.MOBILENO,4,15)
        WHEN LENGTH(STG.MOBILENO) >11  THEN SUBSTR(STG.MOBILENO,4,15)
        ELSE TO_CHAR(STG.MOBILENO) END AS MOBILENO,	
   	STG.POOLACCNO,       	STG.ENRICHFLAG
        ,STG.ZEROBALANCEACC,       		CASE WHEN STG.VACONFIG='BASIC' THEN 'VACC' ELSE STG.VACONFIG END AS VACONFIG,       	STG.CARDUSAGETYPE,      STG.POOLACCOUNTVAID
--        ,MAUSR.USERID,APUSR.USERID,MDUSR.USERID
        ,CASE WHEN STG.IBANGENFLAG=0 AND STG.VACONFIG='VC' THEN NULL
        WHEN STG.IBANGENFLAG=0 AND STG.PAYERMANITENANCE=2  THEN NULL ELSE STG.IBANGENFLAG END
    FROM
      VAM_MIGVTCMVAENTITY STG
      INNER JOIN VT_COB.VTCMCUSTACC ACC ON ACC.ACCNO=STG.ACCNO
        LEFT JOIN VT_VAM.VTCMVAENTITY MDUSR ON STG.VAACCID=MDUSR.VAENTITYID
      WHERE --STG.GCIFNO IN ('ADNOCIHB') AND 
      STG.BATCHRUNID1=IN_BATCHRUNID AND STG.MIGSTATUSCODE='S' AND MDUSR.VAENTITYID IS NULL;

    UPDATE VT_VAM.VTCMVAENTITY SET CRTBY=102051,APPBY=102051,MDYBY=102051,STMTRUNBALFLAG='Y',STMTCHILDVAFLAG='Y' WHERE CRTIP='MIGVAM';
    
    UPDATE VT_VAM.VTCMVAENTITY SET MDYDATE= CRTDATE WHERE CRTIP='MIGVAM' AND MDYBY IS NOT NULL AND MDYDATE IS NULL ; 
  ---ADDED FOR ORDERING PARTY AND VA LEN  
    UPDATE VTCMVAENTITY SET ORDDETAILS ='VAD',VACCMAXLEN= CASE WHEN VALENIDNT=1 THEN 11
    WHEN VALENIDNT=2 THEN 10
    WHEN VALENIDNT=3 THEN 9
    WHEN VALENIDNT=4 THEN 8
    WHEN VALENIDNT=5 THEN 7
    WHEN VALENIDNT=6 THEN 6
    WHEN VALENIDNT=7 THEN 5 END
    WHERE CRTIP='MIGVAM';

 /*VTCMVAENTCHNMAP*/   
    INSERT INTO VTCMVAENTCHNMAP
    (
    VACCCHNID,VAENTITYID,CHNCODE,STATUS,ISDELETED,CRTBY,CRTDATE,APPBY,APPDATE,CRTIP)
    SELECT 
    VTSMVAACCCHNMAP_SEQ.NEXTVAL,VA.VAENTITYID,'API','N','N',102051,SYSDATE,102051,SYSDATE,'MIGVAM'
    FROM VTCMVAENTITY VA
    WHERE VA.CRTIP='MIGVAM' AND VA.IBANGENAPI='1';

    /*VTCMVAENTMCCMAP*/

    INSERT INTO VTCMVAENTMCCMAP
    (
    MCCID,VACUSTIDNT,MCCGROUP,MCCCODE,MCCCODECAT,STATUS,APRREMARKS,CRTBY,CRTDATE,CRTIP,APPBY,APPDATE,ISDELETED
    )
    SELECT VTSMVAACCMCC_SEQ.NEXTVAL,VACUSTIDNT,MCCGROUP,MCCCODE,MCCCODECAT,STATUS,APRREMARKS,CRTBY,CRTDATE,'MIGVAM',APPBY,APPDATE,'N'
    FROM VT_MIGRATION.STGVTSMRESTRICTMCC ;

    UPDATE VT_VAM.VTCMVAENTMCCMAP SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';

    /*VTCMVAENTKEYCONTMAP*/

    INSERT INTO VTCMVAENTKEYCONTMAP
    (KCPID,VACUSTIDNT,CONTACTPERSON,CONTACTEMAIL,CONTACTMOBILE,STATUS,MKRREMARKS,APRREMARKS,CRTBY,CRTDATE,CRTIP,APPBY,APPDATE,APPIP,MDYBY,MDYDATE,MDYIP,CONTACTCNTRYCODE,ADDFLAG,VACARDSUPLID,VAENTITYID) 

    SELECT VTSMVAACCKEY_SEQ.NEXTVAL,VACUSTIDNT,CONTACTPERSON,CONTACTEMAIL,CONTACTMOBILE,STATUS,MKRREMARKS,APRREMARKS,CRTBY,CRTDATE,CRTIP,APPBY,APPDATE,APPIP,MDYBY,MDYDATE,MDYIP,CONTACTCNTRYCODE,ADDFLAG,VACARDSUPLID,VAENTITYID
    FROM(
    SELECT A.VACUSTIDNT,A.CONTACTPERSON,A.CONTACTEMAIL,A.CONTACTMOBILE,A.STATUS,A.MKRREMARKS,A.APRREMARKS,A.CRTBY,
    SYSDATE AS CRTDATE,'MIGVAM' AS CRTIP,A.APPBY,SYSDATE AS APPDATE,A.APPIP,A.MDYBY,SYSDATE AS MDYDATE,A.MDYIP,A.CONTACTCNTRYCODE,A.ADDFLAG,A.VACARDSUPLID,
    B.VAENTITYID
    FROM VT_MIGRATION.STGVTSMKCPDETAILS A
    INNER JOIN VTCMVAENTITY B ON A.VACUSTIDNT=B.VACUSTIDNT AND A.ADDFLAG = 'E'
    GROUP BY  A.VACUSTIDNT,A.CONTACTPERSON,A.CONTACTEMAIL,A.CONTACTMOBILE,A.STATUS,A.MKRREMARKS,A.APRREMARKS,A.CRTBY,
    SYSDATE,'MIGVAM',A.APPBY,SYSDATE,A.APPIP,A.MDYBY,SYSDATE,A.MDYIP,A.CONTACTCNTRYCODE,A.ADDFLAG,A.VACARDSUPLID,
    B.VAENTITYID);

    UPDATE VT_VAM.VTCMVAENTKEYCONTMAP SET CRTBY=102051,APPBY=102051,MDYBY=102051,ISDELETED='N' WHERE CRTIP='MIGVAM';

   /* INSERT INTO VTCMVAENTKEYCONTMAP
    (KCPID,VACUSTIDNT,CONTACTPERSON,CONTACTEMAIL,CONTACTMOBILE,STATUS,MKRREMARKS,APRREMARKS,CRTBY,CRTDATE,CRTIP,APPBY,APPDATE,APPIP,MDYBY,MDYDATE,MDYIP,CONTACTCNTRYCODE,ADDFLAG,VACARDSUPLID,VAENTITYID) 

    SELECT VTSMVAACCKEY_SEQ.NEXTVAL,VACUSTIDNT,CONTACTPERSON,CONTACTEMAIL,CONTACTMOBILE,STATUS,MKRREMARKS,APRREMARKS,CRTBY,CRTDATE,CRTIP,APPBY,APPDATE,APPIP,MDYBY,MDYDATE,MDYIP,CONTACTCNTRYCODE,ADDFLAG,VACARDSUPLID,VAENTITYID
    FROM(
    SELECT A.VACUSTIDNT,A.CONTACTPERSON,A.CONTACTEMAIL,A.CONTACTMOBILE,A.STATUS,A.MKRREMARKS,A.APRREMARKS,A.CRTBY,
    SYSDATE AS CRTDATE,'MIGVAM' AS CRTIP,A.APPBY,SYSDATE AS APPDATE,A.APPIP,A.MDYBY,SYSDATE AS MDYDATE,A.MDYIP,A.CONTACTCNTRYCODE,A.ADDFLAG,A.VACARDSUPLID,
    B.VAENTITYID
    FROM VT_MIGRATION.STGVTSMKCPDETAILS A
    INNER JOIN VTCMVAENTITY B ON A.VACUSTIDNT=B.VACUSTIDNT AND A.ADDFLAG = 'E'
    GROUP BY  A.VACUSTIDNT,A.CONTACTPERSON,A.CONTACTEMAIL,A.CONTACTMOBILE,A.STATUS,A.MKRREMARKS,A.APRREMARKS,A.CRTBY,
    SYSDATE,'MIGVAM',A.APPBY,SYSDATE,A.APPIP,A.MDYBY,SYSDATE,A.MDYIP,A.CONTACTCNTRYCODE,A.ADDFLAG,A.VACARDSUPLID,
    B.VAENTITYID);
    */

    INSERT INTO VTSMKCPDETAILS
    (KCPID,VACUSTIDNT,CONTACTPERSON,CONTACTEMAIL,
    CONTACTMOBILE,STATUS,MKRREMARKS,APRREMARKS,
    CRTBY,CRTDATE,CRTIP,APPBY,APPDATE,
    APPIP,MDYBY,MDYDATE,MDYIP,CONTACTCNTRYCODE,ADDFLAG,VACARDSUPLID,
    VACARDID,KCPREFNO,ENTITYKCPID,ISDELETED)
    SELECT VTSMKCPDETAILS_KCPID_SEQ.NEXTVAL,B.VACUSTIDNT,B.CONTACTPERSON,B.CONTACTEMAIL,
    B.CONTACTMOBILE,B.STATUS,B.MKRREMARKS,B.APRREMARKS, B.CRTBY,
    TO_DATE( SUBSTR(B.CRTDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),'MIGVAM' CRTIP,B.APPBY,
    TO_DATE( SUBSTR(B.APPDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ) ,B.APPIP,B.MDYBY,
    TO_DATE( SUBSTR(B.MDYDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ) ,B.MDYIP,B.CONTACTCNTRYCODE,
    B.ADDFLAG,B.VACARDSUPLID,
    A.VACARDID,'' KCPREFNO,''ENTITYKCPID,'N' ISDELETED
    FROM VT_MIGRATION.STGVTSMKCPDETAILSMAP A
    INNER JOIN VT_MIGRATION.STGVTSMKCPDETAILS B ON A.KCPMAPID=B.KCPID
    WHERE B.ADDFLAG='V';

    UPDATE VTSMKCPDETAILS SET CRTBY=102051, APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';

      MERGE INTO VAM_MIGVTCMVAENTITY STG
        USING
        (
        SELECT VAE.GCIFNO,STG.VACUSTIDNT
        FROM VAM_MIGVTCMVAENTITY STG
        INNER JOIN VT_VAM.VTCMVAENTITY VAE ON VAE.GCIFNO = STG.GCIFNO AND STG.VACUSTIDNT=VAE.VACUSTIDNT
        WHERE STG.BATCHRUNID1 =IN_BATCHRUNID AND STG.MIGSTATUSCODE='S'
        )A ON  (A.GCIFNO=STG.GCIFNO AND A.VACUSTIDNT=STG.VACUSTIDNT)
        WHEN MATCHED THEN
        UPDATE SET STG.MIGSTATUSCODE='M', STG.MIGSTATUSDESC = 'Migration Successful'
        WHERE STG.BATCHRUNID1 =IN_BATCHRUNID AND STG.MIGSTATUSCODE='S';

/*VTSMVACCOUNTS*/

UPDATE VAM_MIGVTSMVACCOUNTS SET BATCHRUNID1=IN_BATCHRUNID WHERE BATCHRUNID1 IS NULL AND MIGSTATUSCODE='P';

UPDATE VAM_MIGVTSMVACCOUNTS STG SET STG.MIGSTATUSCODE='F', STG.MIGSTATUSDESC = 'ACCOUNT NUMBER IS NOT AVAILABLE IN GCN'
WHERE NOT EXISTS (SELECT 1 FROM VT_COB.VTCMCUSTACC A WHERE A.ACCNO=STG.ACCNO) AND BATCHRUNID1=IN_BATCHRUNID ;

    INSERT INTO VT_VAM.VTSMVACCOUNTS (
     VIRTUALACCID,        	VAIBAN,        		VAACCNAME,        	VAENTITYID
    ,VACUSTIDNT,        	ACCID,        		VAFLAG,        		PARTNERID
    ,EXTACCID,       		EXTACCNAME,        	EXTACCNO,        	EMAIL
    ,HIERARCHYTYPE,        	HIERARCHYLVL,       HIERARCHYNAME,		LOCMAP
    ,PRNTMAP,        		ENTITYTYPE,        	PAYERHGRP,        	REMARKS
    ,CHECKERREMARKS,        STATUS,        		ISDELETED
    ,CRTDATE,        		CRTIP,        		        		APPDATE
    ,APPIP,        			        		MDYDATE,        	MDYIP
    ,COUNTRYID,        		COUNTRYCODE2,       CURRENCYCODE,       ACCSTATUS
    ,AVLBAL,        		EFFBAL,        		BUILDBALFLAG,       BATCHRUNID
    ,VAENTFUNCTION,       	VACCNO,        		EARMARKAMT,        	FILEUPLOAD
    ,ADDR1,        			ADDR2,        		ADDR3,        		EIDA
    ,CONTACTNO,        		VAALIAS,        	ACCOUNTNO,        	RETRYCOUNT
    ,VACHNACTSTATUS,        VACHNACTSTATUSDESC,	ENRICHFIELD1,		ENRICHFIELD2
    ,ENRICHFIELD3,        	REQTYPE,        	VAREQTYPE,			READEXEID
    ,READSTATUSCODE,        VARPTEXEID,        	VARPTSTATUSCODE,	VAREQIDNTTYPE
    ,APPENTITYTYPE,        	ENRICHFIELD4,       ENRICHFIELD5,		ENRICHFIELD6
    ,ENRICHFIELD7,        	ENRICHFIELD8,       ENRICHFIELD9,		ENRICHFIELD10
    ,MOBILENO,        		VAUPLID,        	INITCHN,			VAACCID
    ,VAIBANID,        		MODCODE,        	LANDCODE,			LANDAREACODE
    ,INVDYNAMICVAFLAG,      BBAN,        		PRIMARYID,			CUSTID
    ,VIRTUALACCTYPE,        ALLOCATIONTYPE,		VACURRENCY,			EVENTTYPE
    ,CRTBY, APPBY, MDYBY)
    SELECT
     STG.VAIBANID,        	VAIBAN,        		VAACCNAME,        	ENT.VAENTITYID
    ,STG.VACUSTIDNT,        	STG.ACCID,        		STG.VAFLAG,        		PARTNERID
    ,EXTACCID,       		EXTACCNAME,        	EXTACCNO,        	STG.EMAIL
    ,HIERARCHYTYPE,        	STG.HIERARCHYLVL,       STG.HIERARCHYNAME,		LOCMAP
    ,STG.PRNTMAP,           STG.ENTITYTYPE,        	PAYERHGRP,        	STG.REMARKS
    ,STG.CHECKERREMARKS,        STG.STATUS,        		STG.ISDELETED
    ,STG.CRTDATE,           'MIGVAM',        		        		STG.APPDATE
    ,STG.APPIP,                     		STG.MDYDATE,        	STG.MDYIP
    ,1,         STG.COUNTRYCODE2,       STG.CURRENCYCODE,       STG.ACCSTATUS
    ,AVLBAL,        		EFFBAL,        		BUILDBALFLAG,       STG.BATCHRUNID
    ,STG.VACUSTTYPE,       	STG.PAYERID AS VACCNO,        		EARMARKAMT,        	FILEUPLOAD
    ,ADDR1,        			ADDR2,        		ADDR3,        		EIDA
    ,STG.CONTACTNO  AS CONTACTNO,        		VAALIAS,        	STG.ACCOUNTNO,        	RETRYCOUNT
    ,VACHNACTSTATUS,        VACHNACTSTATUSDESC,	ENRICHFIELD1,		ENRICHFIELD2
    ,ENRICHFIELD3,        	null AS REQTYPE,        	VAREQTYPE,			READEXEID
    ,CASE WHEN VACHNACTSTATUS=30 THEN 30 WHEN READSTATUSCODE=0 THEN 20 ELSE READSTATUSCODE END ,        VARPTEXEID,        	VARPTSTATUSCODE,	VAREQIDNTTYPE
    ,APPENTITYTYPE,        	null AS ENRICHFIELD4,       null AS ENRICHFIELD5,		null AS ENRICHFIELD6
    ,null AS ENRICHFIELD7,        	null AS ENRICHFIELD8,       null AS ENRICHFIELD9,		null AS ENRICHFIELD10
    ,STG.CONTACTNO AS MOBILENO,        		null AS VAUPLID,        	STG.ENTITYTYPE AS INITCHN,			VAACCID
    ,VAIBANID,        		null AS MODCODE,        	null AS LANDCODE,			null AS LANDAREACODE
    ,null AS INVDYNAMICVAFLAG,      BBAN,        		EIDA AS PRIMARYID,			STG.CUSTID
    ,ENT.ENTITYTYPE AS VIRTUALACCTYPE,        ENT.VAGENMODE AS ALLOCATIONTYPE,		STG.CURRENCYCODE AS VACURRENCY,			null AS EVENTTYPE
    ,STG.CRTBY, STG.APPBY, STG.MDYBY
    FROM VAM_MIGVTSMVACCOUNTS  STG
        INNER JOIN VT_COB.VTCMCUSTACC ACC ON ACC.ACCNO= STG.ACCNO
    INNER JOIN VT_VAM.VTCMVAENTITY ENT ON STG.GCIFNO = ENT.GCIFNO --AND ENT.GCIFNO='ADNOCIHB'
    AND STG.VACUSTIDNT=ENT.VACUSTIDNT
    WHERE  STG.BATCHRUNID1 =IN_BATCHRUNID AND STG.MIGSTATUSCODE<>'F';


       MERGE INTO VT_VAM.VTSMVACCOUNTS STG
      USING
      (
        SELECT STG.VAIBANID,CU.CUSTID,ACC.ACCID
        FROM VAM_MIGVTSMVACCOUNTS  STG
        INNER JOIN VT_COB.VTCMCUST CU ON STG.GCIFNO=CU.GCIFNO
        INNER JOIN VT_COB.VTCMCUSTACC ACC ON ACC.ACCNO= STG.ACCNO)A
      ON (A.VAIBANID=STG.VIRTUALACCID)
      WHEN MATCHED THEN
      UPDATE SET STG.CUSTID=A.CUSTID,STG.ACCID=A.ACCID
      WHERE STG.CRTIP='MIGVAM';

    UPDATE VT_VAM.VTSMVACCOUNTS SET EVENTTYPE= CASE WHEN UPPER(VAREQTYPE)=UPPER('NEW') THEN 'IBAN ADD'
    WHEN UPPER(VAREQTYPE)=UPPER('EDIT') THEN 'IBAN EDIT'
    WHEN UPPER(VAREQTYPE) LIKE UPPER('%ACTIVATE%') AND UPPER(VAREQTYPE) NOT LIKE UPPER('%DEACTIVATE%') THEN 'IBAN ACTIVATE'
    WHEN UPPER(VAREQTYPE) LIKE UPPER('%DEACTIVATE%') THEN 'IBAN DEACTIVATE' END
    WHERE CRTIP='MIGVAM';

    UPDATE VT_VAM.VTSMVACCOUNTS SET VAREQTYPE = CASE WHEN UPPER(VAREQTYPE)=UPPER('NEW') THEN 'IBAN ADD'
    WHEN UPPER(VAREQTYPE)=UPPER('EDIT') THEN 'IBAN EDIT'
    WHEN UPPER(VAREQTYPE) = 'ACTIVATE' THEN 'IBAN ACTIVATE'
    WHEN UPPER(VAREQTYPE) = 'DEACTIVATE' THEN 'IBAN DEACTIVATE' END
    WHERE CRTIP='MIGVAM';

        UPDATE VT_VAM.VTSMVACCOUNTS SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';
        UPDATE VT_VAM.VTSMVACCOUNTS SET READSTATUSCODE=20 WHERE READSTATUSCODE=0 AND CRTIP='MIGVAM';


        MERGE INTO VAM_MIGVTSMVACCOUNTS STG
        USING
        (
        SELECT VAE.GCIFNO,STG.VACUSTIDNT,STG.ACCNO
        FROM VAM_MIGVTSMVACCOUNTS STG
        INNER JOIN VT_COB.VTCMCUSTACC ACC ON STG.ACCNO=ACC.ACCNO
        INNER JOIN VT_VAM.VTCMVAENTITY VAE ON VAE.GCIFNO = STG.GCIFNO AND STG.VACUSTIDNT=VAE.VACUSTIDNT
        WHERE STG.BATCHRUNID1 =IN_BATCHRUNID AND STG.MIGSTATUSCODE='S'
        )A ON  (A.ACCNO=STG.ACCNO AND A.GCIFNO=STG.GCIFNO)
        WHEN MATCHED THEN
        UPDATE SET STG.MIGSTATUSCODE='M', STG.MIGSTATUSDESC = 'Migration Successful'
        WHERE STG.BATCHRUNID1 =IN_BATCHRUNID AND STG.MIGSTATUSCODE='S';

     /*VTSMVACHNMAP*/
/*
     INSERT INTO VT_VAM.VTSMVACHNMAP     
    ( VACHNMAPID,VIRTUALACCID,CHNID,STATUSCODE
    ,STATUSDESC,CRTBY,CRTDATE
    ,CRTIP,APPBY,APPDATE,APPIP
    ,EVENTTYPE,READEXEID,READSTATUSCODE,CURRENTFLAG)

    SELECT STG.VACHNMAPID,STG.VAIBANID,STG.CHNID,CASE WHEN STG.STATUSCODE=20 THEN 40 ELSE STG.STATUSCODE END,
    STG.STATUSDESC,STG.CRTBY,TO_DATE( SUBSTR(STG.CRTDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )
    ,'MIGVAM',STG.APPBY,TO_DATE( SUBSTR(STG.APPDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),STG.APPIP
    ,STG.EVENTTYPE,NULL,
    STG.READSTATUSCODE,'N' AS CURRENTFLAG
    FROM VT_MIGRATION.STGVTSMVACHNMAP STG
    LEFT JOIN VT_VAM.VTSMVACHNMAP A ON STG.VACHNMAPID=A.VACHNMAPID
    WHERE A.VACHNMAPID IS NULL
    GROUP BY STG.VACHNMAPID,STG.VAIBANID,STG.CHNID,CASE WHEN STG.STATUSCODE=20 THEN 40 ELSE STG.STATUSCODE END
    ,STG.STATUSDESC,STG.CRTBY,TO_DATE( SUBSTR(STG.CRTDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )
    ,'MIGVAM',STG.APPBY,TO_DATE( SUBSTR(STG.APPDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' ),STG.APPIP
    ,STG.EVENTTYPE,NULL,
    STG.READSTATUSCODE,'N';

    UPDATE VT_VAM.VTSMVACHNMAP SET EVENTTYPE= CASE WHEN UPPER(EVENTTYPE)=UPPER('EDIT') THEN 'IBAN EDIT'
    WHEN UPPER(EVENTTYPE)=UPPER('DEACTIVATE') THEN 'IBAN DEACTIVATE'
    WHEN UPPER(EVENTTYPE) =UPPER('ACTIVATE') THEN 'IBAN ACTIVATE'
    WHEN UPPER(EVENTTYPE) =UPPER('NEW') THEN 'IBAN ADD' END
    WHERE CRTIP='MIGVAM';

    MERGE INTO VTSMVACHNMAP STG
    USING
    (
    SELECT EVENTTYPE,VAREQTYPE,VACHNACTSTATUS
    FROM VTSMVACCOUNTS
    WHERE CRTIP='MIGVAM'
    GROUP BY EVENTTYPE,VAREQTYPE,VACHNACTSTATUS)
    A ON (STG.EVENTTYPE=A.VAREQTYPE AND A.VACHNACTSTATUS<>'30')
    WHEN MATCHED THEN
    UPDATE 
    SET CURRENTFLAG='Y'
    WHERE STG.CRTIP='MIGVAM';

    UPDATE VT_VAM.VTSMVACCOUNTS SET VAREQTYPE = CASE WHEN UPPER(VAREQTYPE)=UPPER('IBAN ADD') THEN 'New'
    WHEN UPPER(VAREQTYPE)=UPPER('IBAN EDIT') THEN 'Edit' END
    WHERE CRTIP='MIGVAM';

    UPDATE VT_VAM.VTSMVACHNMAP SET CRTBY='102051',APPBY='102051'
    WHERE CRTIP='MIGVAM';
*/
END IF;

/*VTSMVACHNMAP*/

INSERT INTO VTSMVACHNMAP (VACHNMAPID,VIRTUALACCID,VAIBAN,STATUSCODE,STATUSDESC,CRTDATE,EVENTTYPE,CRTIP)
SELECT VTSMVACHNMAP_VACHNMAPID_SEQ.NEXTVAL,
VIRTUALACCID,VAIBAN,40,'Pending activation',CRTDATE,VAREQTYPE,'MIGVAM'
FROM VTSMVACCOUNTS VA WHERE VA.VACHNACTSTATUS<>'30' AND CRTIP='MIGVAM';

UPDATE VTSMVACHNMAP A SET T24=10
WHERE VIRTUALACCID  IN (SELECT VAIBANID FROM VT_MIGRATION.STGVTSMVACHNMAP WHERE CHNID=5 AND STATUSCODE<>'30' )
AND A.CRTIP='MIGVAM' AND 
EXISTS (SELECT 1 FROM VT_MIGRATION.STGVTSMVACCOUNTS B WHERE A.VAIBAN= B.VAIBAN AND UPPER(A.EVENTTYPE)=UPPER(B.VAREQTYPE )) ;

UPDATE VTSMVACHNMAP A SET EWS=10
WHERE VIRTUALACCID  IN (SELECT VAIBANID FROM VT_MIGRATION.STGVTSMVACHNMAP WHERE CHNID=6 AND STATUSCODE<>'30')
AND CRTIP='MIGVAM'  AND EXISTS (SELECT 1 FROM VT_MIGRATION.STGVTSMVACCOUNTS B WHERE A.VAIBAN= B.VAIBAN AND 
UPPER(A.EVENTTYPE)=UPPER(B.VAREQTYPE )) ;

UPDATE VTSMVACHNMAP A SET CMS=10
WHERE VIRTUALACCID  IN (SELECT VAIBANID FROM VT_MIGRATION.STGVTSMVACHNMAP WHERE CHNID=10 AND STATUSCODE<>'30')
AND CRTIP='MIGVAM' AND  EXISTS (SELECT 1 FROM VT_MIGRATION.STGVTSMVACCOUNTS B WHERE A.VAIBAN= B.VAIBAN AND UPPER(A.EVENTTYPE)=UPPER(B.VAREQTYPE )) ;

UPDATE VT_VAM.VTSMVACHNMAP SET EVENTTYPE= CASE WHEN UPPER(EVENTTYPE)=UPPER('NEW') THEN 'IBAN ADD'
WHEN UPPER(EVENTTYPE)=UPPER('EDIT') THEN 'IBAN EDIT'
END
WHERE CRTIP='MIGVAM';

    /*VTSTPAYERUPL*/

    UPDATE VAM_MIGVTSTPAYERUPL SET BATCHRUNID1=IN_BATCHRUNID WHERE BATCHRUNID1 IS NULL AND MIGSTATUSCODE='P';

UPDATE VAM_MIGVTSTPAYERUPL SET MIGSTATUSCODE='F',MIGSTATUSDESC='PAYUPLID IS ALREADY AVAILABLE' WHERE RECSEQ IN (SELECT PAYUPLID FROM VT_VAM.VTSTPAYERUPL);

        UPDATE VAM_MIGVTSTPAYERUPL
    SET MIGSTATUSCODE='S', MIGSTATUSDESC = 'Validation Successfull'
    WHERE BATCHRUNID1=IN_BATCHRUNID AND MIGSTATUSCODE='P';

    INSERT INTO VT_VAM.VTSTPAYERUPL(
         BATCHRUNID,       HIERARCHYTYPE,       HIERARCHYLVL
        ,HIERARCHYNAME,       EMAIL,       VAACCNAME,       LOCMAP
        ,VAENTITYID,       REMARKS,       STATUS,       STATUSCODE
        ,REQBY,       REQDATE,       REQIP,       STATUSDESC
        ,RECSEQ,       VACUSTIDNT,       COUNTRYCODE2,       VAENTFUNCTION
        ,VAIBAN,       VACCNO,       PRNTMAP,       ADDR1
        ,ADDR2,       ADDR3,       EIDA,       CONTACTNO
        ,VAALIAS,       PAYUPLID,       ENRICHFIELD1,       ENRICHFIELD2
        ,ENRICHFIELD3,       APPREJBY,       APPREJDATE,       APPREJENTITYTYPE
        ,RECSTATUSCODE,       ENRICHFIELD4,       ENRICHFIELD5,       ENRICHFIELD6
        ,ENRICHFIELD7,       ENRICHFIELD8,       ENRICHFIELD9,       ENRICHFIELD10
        ,MOBILENO,       ISDELETED,       FILEUPLOAD,       APPREJREMARKS
        ,MODCODE,       LANDCODE,       LANDAREACODE,       VAREQTYPE
        ,ACCOUNTNO,       SEQNO,       REQTYPE,       PRIMARYID
        ,ACTION,       VANAME,       PAYERID,       VAACCTYPE,  CUSTID,BBAN
        ,VACHNACTSTATUS,VACHNACTSTATUSDESC)
	SELECT
         STG.BATCHRUNID,       STG.HIERARCHYTYPE,       STG.HIERARCHYLVL
        ,STG.HIERARCHYNAME,       STG.EMAIL,       STG.VANAME,       STG.LOCMAP
        ,STG.VAACCID,       STG.REMARKS,       STG.STATUS,       STG.STATUSCODE
        ,'',       STG.REQDATE,       'MIGVAM',       STG.STATUSDESC
        ,null AS RECSEQ,       STG.VACUSTIDNT,       'AE' AS COUNTRYCODE2,       VA.VAENTFUNCTION AS VAENTFUNCTION
        ,STG.VAIBAN,       STG.PAYERID AS VACCNO,       STG.PRNTMAP,       STG.ADDR1
        ,STG.ADDR2,       STG.ADDR3,       STG.EIDA,       STG.CONTACTNO AS CONTACTNO
        ,STG.VAALIAS,       STG.RECSEQ AS PAYUPLID,       STG.ENRICHFIELD1,       STG.ENRICHFIELD2
        ,STG.ENRICHFIELD3,       STG.APPREJBY,       STG.APPREJDATE,       STG.APPREJENTITYTYPE
        ,STG.RECSTATUSCODE,       null AS ENRICHFIELD4,       null AS ENRICHFIELD5,       null AS ENRICHFIELD6
        ,null AS ENRICHFIELD7,       null AS ENRICHFIELD8,       null AS ENRICHFIELD9,       null AS ENRICHFIELD10
        ,SUBSTR(STG.CONTACTNO,4,15) AS MOBILENO,       'N' AS ISDELETED,       'Y' AS FILEUPLOAD,       null AS APPREJREMARKS
        ,'971' AS MODCODE,       null AS LANDCODE,       null AS LANDAREACODE,       null AS VAREQTYPE
        ,null AS ACCOUNTNO,       NULL AS SEQNO,       STG.REQTYPE,       STG.EIDA as PRIMARYID
        ,STG.REQTYPE AS  ACTION,       STG.VANAME,       STG.PAYERID,       STG.VACUSTTYPE AS VAACCTYPE
        ,CUST.CUSTID,SUBSTR(STG.VAIBAN,8,23) AS BBAN
        ,VAC.VACHNACTSTATUS,VAC.VACHNACTSTATUSDESC
    FROM VAM_MIGVTSTPAYERUPL STG
    INNER JOIN VT_VAM.VTSTBATCHPRCSTRN TRN  ON TRN.BATCHRUNID = STG.BATCHRUNID AND TRN.CRTIP = 'MIGVAM'
    INNER JOIN VT_VAM.VTCMVAENTITY VA ON STG.VACUSTIDNT=VA.VACUSTIDNT --AND STG.VAACCID=VA.VAENTITYID
    INNER JOIN VT_VAM.VTSMVACCOUNTS VAC ON VAC.VAIBAN=STG.VAIBAN
    INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=VA.GCIFNO
--    INNER JOIN VT_COB.VTAMPCUSER USR ON STG.CRTBY_LOGINID=USR.LOGINID
    WHERE  STG.BATCHRUNID1 =IN_BATCHRUNID AND TRN.BATCHID IN(31,32,34) 
    AND MIGSTATUSCODE<>'F';

    UPDATE VT_VAM.VTSTPAYERUPL SET RECSTATUSCODE=CASE WHEN RECSTATUSCODE= 10 THEN 10 
    WHEN RECSTATUSCODE= 20 THEN 30
    WHEN RECSTATUSCODE= 30 THEN 20
    WHEN RECSTATUSCODE= 40 THEN 40 END,SEQNO=NULL
    WHERE REQIP='MIGVAM';   
    
--    UPDATE VT_VAM.VTSTPAYERUPL SET VAACCTYPE=u'P & C'
--    WHERE REQIP='MIGVAM' AND VAACCTYPE='B';  

UPDATE VT_VAM.VTSTPAYERUPL SET REQBY=102051,APPREJBY=102051 WHERE REQIP='MIGVAM';

/*VTCMBUDSETUP*/

   UPDATE VAM_MIGVTCMBUDSETUP SET BATCHRUNID1=IN_BATCHRUNID WHERE BATCHRUNID1 IS NULL AND MIGSTATUSCODE='P';

    SELECT COUNT(1) INTO v_TOTCNT FROM VAM_MIGVTCMBUDSETUP WHERE BATCHRUNID1=IN_BATCHRUNID ;

    IF v_TOTCNT > 0  THEN

    MERGE INTO VAM_MIGVTCMBUDSETUP STG USING 
    (
    SELECT A.CUSTID ,A.GCIFNO
    FROM VT_MIGRATION.STGVTCMCUST A
    GROUP BY A.CUSTID ,A.GCIFNO
    )A
    ON (A.CUSTID=STG.CUSTID)
    WHEN MATCHED THEN
    UPDATE 
    SET STG.GCIFNO=A.GCIFNO 
    WHERE
    STG.CUSTID IS NOT NULL;

    MERGE INTO VAM_MIGVTCMBUDSETUP STG USING 
    (
    SELECT B.CUSTID,B.GCIFNO
    FROM VT_COB.VTCMCUST B 
    GROUP BY B.CUSTID,B.GCIFNO
    )A
    ON (A.GCIFNO=STG.GCIFNO)
    WHEN MATCHED THEN
    UPDATE 
    SET STG.NEWCUSTID=A.CUSTID
    WHERE  STG.CUSTID IS NOT NULL ;


    INSERT INTO VT_VAM.VTCMBUDSETUP(
         BUDID,        			ENTITYID_IBAN,        	PARENTCODE,			CURRENCYCODE
        ,DENOMINATION,        	FREQUENCY,        		STARTDATE,			ENDDATE
        ,BUDTYPE,       	 	BUDLIMIT,        		REMARKS,			CHECKERREMARKS
        ,STATUS,        		ISDELETED,        						CRTIP
        ,        			APPIP,        							MDYIP
        ,CUSTID,        		RECURCYCLE,        		RECURSTARTDATE,		RECURENDDATE
        ,NOOFOCCURRENCE,        CARRYFORWARDFLAG,       ACCID,				ENTITYNAME
        ,BUDMOD,        		TOTAL_LIMIT,			AVAILABLE_LIMIT,	UTIL_LIMIT
        ,BUDREFNO,        		BUDGETDATAREFNO,        DURATIONPERCYCLE,	BUDGETSTATUSCODE
        ,NXTOCCUR,        		EARMARKAMT,				BUDREFID,			SUBBUDID
        ,THRESHOLDAMNTFLAG,     AMNTEXCEEDFLAG,			ADJUSTMENTAMT,		BATCHRUNID
        ,VACARDSUPLID,        	CRTDATE,				APPDATE,			MDYDATE
        ,CRTBY, APPBY, MDYBY)
    SELECT
         STG.BUDID,		        STG.ENTITYID_IBAN,		STG.PARENTCODE,		STG.CURRENCYCODE
        ,STG.DENOMINATION,		STG.FREQUENCY,			STG.STARTDATE,		STG.ENDDATE
        ,STG.BUDTYPE,			STG.BUDLIMIT,			STG.REMARKS,        STG.CHECKERREMARKS
        ,STG.STATUS,			STG.ISDELETED,						'MIGVAM'
        ,			STG.APPIP,							STG.MDYIP
        ,STG.NEWCUSTID,			STG.RECURCYCLE,			STG.RECURSTARTDATE,	STG.RECURENDDATE
        ,STG.NOOFOCCURRENCE,	STG.CARRYFORWARDFLAG,	STG.ACCID,			STG.ENTITYNAME
        ,STG.BUDMOD,        	STG.TOTAL_LIMIT,        STG.AVAILABLE_LIMIT,STG.UTIL_LIMIT
        ,STG.BUDREFNO,        	STG.BUDGETDATAREFNO,	STG.DURATIONPERCYCLE,STG.BUDGETSTATUSCODE
        ,STG.NXTOCCUR,        	STG.EARMARKAMT,			STG.BUDREFID,        STG.SUBBUDID
        ,STG.THRESHOLDAMNTFLAG,	STG.AMNTEXCEEDFLAG,		STG.ADJUSTMENTAMT,	STG.BATCHRUNID
        ,STG.VACARDSUPLID,		STG.CRTDATE,			STG.APPDATE,        STG.MDYDATE
        ,CRTBY, APPBY, MDYBY
    FROM VAM_MIGVTCMBUDSETUP STG
    WHERE  STG.BATCHRUNID1 =IN_BATCHRUNID AND STG.MIGSTATUSCODE<>'F';-- AND VAE.VAENTITYID IS NULL ;

    UPDATE VT_VAM.VTCMBUDSETUP SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';

    MERGE INTO VT_VAM.VTCMBUDSETUP STG USING 
    (
    SELECT VACUSTIDNT,ACCID
    FROM VTCMVAENTITY 
    GROUP BY VACUSTIDNT,ACCID
    )A
    ON (A.VACUSTIDNT=STG.ENTITYID_IBAN)
    WHEN MATCHED THEN
    UPDATE 
    SET STG.ACCID=A.ACCID
    WHERE STG.CRTIP='MIGVAM' AND STG.ENTITYID_IBAN NOT LIKE 'AE%' ;

    MERGE INTO VT_VAM.VTCMBUDSETUP STG USING 
    (
    SELECT VAIBAN,ACCID
    FROM VTSMVACCOUNTS 
    GROUP BY VAIBAN,ACCID
    )A
    ON (A.VAIBAN=STG.ENTITYID_IBAN)
    WHEN MATCHED THEN
    UPDATE 
    SET STG.ACCID=A.ACCID
    WHERE STG.CRTIP='MIGVAM' AND STG.ENTITYID_IBAN LIKE 'AE%' ;
    
    --NEWLY ADDED FOR HANDLING VACARDID ---ADDED ON 03 JUL 24 WITH PRABHA M
     MERGE INTO VT_VAM.VTCMBUDSETUP STG USING 
    (
    SELECT VACARDID,VAIBAN
    FROM VTSMVACARDS 
    GROUP BY VACARDID,VAIBAN
    )A
    ON (A.VAIBAN=STG.ENTITYID_IBAN)
    WHEN MATCHED THEN
    UPDATE 
    SET STG.VACARDID=A.VACARDID
    WHERE STG.CRTIP='MIGVAM'  ;

    ELSE

    v_ENDTIME := SYSDATE;

    END IF;

    /*BUDSETUPLOG*/
    UPDATE VAM_MIGVTCMBUDGETLOG SET BATCHRUNID1=IN_BATCHRUNID WHERE BATCHRUNID1 IS NULL AND MIGSTATUSCODE='P';

    SELECT COUNT(1) INTO v_TOTCNT FROM VAM_MIGVTCMBUDGETLOG WHERE BATCHRUNID1=IN_BATCHRUNID ;

    IF v_TOTCNT > 0  THEN

    MERGE INTO VAM_MIGVTCMBUDGETLOG STG USING 
    (
    SELECT A.CUSTID ,A.GCIFNO
    FROM VT_MIGRATION.STGVTCMCUST A
    GROUP BY A.CUSTID ,A.GCIFNO
    )A
    ON (A.CUSTID=STG.CUSTID)
    WHEN MATCHED THEN
    UPDATE 
    SET STG.GCIFNO=A.GCIFNO 
    WHERE
    STG.CUSTID IS NOT NULL;

    MERGE INTO VAM_MIGVTCMBUDGETLOG STG USING 
    (
    SELECT B.CUSTID,B.GCIFNO
    FROM VT_COB.VTCMCUST B 
    GROUP BY B.CUSTID,B.GCIFNO
    )A
    ON (A.GCIFNO=STG.GCIFNO)
    WHEN MATCHED THEN
    UPDATE 
    SET STG.NEWCUSTID=A.CUSTID
    WHERE  STG.CUSTID IS NOT NULL ;


    INSERT INTO VT_VAM.VTCMBUDGETLOG
         (BUDLOGID,BUDID,ENTITYID_IBAN,PARENTCODE,CURRENCYCODE,DENOMINATION,FREQUENCY,STARTDATE,ENDDATE,BUDTYPE,BUDLIMIT,REMARKS,CHECKERREMARKS,STATUS,
    ISDELETED,CRTBY,CRTDATE,CRTIP,APPBY,APPDATE,APPIP,MDYBY,MDYDATE,MDYIP,CUSTID,RECURCYCLE,RECURSTARTDATE,RECURENDDATE,NOOFOCCURRENCE,
    CARRYFORWARDFLAG,ACCID,ENTITYNAME,BUDMOD,BUDREFNO,BUDGETDATAREFNO,TOTALAMT,AVAILAMT,UTILAMT,CARRYAMT,ADJUSTMENTAMT,EARMARKAMT)

    SELECT
         BUDLOGID,BUDID,ENTITYID_IBAN,PARENTCODE,CURRENCYCODE,DENOMINATION,FREQUENCY,STARTDATE,ENDDATE,BUDTYPE,BUDLIMIT,REMARKS,CHECKERREMARKS,STATUS,
    ISDELETED,CRTBY,CRTDATE,'MIGVAM',APPBY,APPDATE,APPIP,MDYBY,MDYDATE,MDYIP,NEWCUSTID,RECURCYCLE,RECURSTARTDATE,RECURENDDATE,NOOFOCCURRENCE,
    CARRYFORWARDFLAG,ACCID,ENTITYNAME,BUDMOD,BUDREFNO,BUDGETDATAREFNO,TOTALAMT,AVAILAMT,UTILAMT,CARRYAMT,ADJUSTMENTAMT,EARMARKAMT

    FROM VAM_MIGVTCMBUDGETLOG STG
    WHERE  STG.BATCHRUNID1 =IN_BATCHRUNID AND STG.MIGSTATUSCODE<>'F';-- AND VAE.VAENTITYID IS NULL ;

    UPDATE VT_VAM.VTCMBUDGETLOG SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';

    MERGE INTO VT_VAM.VTCMBUDGETLOG STG USING 
    (
    SELECT VACUSTIDNT,ACCID
    FROM VTCMVAENTITY 
    GROUP BY VACUSTIDNT,ACCID
    )A
    ON (A.VACUSTIDNT=STG.ENTITYID_IBAN)
    WHEN MATCHED THEN
    UPDATE 
    SET STG.ACCID=A.ACCID
    WHERE STG.CRTIP='MIGVAM' AND STG.ENTITYID_IBAN NOT LIKE 'AE%' ;

    MERGE INTO VT_VAM.VTCMBUDGETLOG STG USING 
    (
    SELECT VAIBAN,ACCID
    FROM VTSMVACCOUNTS 
    GROUP BY VAIBAN,ACCID
    )A
    ON (A.VAIBAN=STG.ENTITYID_IBAN)
    WHEN MATCHED THEN
    UPDATE 
    SET STG.ACCID=A.ACCID
    WHERE STG.CRTIP='MIGVAM' AND STG.ENTITYID_IBAN LIKE 'AE%' ;

    ELSE

    v_ENDTIME := SYSDATE;

    END IF;


    /*BUDSETUPLOG*/
     UPDATE VAM_MIGVTSMVACARDS SET BATCHRUNID1=IN_BATCHRUNID WHERE BATCHRUNID1 IS NULL AND MIGSTATUSCODE='P';

    SELECT COUNT(1) INTO v_TOTCNT FROM VAM_MIGVTSMVACARDS WHERE BATCHRUNID1=IN_BATCHRUNID ;

    IF v_TOTCNT > 0  THEN


--UPDATE VAM_MIGVTSMVACARDS STG SET STG.MIGSTATUSCODE='F', STG.MIGSTATUSDESC = 'ACCOUNT NUMBER IS NOT AVAILABLE IN GCN'
-- WHERE NOT EXISTS (SELECT 1 FROM VT_COB.VTCMCUSTACC A WHERE A.ACCNO=STG.ACCNO) AND BATCHRUNID1=IN_BATCHRUNID;

--UPDATE VAM_MIGVTSMVACARDS STG SET STG.MIGSTATUSCODE='F', STG.MIGSTATUSDESC = 'ACCOUNT NUMBER IS NOT AVAILABLE IN GCN'
-- WHERE ACCNO NOT IN (SELECT ACCNO FROM VT_COB.VTCMCUSTACC ) AND BATCHRUNID1=IN_BATCHRUNID ;

    UPDATE VAM_MIGVTSMVACARDS
    SET MIGSTATUSCODE='S', MIGSTATUSDESC = 'Validation Successfull'
    WHERE BATCHRUNID1=IN_BATCHRUNID AND MIGSTATUSCODE='P';


     INSERT INTO VT_VAM.VTSMVACARDS
     (VACARDID,         	VACARDNO,         	ACCID
    ,VACUSTIDNT,        VAIBANID,         	VAIBAN,				FNAME
    ,LNAME,         	MNAME,         		DOB,				EMAIL
    ,MOBILENO,         	ADDLINE1,         	ADDLINE2,			ADDLINE3
    ,ADDLINE4,         	CITY,         		VALIDFROM,			EXPIRYMONTHS
    ,DAILYTXNCOUNT,		KCPDETAILTYPE,		CARDEXPIRYDATE,		STATUS
    ,MKRREMARKS,		APRREMARKS,         CURRSTATUSCODE,		CURRSTATUSDESC
    ,				CRTDATE,			CRTIP
    ,APPDATE,			APPIP,								MDYDATE
    ,MDYIP,				CUSTID,				MOBCODE,			LIMITTYPE
    ,RENEWALFLAG,		READSTATUSCODE,		TRANSACTIONID,		READEXEID
    ,BATCHRUNID,		VACARDSUPLID,		RENEWALDATE,		APPENTITYTYPE
    ,BLOCKEDDATE,		CLOSEDEODDATE,		EXPIREDALERTFLAG,	NEAREXPIREDALERTFLAG
    ,MASKCARDNO,		REQUESTTYPE,		WFSTATUS,			RENEWALCHECKERREMARKS
    ,OLDCARDNO,         KCPTYPE,			PERTXNLIMIT,		DAILYTXNLIMIT
    ,CARDLIMIT,         BLOCKREMARKS,		MODULEFLAG,         RECORDTYPE
--    ,CRTBY, APPBY, MDYBY
    )
    SELECT
    VACARDID,         	VACARDNO,         	ACCID
    ,VACUSTIDNT,        VAIBANID,         	VAIBAN,				FNAME
    ,LNAME,         	MNAME,         		STG.DOB,				STG.EMAIL
    ,STG.MOBILENO,         	ADDLINE1,         	ADDLINE2,			ADDLINE3
    ,ADDLINE4,         	STG.CITY,         		VALIDFROM,			EXPIRYMONTHS
    ,DAILYTXNCOUNT,		KCPDETAILTYPE,		CARDEXPIRYDATE,		STG.STATUS
    ,MKRREMARKS,		APRREMARKS,         CURRSTATUSCODE,		CURRSTATUSDESC
    ,				STG.CRTDATE,			'MIGVAM'
    ,STG.APPDATE,			STG.APPIP,								STG.MDYDATE
    ,STG.MDYIP,				CUSTID,				STG.MOBCODE,			STG.LIMITTYPE
    ,RENEWALFLAG,		READSTATUSCODE,		STG.TRANSACTIONID,		NULL AS READEXEID
    ,STG.BATCHRUNID,		VACARDSUPLID,		RENEWALDATE,		APPENTITYTYPE
    ,BLOCKEDDATE,		CLOSEDEODDATE,		EXPIREDALERTFLAG,	NEAREXPIREDALERTFLAG
    ,MASKCARDNO,		REQUESTTYPE,		'' WFSTATUS,			null AS RENEWALCHECKERREMARKS
    ,null AS OLDCARDNO,         KCPDETAILTYPE AS KCPTYPE,			PERTXNLIMIT,		DAILYTXNLIMIT
    ,CARDLIMIT,         null AS BLOCKREMARKS,		null AS MODULEFLAG,         'Add' AS RECORDTYPE
--    ,MAUSR.USERID,APUSR.USERID,MDUSR.USERID
    FROM VAM_MIGVTSMVACARDS STG
    WHERE BATCHRUNID1=IN_BATCHRUNID AND MIGSTATUSCODE<>'F' AND STG.CURRSTATUSCODE  IN  (30,50); -- To move only the Active and Expired Cards Alone

    MERGE INTO VT_VAM.VTSMVACARDS V USING
    (
    SELECT M.VACARDID,C.CUSTID
    FROM VAM_MIGVTSMVACARDS M
    INNER JOIN VT_COB.VTCMCUST C  ON C.GCIFNO = M.GCIFNO
    WHERE BATCHRUNID1=IN_BATCHRUNID AND M.MIGSTATUSCODE<>'F' AND M.CURRSTATUSCODE IN (30,50)
     GROUP BY M.VACARDID,C.CUSTID
    )A ON (A.VACARDID = V.VACARDID)
    WHEN MATCHED THEN 
    UPDATE 
    SET V.CUSTID = A.CUSTID
    WHERE V.CRTIP='MIGVAM';

    MERGE INTO VT_VAM.VTSMVACARDS STG USING 
    (
    SELECT VAIBAN,ACCID
    FROM VTSMVACCOUNTS
    GROUP BY VAIBAN,ACCID
    )A
    ON (A.VAIBAN=STG.VAIBAN)
    WHEN MATCHED THEN
    UPDATE 
    SET STG.ACCID=A.ACCID
    WHERE STG.CRTIP='MIGVAM' ;

UPDATE VT_VAM.VTSMVACARDS SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';
      
MERGE INTO VTSMVACARDS STG USING
(
SELECT CRDNO,VACARDID,ENCCRDNO5 FROM VT_MIGRATION.STGVTSMVACARDS
GROUP BY CRDNO,VACARDID,ENCCRDNO5)A
ON (A.VACARDID=STG.VACARDID)
WHEN MATCHED  THEN
UPDATE SET STG.VACARDNO=A.ENCCRDNO5, STG.PLAINCARDNO=A.CRDNO
WHERE STG.CRTIP='MIGVAM';

    ELSE

    v_ENDTIME := SYSDATE;

    END IF;


UPDATE VAM_MIGVTSTVACARDSUPL SET BATCHRUNID1=IN_BATCHRUNID WHERE BATCHRUNID1 IS NULL AND MIGSTATUSCODE='P';

    SELECT COUNT(1) INTO v_TOTCNT FROM VAM_MIGVTSTVACARDSUPL WHERE BATCHRUNID1=IN_BATCHRUNID ;

    IF v_TOTCNT > 0  THEN

--    GCIFID AVAILABLE IN CUSTOMER INFORMATION TABLE CHECK


    UPDATE VAM_MIGVTSTVACARDSUPL
    SET MIGSTATUSCODE='S', MIGSTATUSDESC = 'Validation Successfull'
    WHERE BATCHRUNID1=IN_BATCHRUNID AND MIGSTATUSCODE='P';


     INSERT INTO VT_VAM.VTSTVACARDSUPL
     (VACARDSUPLID,         BATCHRUNID,         VACUSTIDNT,         FNAME
,LNAME,         MNAME,         DOB,         EMAIL
,MOBILENO,         ADDLINE1,         ADDLINE2,         ADDLINE3
,ADDLINE4,         CITY,         VALIDFROM,         EXPIRYMONTHS
,CARDUSAGETYPE,         FREQUENCY,         BUDSTARTDATE,         BUDENDDATE
,NOOFRECUR,         BUDAMOUNT,         CARDLIMIT,         DAILYTXNLIMIT
,PERTXNLIMIT,         DAILYTXNCOUNT,         CONTACTPERSON,         CONTACTEMAIL
,CONTACTMOBILE,         MKRREMARKS,         STATUSCODE,         STATUSDESC
,         CRTDATE,         CRTIP,         RECSEQ
,LIMITTYPE,         RECSTATUSCODE,         MOBCODE,         CONTACTCNTRYCODE
,SEQNO,         CARDBALANCETYPE,         APPREJBY,         APPREJDATE
--    ,CRTBY
    )
    SELECT
    VACARDSUPLID,         STG.BATCHRUNID,         STG.VACUSTIDNT,         FNAME
,LNAME,         MNAME,         STG.DOB,         STG.EMAIL
,STG.MOBILENO,         ADDLINE1,         ADDLINE2,         ADDLINE3
,ADDLINE4,         STG.CITY,         VALIDFROM,         EXPIRYMONTHS
,CARDUSAGETYPE,         FREQUENCY,         BUDSTARTDATE,         BUDENDDATE
,NOOFRECUR,         BUDAMOUNT,         CARDLIMIT,         DAILYTXNLIMIT
,PERTXNLIMIT,         DAILYTXNCOUNT,         CONTACTPERSON,         CONTACTEMAIL
,CONTACTMOBILE,         MKRREMARKS,         STG.STATUSCODE,         STG.STATUSDESC
,         STG.CRTDATE,         'MIGVAM',        NULL AS RECSEQ
,LIMITTYPE,         RECSTATUSCODE,         STG.MOBCODE,         CONTACTCNTRYCODE
,NULL AS SEQNO,         '' CARDBALANCETYPE,         NULL AS APPREJBY,      NULL AS APPREJDATE
    --,MAUSR.USERID
    FROM VAM_MIGVTSTVACARDSUPL STG
     INNER JOIN VT_VAM.VTSTBATCHPRCSTRN TRN ON TRN.BATCHRUNID =STG.BATCHRUNID  
--    LEFT JOIN VT_COB.VTAMPCUSER MAUSR ON STG.CRTBY_LOGINID=MAUSR.LOGINID
    WHERE BATCHRUNID1=IN_BATCHRUNID AND TRN.BATCHID=35 AND TRN.CRTIP='MIGVAM' AND MIGSTATUSCODE<>'F';



  UPDATE VT_VAM.VTSTVACARDSUPL SET RECSTATUSCODE=CASE WHEN RECSTATUSCODE= 10 THEN 10 
    WHEN RECSTATUSCODE= 20 THEN 30
    WHEN RECSTATUSCODE= 30 THEN 20
    WHEN RECSTATUSCODE= 40 THEN 40 END,
    CRTBY=102051,    APPREJBY=102051
    WHERE CRTIP='MIGVAM';



    ELSE

    v_ENDTIME := SYSDATE;

    END IF;



/*VTPTTXN*/
    UPDATE VAM_MIGVTPTTXN SET BATCHRUNID1=IN_BATCHRUNID WHERE BATCHRUNID1 IS NULL AND MIGSTATUSCODE='P';

UPDATE VAM_MIGVTPTTXN SET MIGSTATUSCODE='F',MIGSTATUSDESC='TXN REFNO IS ALREADY AVAILABLE' WHERE
PAYTRNREFNO IN (SELECT PAYTRNREFNO FROM VT_VAM.VTPTTXN);

        UPDATE VAM_MIGVTPTTXN
    SET MIGSTATUSCODE='S', MIGSTATUSDESC = 'Validation Successfull'
    WHERE BATCHRUNID1=IN_BATCHRUNID AND MIGSTATUSCODE='P';

    MERGE INTO VAM_MIGVTPTTXN STG USING 
    (
    SELECT A.CUSTID ,A.GCIFNO
    FROM VT_MIGRATION.STGVTCMCUST A
    GROUP BY A.CUSTID ,A.GCIFNO
    )A
    ON (A.CUSTID=STG.CUSTID)
    WHEN MATCHED THEN
    UPDATE 
    SET STG.GCIFNO=A.GCIFNO 
    WHERE
    STG.CUSTID IS NOT NULL;

    MERGE INTO VAM_MIGVTPTTXN STG USING 
    (
    SELECT B.CUSTID,B.GCIFNO
    FROM VT_COB.VTCMCUST B 
    GROUP BY B.CUSTID,B.GCIFNO
    )A
    ON (A.GCIFNO=STG.GCIFNO)
    WHEN MATCHED THEN
    UPDATE 
    SET STG.NEWCUSTID=A.CUSTID
    WHERE  STG.CUSTID IS NOT NULL ;


INSERT INTO VT_VAM.VTPTTXN
        (PAYTRNREFNO,        	REQPAYREFNO,        	PAYTRNINITDATE
        ,BULKUPLRECSEQ,        	TXNDATE,        		ACCID,        			DRACCNO
        ,DRTXNAMOUNT,        	DRCURRENCYCODE,     	DRDENOMINATION,			DEALCODE
        ,DRACCNAME,        		DRIBAN,        			BENINITTYPE,        	BENID
        ,CRACCNO,        		CRTXNAMOUNT,        	CRCURRENCYCODE,			CRDENOMINATION
        ,BENNAME,        		BENEMAIL,        		BENMOBNO,				BENBICCODE
        ,IDENTIFIER,        	CLEARINGCODE,       	BENCOUNTRYID,			COUNTRYCODE3
        ,BENBANKNAME,        	BENBANKADD,        		ISSAVEBEN,        		TXNAMOUNT
        ,CURRENCYCODE,        	DENOMINATION,       	PAYCODEID,        		PAYMENTPURPCODE
        ,PAYDTLS,        		CUSTTXNREFNO,       	CHRGCODE,        		REQDEXCTNDT
        ,ISSAVESTANDINSTR,      ADDNTLEMAIL,        	PAYADVTYPE,        		PAYADVDTLS
        ,UPLOADPAYADVFILE,      CHREFNO,        		DRACCTYPE,        		TXNTYPE
        ,VAT,        			CHRGAMT,        		CHRGTYPE,        		INITCHN
        ,RECURID,        		BATCHRUNID,        		RSSTATUSCODE,       	RSSTATUSDESC
        ,RSSEVERITY,        	RSSOURCE,        		RSBILLPAIDSTATUS,		INSEQ
        ,LV1GROUPCODE,        	LV2GROUPCODE,       	LV3GROUPCODE,       	LV4GROUPCODE
        ,LV5GROUPCODE,        	LV1APPSTATUS,       	LV2APPSTATUS,        	LV3APPSTATUS
        ,LV4APPSTATUS,        	LV5APPSTATUS,       	LV1APPBY,        		LV2APPBY
        ,LV3APPBY,        		LV4APPBY,        		LV5APPBY,        		LV1APPDATE
        ,LV2APPDATE,        	LV3APPDATE,        		LV4APPDATE,        		LV5APPDATE
        ,AUTOAPPFLAG,        	AUTOAPPDATE,        	AUTHDTLSID,        		LV1APPREMARKS
        ,LV2APPREMARKS,        	LV3APPREMARKS,      	LV4APPREMARKS,        	LV5APPREMARKS
        ,CHNREFNO,        		BENADV,        			PAYDATE,        		BENBANKCODE
        ,BENBANKLOC,        	PRDCODE,        		BENADDR1,        		BENADDR2
        ,BENADDR3,        		BENADDR4,        		CURRSTATUSCODE
        ,CURRSTATUSDESC,        REMARKS,        		CHECKERREMARKS,        	STATUS
        ,ISDELETED,        		        			CRTDATE,        		CRTIP
        ,        			APPDATE,        		APPIP
        ,MDYDATE,        		MDYIP,        			PAYMETHODID,        	FAVOURITE
        ,THREADID,        		PAYTYPE,        		COREJOURNAL,        	TRNPROCESS
        ,TRNPROCESSTYPE,        BENADVSTATUS,       	BENADVDATE
        ,BATCHREFNO,        	DEBITTYPE,        		RETRYCOUNT,        		LASTRETRYDATE
        ,BNKCHRGAMT,        	BNKVATAMT,        		TRNCHRGAMT,        		TRNVATAMT
        ,BNKCHRGLOGID,        	TRNCHRGLOGID,       	DRACCTYPEFLAG,        	CRACCTYPEFLAG
        ,COUNTRYCODE2,        	VERIFIERREMARKS,    	VERIFIERFLAG,        	VERIFIEDDATE
        ,VERIFIEDBY,        	DRCOUNTRYCODE2,     	CANREQBY,        		CANREQDATE
        ,CANREQREMARKS,        	CANAPPBY,        		CANAPPDATE,        		CANAPPREMARKS
        ,BENBRANCHNAME,        	CANSOLEAPPFLAG,     	DRBRANCHCODE,        	BENCOUNTRYCODE
        ,MAILREF,        		EXCHANGERATE,       	CUSTID,        			CBERRORCODE
        ,CBERRORDESC,        	SIERRORCODE,        	SIERRORDESC,        	CHRGCURRENCYCODE
        ,CHRGDENOMINATION,      CURRTXNTYPE,        	ACCBAL,        			CRETEID
        ,CBSREFNO,        		PREVIOUSREFNO,      	EARMARKREFNO,        	NARRATION
        ,REMBNKINFOLINE1,       REMBNKINFOLINE2,    	REMBNKINFOLINE3,        REMBNKINFOLINE4
        ,REMBNKINFOLINE5,       REMBNKINFOLINE6,    	NEGOTIATEDRATE,        	RATETYPE
        ,VALUEDATE,        		STMTSEQUENCE,       	STMTENTRYID,        	SEGMENT
        ,REQUESTID,        		REVERSALINDICATOR,  	ENTITYID,        		BUDID
        ,OWNNARRATION,        	CR21NARRATION,      	SUBBUDID,        		ADJUSTMENTAMT
        ,CBSTATUSCODE,        	MERCHANTCATEGORYCODE	,VACARDID,        		TXNNARRATION
        ,APICALLSTATUS,        	APICALLBAKDATE,     	READEXEID,        		READSTATUSCODE
        ,APIRETRYCOUNT,        	POSCHNCODE
--        ,CRTBY, APPBY, MDYBY
        )
SELECT
      STG.PAYTRNREFNO,        STG.REQPAYREFNO,		STG.PAYTRNINITDATE
        ,STG.BULKUPLRECSEQ,     STG.TXNDATE,        	STG.ACCID,				STG.DRACCNO
        ,STG.DRTXNAMOUNT,       STG.DRCURRENCYCODE,		STG.DRDENOMINATION,		STG.DEALCODE
        ,STG.DRACCNAME,        	STG.DRIBAN,        		STG.BENINITTYPE,        STG.BENID
        ,STG.CRACCNO,        	STG.CRTXNAMOUNT,		STG.CRCURRENCYCODE,		STG.CRDENOMINATION
        ,STG.BENNAME,        	STG.BENEMAIL,			STG.BENMOBNO,			STG.BENBICCODE
        ,STG.IDENTIFIER,        STG.CLEARINGCODE,		STG.BENCOUNTRYID,		STG.COUNTRYCODE3
        ,STG.BENBANKNAME,       STG.BENBANKADD,			STG.ISSAVEBEN,			STG.TXNAMOUNT
        ,STG.CURRENCYCODE,      STG.DENOMINATION,		STG.PAYCODEID,			STG.PAYMENTPURPCODE
        ,STG.PAYDTLS,        	STG.CUSTTXNREFNO,		STG.CHRGCODE,			STG.REQDEXCTNDT
        ,STG.ISSAVESTANDINSTR,	STG.ADDNTLEMAIL,		STG.PAYADVTYPE,			STG.PAYADVDTLS
        ,STG.UPLOADPAYADVFILE,	STG.CHREFNO,        	STG.DRACCTYPE,			STG.TXNTYPE
        ,STG.VAT,        		STG.CHRGAMT,        	STG.CHRGTYPE,			STG.INITCHN
        ,STG.RECURID,        	STG.BATCHRUNID,			STG.RSSTATUSCODE,		STG.RSSTATUSDESC
        ,STG.RSSEVERITY,        STG.RSSOURCE,			STG.RSBILLPAIDSTATUS,	STG.INSEQ
        ,STG.LV1GROUPCODE,      STG.LV2GROUPCODE,		STG.LV3GROUPCODE,		STG.LV4GROUPCODE
        ,STG.LV5GROUPCODE,      STG.LV1APPSTATUS,   	STG.LV2APPSTATUS,		STG.LV3APPSTATUS
        ,STG.LV4APPSTATUS,      STG.LV5APPSTATUS,   	STG.LV1APPBY,			STG.LV2APPBY
        ,STG.LV3APPBY,        	STG.LV4APPBY,       	STG.LV5APPBY,        	STG.LV1APPDATE
        ,STG.LV2APPDATE,        STG.LV3APPDATE,			STG.LV4APPDATE,        	STG.LV5APPDATE
        ,STG.AUTOAPPFLAG,       STG.AUTOAPPDATE,		STG.AUTHDTLSID,        	STG.LV1APPREMARKS
        ,STG.LV2APPREMARKS,		STG.LV3APPREMARKS,		STG.LV4APPREMARKS,      STG.LV5APPREMARKS
        ,STG.CHNREFNO,        	STG.BENADV,        		STG.PAYDATE,        	STG.BENBANKCODE
        ,STG.BENBANKLOC,        STG.PRDCODE,        	STG.BENADDR1,        	STG.BENADDR2
        ,STG.BENADDR3,        	STG.BENADDR4,       	STG.CURRSTATUSCODE
        ,STG.CURRSTATUSDESC,	STG.REMARKS,        	STG.CHECKERREMARKS,     STG.STATUS
        ,STG.ISDELETED,			        		STG.CRTDATE,        	'MIGVAM' AS CRTIP
        ,				STG.APPDATE,        	STG.APPIP
        ,STG.MDYDATE,			STG.MDYIP,        		STG.PAYMETHODID,        STG.FAVOURITE
        ,STG.THREADID,			STG.PAYTYPE,        	STG.COREJOURNAL,        STG.TRNPROCESS
        ,STG.TRNPROCESSTYPE,	STG.BENADVSTATUS,		STG.BENADVDATE
        ,STG.BATCHREFNO,        STG.DEBITTYPE,			STG.RETRYCOUNT,        	TO_DATE( SUBSTR(STG.LASTRETRYDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )
        ,STG.BNKCHRGAMT,        STG.BNKVATAMT,			STG.TRNCHRGAMT,        	STG.TRNVATAMT
        ,STG.BNKCHRGLOGID,      STG.TRNCHRGLOGID,		STG.DRACCTYPEFLAG,      STG.CRACCTYPEFLAG
        ,STG.COUNTRYCODE2,      STG.VERIFIERREMARKS,	STG.VERIFIERFLAG,       STG.VERIFIEDDATE
        ,STG.VERIFIEDBY,        STG.DRCOUNTRYCODE2,		STG.CANREQBY,        	STG.CANREQDATE
        ,STG.CANREQREMARKS,     STG.CANAPPBY,			STG.CANAPPDATE,        	STG.CANAPPREMARKS
        ,STG.BENBRANCHNAME,     STG.CANSOLEAPPFLAG,		STG.DRBRANCHCODE,       STG.BENCOUNTRYCODE
        ,STG.MAILREF,			STG.EXCHANGERATE,		STG.NEWCUSTID,        		STG.CBERRORCODE
        ,STG.CBERRORDESC,		STG.SIERRORCODE,		STG.SIERRORDESC,        STG.CHRGCURRENCYCODE
        ,STG.CHRGDENOMINATION,	STG.CURRTXNTYPE,		STG.ACCBAL,        		STG.CRETEID
        ,STG.CBSREFNO,			STG.PREVIOUSREFNO,		STG.EARMARKREFNO,       STG.NARRATION
        ,STG.REMBNKINFOLINE1,	STG.REMBNKINFOLINE2,	STG.REMBNKINFOLINE3,    STG.REMBNKINFOLINE4
        ,STG.REMBNKINFOLINE5,	STG.REMBNKINFOLINE6,	STG.NEGOTIATEDRATE,     STG.RATETYPE
        ,STG.VALUEDATE,			STG.STMTSEQUENCE,		STG.STMTENTRYID,        STG.SEGMENT
        ,STG.REQUESTID,			STG.REVERSALINDICATOR,	STG.ENTITYID,        	STG.BUDID
        ,STG.OWNNARRATION,		STG.CR21NARRATION,		STG.SUBBUDID,        	STG.ADJUSTMENTAMT
        ,STG.CBSTATUSCODE,		STG.MERCHANTCATEGORYCODE,STG.VACARDID,          STG.TXNNARRATION
        ,null AS APICALLSTATUS,	null AS APICALLBAKDATE,	null AS READEXEID,       null AS READSTATUSCODE
        ,null AS APIRETRYCOUNT,	null AS POSCHNCODE
--        ,MAUSR.USERID,APUSR.USERID,MDUSR.USERID
        FROM VAM_MIGVTPTTXN STG
        WHERE BATCHRUNID1=IN_BATCHRUNID AND MIGSTATUSCODE<>'F'-- AND STG.GCIFNO='ADNOCIHB' 
        GROUP BY 
        STG.PAYTRNREFNO,        STG.REQPAYREFNO,		STG.PAYTRNINITDATE
        ,STG.BULKUPLRECSEQ,     STG.TXNDATE,        	STG.ACCID,				STG.DRACCNO
        ,STG.DRTXNAMOUNT,       STG.DRCURRENCYCODE,		STG.DRDENOMINATION,		STG.DEALCODE
        ,STG.DRACCNAME,        	STG.DRIBAN,        		STG.BENINITTYPE,        STG.BENID
        ,STG.CRACCNO,        	STG.CRTXNAMOUNT,		STG.CRCURRENCYCODE,		STG.CRDENOMINATION
        ,STG.BENNAME,        	STG.BENEMAIL,			STG.BENMOBNO,			STG.BENBICCODE
        ,STG.IDENTIFIER,        STG.CLEARINGCODE,		STG.BENCOUNTRYID,		STG.COUNTRYCODE3
        ,STG.BENBANKNAME,       STG.BENBANKADD,			STG.ISSAVEBEN,			STG.TXNAMOUNT
        ,STG.CURRENCYCODE,      STG.DENOMINATION,		STG.PAYCODEID,			STG.PAYMENTPURPCODE
        ,STG.PAYDTLS,        	STG.CUSTTXNREFNO,		STG.CHRGCODE,			STG.REQDEXCTNDT
        ,STG.ISSAVESTANDINSTR,	STG.ADDNTLEMAIL,		STG.PAYADVTYPE,			STG.PAYADVDTLS
        ,STG.UPLOADPAYADVFILE,	STG.CHREFNO,        	STG.DRACCTYPE,			STG.TXNTYPE
        ,STG.VAT,        		STG.CHRGAMT,        	STG.CHRGTYPE,			STG.INITCHN
        ,STG.RECURID,        	STG.BATCHRUNID,			STG.RSSTATUSCODE,		STG.RSSTATUSDESC
        ,STG.RSSEVERITY,        STG.RSSOURCE,			STG.RSBILLPAIDSTATUS,	STG.INSEQ
        ,STG.LV1GROUPCODE,      STG.LV2GROUPCODE,		STG.LV3GROUPCODE,		STG.LV4GROUPCODE
        ,STG.LV5GROUPCODE,      STG.LV1APPSTATUS,   	STG.LV2APPSTATUS,		STG.LV3APPSTATUS
        ,STG.LV4APPSTATUS,      STG.LV5APPSTATUS,   	STG.LV1APPBY,			STG.LV2APPBY
        ,STG.LV3APPBY,        	STG.LV4APPBY,       	STG.LV5APPBY,        	STG.LV1APPDATE
        ,STG.LV2APPDATE,        STG.LV3APPDATE,			STG.LV4APPDATE,        	STG.LV5APPDATE
        ,STG.AUTOAPPFLAG,       STG.AUTOAPPDATE,		STG.AUTHDTLSID,        	STG.LV1APPREMARKS
        ,STG.LV2APPREMARKS,		STG.LV3APPREMARKS,		STG.LV4APPREMARKS,      STG.LV5APPREMARKS
        ,STG.CHNREFNO,        	STG.BENADV,        		STG.PAYDATE,        	STG.BENBANKCODE
        ,STG.BENBANKLOC,        STG.PRDCODE,        	STG.BENADDR1,        	STG.BENADDR2
        ,STG.BENADDR3,        	STG.BENADDR4,       	STG.CURRSTATUSCODE
        ,STG.CURRSTATUSDESC,	STG.REMARKS,        	STG.CHECKERREMARKS,     STG.STATUS
        ,STG.ISDELETED,			        		STG.CRTDATE,        	'MIGVAM'
        ,				STG.APPDATE,        	STG.APPIP
        ,STG.MDYDATE,			STG.MDYIP,        		STG.PAYMETHODID,        STG.FAVOURITE
        ,STG.THREADID,			STG.PAYTYPE,        	STG.COREJOURNAL,        STG.TRNPROCESS
        ,STG.TRNPROCESSTYPE,	STG.BENADVSTATUS,		STG.BENADVDATE
        ,STG.BATCHREFNO,        STG.DEBITTYPE,			STG.RETRYCOUNT,        	TO_DATE( SUBSTR(STG.LASTRETRYDATE, 1, 19), 'YYYY-MM-DD HH24:MI:SS' )
        ,STG.BNKCHRGAMT,        STG.BNKVATAMT,			STG.TRNCHRGAMT,        	STG.TRNVATAMT
        ,STG.BNKCHRGLOGID,      STG.TRNCHRGLOGID,		STG.DRACCTYPEFLAG,      STG.CRACCTYPEFLAG
        ,STG.COUNTRYCODE2,      STG.VERIFIERREMARKS,	STG.VERIFIERFLAG,       STG.VERIFIEDDATE
        ,STG.VERIFIEDBY,        STG.DRCOUNTRYCODE2,		STG.CANREQBY,        	STG.CANREQDATE
        ,STG.CANREQREMARKS,     STG.CANAPPBY,			STG.CANAPPDATE,        	STG.CANAPPREMARKS
        ,STG.BENBRANCHNAME,     STG.CANSOLEAPPFLAG,		STG.DRBRANCHCODE,       STG.BENCOUNTRYCODE
        ,STG.MAILREF,			STG.EXCHANGERATE,		STG.NEWCUSTID,        		STG.CBERRORCODE
        ,STG.CBERRORDESC,		STG.SIERRORCODE,		STG.SIERRORDESC,        STG.CHRGCURRENCYCODE
        ,STG.CHRGDENOMINATION,	STG.CURRTXNTYPE,		STG.ACCBAL,        		STG.CRETEID
        ,STG.CBSREFNO,			STG.PREVIOUSREFNO,		STG.EARMARKREFNO,       STG.NARRATION
        ,STG.REMBNKINFOLINE1,	STG.REMBNKINFOLINE2,	STG.REMBNKINFOLINE3,    STG.REMBNKINFOLINE4
        ,STG.REMBNKINFOLINE5,	STG.REMBNKINFOLINE6,	STG.NEGOTIATEDRATE,     STG.RATETYPE
        ,STG.VALUEDATE,			STG.STMTSEQUENCE,		STG.STMTENTRYID,        STG.SEGMENT
        ,STG.REQUESTID,			STG.REVERSALINDICATOR,	STG.ENTITYID,        	STG.BUDID
        ,STG.OWNNARRATION,		STG.CR21NARRATION,		STG.SUBBUDID,        	STG.ADJUSTMENTAMT
        ,STG.CBSTATUSCODE,		STG.MERCHANTCATEGORYCODE,STG.VACARDID,          STG.TXNNARRATION
        ,'';

    MERGE INTO VT_VAM.VTPTTXN STG USING 
    (
    SELECT VAIBAN,ACCID,CUSTID
    FROM VTSMVACCOUNTS
    GROUP BY VAIBAN,ACCID,CUSTID
    )A
    ON (A.VAIBAN=STG.DRACCNO)
    WHEN MATCHED THEN
    UPDATE 
    SET STG.ACCID=A.ACCID,STG.CUSTID=A.CUSTID
    WHERE STG.CRTIP='MIGVAM' AND STG.CRACCNO IS NULL AND STG.BATCHRUNID IS NULL ;

    MERGE INTO VT_VAM.VTPTTXN STG USING 
    (
    SELECT VAIBAN,ACCID,CUSTID
    FROM VTSMVACCOUNTS
    GROUP BY VAIBAN,ACCID,CUSTID
    )A
    ON (A.VAIBAN=STG.CRACCNO)
    WHEN MATCHED THEN
    UPDATE 
    SET STG.ACCID=A.ACCID,STG.CUSTID=A.CUSTID
    WHERE STG.CRTIP='MIGVAM' AND STG.DRACCNO IS NULL AND STG.BATCHRUNID IS NULL ;

    UPDATE VT_VAM.VTPTTXN SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';

/*VTPTTXNEXP*/
    UPDATE VAM_MIGVTPTTXNEXP SET BATCHRUNID1=IN_BATCHRUNID WHERE BATCHRUNID1 IS NULL AND MIGSTATUSCODE='P';

UPDATE VAM_MIGVTPTTXNEXP SET MIGSTATUSCODE='F',MIGSTATUSDESC='TXN REFNO IS ALREADY AVAILABLE' WHERE
TXNEXPID IN (SELECT TXNEXPID FROM VT_VAM.VTPTTXNEXP);

--    
--MERGE INTO VAM_MIGVTPTTXNEXP STG USING 
--    (
--    SELECT VAIBAN,GCIFNO
--    FROM VAM_MIGVTSMVACCOUNTS
--    GROUP BY VAIBAN,GCIFNO
--    )A
--    ON (A.VAIBAN=STG.DRACCNO)
--    WHEN MATCHED THEN
--    UPDATE 
--    SET 
--	  STG.GCIFNO = A.GCIFNO
--	  WHERE STG.CRACCNO IS NULL;
--	  
--MERGE INTO VAM_MIGVTPTTXNEXP STG USING 
--    (
--    SELECT VAIBAN,GCIFNO
--    FROM VAM_MIGVTSMVACCOUNTS
--    GROUP BY VAIBAN,GCIFNO
--    )A
--    ON (A.VAIBAN=STG.CRACCNO)
--    WHEN MATCHED THEN
--    UPDATE 
--    SET 
--	  STG.GCIFNO = A.GCIFNO
--	  WHERE STG.DRACCNO IS NULL;
--      
      UPDATE VAM_MIGVTPTTXNEXP
    SET MIGSTATUSCODE='S', MIGSTATUSDESC = 'Validation Successfull'
    WHERE BATCHRUNID1=IN_BATCHRUNID AND MIGSTATUSCODE='P';



    INSERT INTO VT_VAM.VTPTTXNEXP
        ( TXNEXPID,           	PAYTRNREFNO,			REQPAYREFNO,			PAYTRNINITDATE
        ,BULKUPLRECSEQ,         TXNDATE,				ACCID,           		DRACCNO
        ,DRTXNAMOUNT,           DRCURRENCYCODE,			DRDENOMINATION,			DEALCODE
        ,DRACCNAME,           	DRIBAN,           		BENINITTYPE,			BENID
        ,CRACCNO,           	CRTXNAMOUNT,			CRCURRENCYCODE,			CRDENOMINATION
        ,BENNAME,           	BENEMAIL,           	BENMOBNO,				BENBICCODE
        ,IDENTIFIER,           	CLEARINGCODE,			BENCOUNTRYID,           COUNTRYCODE3
        ,BENBANKNAME,           BENBANKADD,				ISSAVEBEN,           	TXNAMOUNT
        ,CURRENCYCODE,          DENOMINATION,			PAYCODEID,           	PAYMENTPURPCODE
        ,PAYDTLS,           	CUSTTXNREFNO,			CHRGCODE,           	REQDEXCTNDT
        ,ISSAVESTANDINSTR,		ADDNTLEMAIL,			PAYADVTYPE,           	PAYADVDTLS
        ,UPLOADPAYADVFILE,		CHREFNO,           		DRACCTYPE,           	TXNTYPE
        ,VAT,					CHRGAMT,           		CHRGTYPE,           	INITCHN
        ,RECURID,				BATCHRUNID,				RSSTATUSCODE,           RSSTATUSDESC
        ,RSSEVERITY,			RSSOURCE,           	RSBILLPAIDSTATUS,		CHNREFNO
        ,BENADV,				PAYDATE,           		BENBANKCODE,           	BENBANKLOC
        ,PRDCODE,				BENADDR1,           	BENADDR2,           	BENADDR3
        ,BENADDR4,           	STATUSCODE,				STATUSDESC,           	REMARKS
        ,CHECKERREMARKS,		EXPSTATUSCODE,			EXPSTATUSDESC,          STATUS
        ,ISDELETED,				           		CRTDATE,				CRTIP
        ,					APPDATE,           		APPIP
        ,MDYDATE,				MDYIP,           		PAYMETHODID,           	FAVOURITE
        ,THREADID,				PAYTYPE,           		COREJOURNAL,           	TRNPROCESS
        ,TRNPROCESSTYPE,		BENADVSTATUS,			BENADVDATE,           	BATCHREFNO
        ,DEBITTYPE,           	RETRYCOUNT,				LASTRETRYDATE,			BNKCHRGAMT
        ,BNKVATAMT,           	TRNCHRGAMT,				TRNVATAMT,           	BNKCHRGLOGID
        ,TRNCHRGLOGID,          DRACCTYPEFLAG,			CRACCTYPEFLAG,          COUNTRYCODE2
        ,DRCOUNTRYCODE2,		BENBRANCHNAME,			DRBRANCHCODE,           BENCOUNTRYCODE
        ,MAILREF,				EXCHANGERATE,			CUSTID,					CBERRORCODE
        ,CBERRORDESC,           SIERRORCODE,			SIERRORDESC,			CHRGCURRENCYCODE
        ,CHRGDENOMINATION,		CURRTXNTYPE,			ACCBAL,					CRETEID
        ,CBSREFNO,				PREVIOUSREFNO,			EARMARKREFNO,           NARRATION
        ,REMBNKINFOLINE1,       REMBNKINFOLINE2,		REMBNKINFOLINE3,		REMBNKINFOLINE4
        ,REMBNKINFOLINE5,       REMBNKINFOLINE6,		NEGOTIATEDRATE,			RATETYPE
        ,VALUEDATE,           	STMTSEQUENCE,			STMTENTRYID,			SEGMENT
        ,REQUESTID,           	REVERSALINDICATOR,		POSTEDFLAG,				REQUESTDATETIME
        ,SERVICENAME,           SERVICECODE,			CHANNELCODE,			CUSTOMERCODE
        ,LANGCODE,           	EVENTTYPE,				ENTITYID,				BUDID
--        ,CRTBY, APPBY, MDYBY
        )
    SELECT
       STG.TXNEXPID,         		STG.PAYTRNREFNO,		STG.REQPAYREFNO,        STG.PAYTRNINITDATE
        ,STG.BULKUPLRECSEQ,		STG.TXNDATE,			STG.ACCID,				STG.DRACCNO
        ,STG.DRTXNAMOUNT,		STG.DRCURRENCYCODE,		STG.DRDENOMINATION,		STG.DEALCODE
        ,STG.DRACCNAME,         STG.DRIBAN,				STG.BENINITTYPE,		STG.BENID
        ,STG.CRACCNO,			STG.CRTXNAMOUNT,		STG.CRCURRENCYCODE,		STG.CRDENOMINATION
        ,STG.BENNAME,			STG.BENEMAIL,			STG.BENMOBNO,			STG.BENBICCODE
        ,STG.IDENTIFIER,		STG.CLEARINGCODE,		STG.BENCOUNTRYID,		STG.COUNTRYCODE3
        ,STG.BENBANKNAME,		STG.BENBANKADD,         STG.ISSAVEBEN,         	STG.TXNAMOUNT
        ,STG.CURRENCYCODE,		STG.DENOMINATION,       STG.PAYCODEID,         	STG.PAYMENTPURPCODE
        ,STG.PAYDTLS,			STG.CUSTTXNREFNO,       STG.CHRGCODE,         	STG.REQDEXCTNDT
        ,STG.ISSAVESTANDINSTR,	STG.ADDNTLEMAIL,        STG.PAYADVTYPE,         STG.PAYADVDTLS
        ,STG.UPLOADPAYADVFILE,	STG.CHREFNO,         	STG.DRACCTYPE,         	STG.TXNTYPE
        ,STG.VAT,				STG.CHRGAMT,         	STG.CHRGTYPE,         	STG.INITCHN
        ,STG.RECURID,			STG.BATCHRUNID,         STG.RSSTATUSCODE,		STG.RSSTATUSDESC
        ,STG.RSSEVERITY,		STG.RSSOURCE,         	STG.RSBILLPAIDSTATUS,	STG.CHNREFNO
        ,STG.BENADV,			STG.PAYDATE,         	STG.BENBANKCODE,		STG.BENBANKLOC
        ,STG.PRDCODE,			STG.BENADDR1,         	STG.BENADDR2,         	STG.BENADDR3
        ,STG.BENADDR4,			STG.STATUSCODE,         STG.STATUSDESC,         STG.REMARKS
        ,STG.CHECKERREMARKS,	STG.EXPSTATUSCODE,      STG.EXPSTATUSDESC,		STG.STATUS
        ,STG.ISDELETED,                  		STG.CRTDATE,			'MIGVAM' AS CRTIP
        ,         	STG.APPDATE,         	STG.APPIP
        ,STG.MDYDATE,         	STG.MDYIP,         		STG.PAYMETHODID,		STG.FAVOURITE
        ,STG.THREADID,         	STG.PAYTYPE,         	STG.COREJOURNAL,		STG.TRNPROCESS
        ,STG.TRNPROCESSTYPE,	STG.BENADVSTATUS,		STG.BENADVDATE,         STG.BATCHREFNO
        ,STG.DEBITTYPE,         STG.RETRYCOUNT,         STG.LASTRETRYDATE,		STG.BNKCHRGAMT
        ,STG.BNKVATAMT,         STG.TRNCHRGAMT,         STG.TRNVATAMT,			STG.BNKCHRGLOGID
        ,STG.TRNCHRGLOGID,		STG.DRACCTYPEFLAG,		STG.CRACCTYPEFLAG,		STG.COUNTRYCODE2
        ,STG.DRCOUNTRYCODE2,	STG.BENBRANCHNAME,		STG.DRBRANCHCODE,		STG.BENCOUNTRYCODE
        ,STG.MAILREF,         	STG.EXCHANGERATE,		STG.CUSTID,				STG.CBERRORCODE
        ,STG.CBERRORDESC,       STG.SIERRORCODE,		STG.SIERRORDESC,		STG.CHRGCURRENCYCODE
        ,STG.CHRGDENOMINATION,	STG.CURRTXNTYPE,		STG.ACCBAL,				STG.CRETEID
        ,STG.CBSREFNO,         	STG.PREVIOUSREFNO,		STG.EARMARKREFNO,		STG.NARRATION
        ,STG.REMBNKINFOLINE1,	STG.REMBNKINFOLINE2,	STG.REMBNKINFOLINE3,	STG.REMBNKINFOLINE4
        ,STG.REMBNKINFOLINE5,	STG.REMBNKINFOLINE6,	STG.NEGOTIATEDRATE,		STG.RATETYPE
        ,STG.VALUEDATE,         STG.STMTSEQUENCE,		STG.STMTENTRYID,		STG.SEGMENT
        ,STG.REQUESTID,         STG.REVERSALINDICATOR,	STG.POSTEDFLAG,         STG.REQUESTDATETIME
        ,STG.SERVICENAME,		STG.SERVICECODE,		STG.CHANNELCODE,		STG.CUSTOMERCODE
        ,STG.LANGCODE,         	STG.EVENTTYPE,			STG.ENTITYID,			STG.BUDID
    FROM VAM_MIGVTPTTXNEXP STG
    LEFT JOIN VTPTTXNEXP MDUSR ON STG.TXNEXPID=MDUSR.TXNEXPID
    WHERE  --STG.GCIFNO IN ('ADNOCIHB') AND
    MIGSTATUSCODE<>'F'  AND MDUSR.TXNEXPID IS NULL AND  BATCHRUNID1=IN_BATCHRUNID;

    MERGE INTO VT_VAM.VTPTTXNEXP STG USING 
    (
    SELECT VAIBAN,ACCID,CUSTID
    FROM VTSMVACCOUNTS
    GROUP BY VAIBAN,ACCID,CUSTID
    )A
    ON (A.VAIBAN=STG.DRACCNO)
    WHEN MATCHED THEN
    UPDATE 
    SET STG.ACCID=A.ACCID,STG.CUSTID=A.CUSTID
    WHERE STG.CRTIP='MIGVAM' AND STG.CRACCNO IS NULL AND STG.BATCHRUNID IS NULL ;

    MERGE INTO VT_VAM.VTPTTXNEXP STG USING 
    (
    SELECT VAIBAN,ACCID,CUSTID
    FROM VTSMVACCOUNTS
    GROUP BY VAIBAN,ACCID,CUSTID
    )A
    ON (A.VAIBAN=STG.CRACCNO)
    WHEN MATCHED THEN
    UPDATE 
    SET STG.ACCID=A.ACCID,STG.CUSTID=A.CUSTID
    WHERE STG.CRTIP='MIGVAM' AND STG.DRACCNO IS NULL AND STG.BATCHRUNID IS NULL ;

        UPDATE VT_VAM.VTPTTXNEXP SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';

/*VTFTLEDPOSTING*/

    UPDATE VAM_MIGVTFTLEDPOSTING SET BATCHRUNID1=IN_BATCHRUNID WHERE BATCHRUNID1 IS NULL AND MIGSTATUSCODE='P';


--MERGE INTO VAM_MIGVTFTLEDPOSTING STG USING 
--    (
--    SELECT VAIBAN,GCIFNO
--	FROM VAM_MIGVTSMVACCOUNTS
--	WHERE GCIFNO IN ('ADNOCIHB')
--	)A
--	ON (A.VAIBAN = STG.ACCNO)
--	WHEN MATCHED THEN
--	UPDATE 
--	SET 
--	STG.GCIFNO = A.GCIFNO;     

UPDATE VAM_MIGVTFTLEDPOSTING
    SET MIGSTATUSCODE='S', MIGSTATUSDESC = 'Validation Successfull'
    WHERE BATCHRUNID1=IN_BATCHRUNID AND MIGSTATUSCODE='P';

    INSERT INTO VT_VAM.VTFTLEDPOSTING
        (LEDGERNO,              LVID,                   TRNID,                  TEMPID
        ,DRCRFLAG,              LEDGERSEQ,              TRNCODE,                FINCODE
        ,VALUEDATE,             EFFDATE,                ACCNO,                  AMOUNT
        ,CURRENCYCODE,          CURRENCYNAME,           NARRATTION,             REFNO
        ,POSTTYPE,              STATUS,                                   CRTDT
        ,CRTIP,                                   MDYDATE,                MDYIP
        ,STOREID,               SUB_TRNCODE,            INDICATOR,              JVTYPE
        ,PAYADVBATCHID,         NESSIEBATCHRUNID,       NESSIEFLAG,             ADDITIONALINFO1
        ,ADDITIONALINFO2,       ADDITIONALINFO3,        ADDITIONALINFO4,        ADDITIONALINFO5
        ,PAYMENTMODE,           POSTREFNO,              INVREFNO,               DENOMINATION
        ,VALUEDATENEW,          ORDERINGCUSTNAME,       ORDERINGCUSTACNO,       ORDERINGCUSTIBAN
        ,ORDERINGCUSTCOUNTRYCODE,UBSTRNREFNO,           RUNBAL,                 CHNREFNO
        ,UTIREF,                COREJOURNAL,            CUSTREFNO,              PAYMETHODID
        ,CBTOTTXNAMOUNT,        CBTOTCHRGAMOUNT,        CBTOTVATAMOUNT,         REMARKS
        ,VERSION,               ISDELETED,              APPBY,                  APPDATE
        ,APPIP,                 CRTDATE,                EXCHANGERATE,           TRNPRD
        )
    SELECT
         STG.LEDGERNO,          STG.LVID,               STG.TRNID,              STG.TEMPID
        ,STG.DRCRFLAG,          STG.LEDGERSEQ,          STG.TRNCODE,            STG.FINCODE
        ,STG.VALUEDATE,         STG.EFFDATE,            STG.ACCNO,              STG.AMOUNT
        ,STG.CURRENCYCODE,      STG.CURRENCYNAME,       STG.NARRATTION,         STG.REFNO
        ,STG.POSTTYPE,          STG.STATUS,                           STG.CRTDT
        ,'MIGVAM' AS CRTIP,                           STG.MDYDATE,            STG.MDYIP
        ,STG.STOREID,           STG.SUB_TRNCODE,        STG.INDICATOR,          STG.JVTYPE
        ,STG.PAYADVBATCHID,     STG.NESSIEBATCHRUNID,   STG.NESSIEFLAG,         STG.ADDITIONALINFO1
        ,STG.ADDITIONALINFO2,   STG.ADDITIONALINFO3,    STG.ADDITIONALINFO4,    STG.ADDITIONALINFO5
        ,STG.PAYMENTMODE,       STG.POSTREFNO,          STG.INVREFNO,           STG.DENOMINATION
        ,STG.VALUEDATENEW,      null AS ORDERINGCUSTNAME, null AS ORDERINGCUSTACNO, null AS ORDERINGCUSTIBAN
        ,null AS ORDERINGCUSTCOUNTRYCODE,STG.UBSTRNREFNO, STG.RUNBAL,             STG.CHNREFNO
        ,null AS UTIREF,          STG.COREJOURNAL,        STG.CUSTREFNO,          STG.PAYMETHODID
        ,null AS CBTOTTXNAMOUNT,  null AS CBTOTCHRGAMOUNT,  null AS CBTOTVATAMOUNT,   null AS REMARKS
        ,null AS VERSION,         'N',                    null AS APPBY,            null AS APPDATE
        ,null AS APPIP,           null AS CRTDT,            STG.EXCHANGERATE,       null AS TRNPRD
    FROM VAM_MIGVTFTLEDPOSTING STG
    WHERE  STG.BATCHRUNID1 =IN_BATCHRUNID AND MIGSTATUSCODE<>'F';-- AND STG.GCIFNO IN ('ADNOCIHB');

    UPDATE VT_VAM.VTFTLEDPOSTING SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';

/*
    INSERT INTO VTSTNARRATION
        (REQUESTID,         CHNREFNO,         CBSREFNO,         NARRATION,         VAIBAN
        ,ACCNO,         BRANCH,         STMTSEQUENCE,         STMTENTRYID
        ,SEGMENT,         STATUSCODE,         CRTBY,         CRTDATE
        ,MDYBY,         MDYDATE,         CRTIP,         MDYIP)
    SELECT
         STG.REQUESTID,         STG.CHNREFNO,         STG.CBSREFNO,         STG.NARRATION,         STG.VAIBAN
        ,STG.ACCNO,         STG.BRANCH,         STG.STMTSEQUENCE,         STG.STMTENTRYID
        ,STG.SEGMENT,         STG.STATUSCODE,         USR.USERID,         STG.CRTDATE
        ,USR.USERID,         STG.MDYDATE,         STG.CRTIP,         STG.MDYIP
    FROM VAM_MIGVTSTNARRATION STG;

*/

    UPDATE VAM_MIGVTPMNARRATION SET BATCHRUNID1=IN_BATCHRUNID WHERE BATCHRUNID1 IS NULL AND MIGSTATUSCODE='P';


UPDATE VAM_MIGVTPMNARRATION STG SET STG.MIGSTATUSCODE='F', STG.MIGSTATUSDESC = 'ACCOUNT NUMBER IS NOT AVAILABLE IN GCN'
WHERE ACCNO NOT IN (SELECT ACCNO FROM VT_COB.VTCMCUSTACC ) AND BATCHRUNID1=IN_BATCHRUNID AND ACCNO IS NOT NULL ;

UPDATE VAM_MIGVTPMNARRATION
    SET MIGSTATUSCODE='S', MIGSTATUSDESC = 'Validation Successfull'
    WHERE BATCHRUNID1=IN_BATCHRUNID AND MIGSTATUSCODE='P';

    INSERT INTO VT_VAM.VTPMNARRATION
        (NARRATIONID,        	CUSTID,					ACCID
        ,VAIBANID,				SVCTYPE,				MKRREMARKS
        ,APRREMARKS,			STATUS,					NARRATION
        ,CRTDATE,         		CRTIP,         			         			APPDATE
        ,APPIP,										MDYDATE,				MDYIP
--        ,CRTBY, APPBY, MDYBY
        , VAENTITYID)
    SELECT
         STG.NARRATIONID,		CU.CUSTID,				ACC.ACCID
        ,STG.VAIBANID,			STG.SVCTYPE,			STG.MKRREMARKS
        ,STG.APRREMARKS,        STG.STATUS,				STG.NARRATION
        ,STG.CRTDATE,			'MIGVAM' AS CRTIP,        						STG.APPDATE
        ,STG.APPIP,				        		STG.MDYDATE,			STG.MDYIP
--        ,MAUSR.USERID,APUSR.USERID,MDUSR.USERID
,STG.VAACCID
    FROM VAM_MIGVTPMNARRATION STG
        INNER JOIN VT_COB.VTCMCUST CU ON CU.GCIFNO=STG.GCIFNO
    LEFT JOIN VT_COB.VTCMCUSTACC ACC ON STG.ACCNO=ACC.ACCNO
    WHERE  STG.BATCHRUNID1 =IN_BATCHRUNID AND MIGSTATUSCODE='S';

        UPDATE VT_VAM.VTPMNARRATION SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';

    UPDATE VAM_MIGVTSMVAEARMARK SET BATCHRUNID1=IN_BATCHRUNID WHERE BATCHRUNID1 IS NULL AND MIGSTATUSCODE='P';

UPDATE VAM_MIGVTSMVAEARMARK
    SET MIGSTATUSCODE='S', MIGSTATUSDESC = 'Validation Successfull'
    WHERE BATCHRUNID1=IN_BATCHRUNID AND MIGSTATUSCODE='P';

     INSERT INTO VT_VAM.VTSMVAEARMARK
       ( EARMARKREFID,        	EARMARKREFNO,			CHNREFNO
        ,ACCNO,        			AMOUNT,					CHNID
        ,CHNCODE,        		EARMARKTYPE,			STATUSCODE,				STATUSDESC
        ,        			CRTDATE,				CRTIP
        ,APPDATE,        		APPIP,					PAYERID,				OVERRIDEBUDGETFLAG
        ,REQUESTID,        		RELEASEAMOUNT,			READSTATUS,				VATYPE
        ,BUDID,        			ENTITYID,				BUDREFID,				SUBBUDID
        ,ADDITIONALINFO,        MERCHANTCATEGORYCODE,	VACARDID,				TXNNARRATION
--        ,CRTBY, APPBY
        )
    SELECT
         STG.EARMARKREFID,		STG.EARMARKREFNO,		STG.CHNREFNO
        ,STG.ACCNO,				STG.AMOUNT,				STG.CHNID
        ,STG.CHNCODE,			STG.EARMARKTYPE,		STG.STATUSCODE,         STG.STATUSDESC
        ,         	STG.CRTDATE,         	'MIGVAM' AS CRTIP
        ,STG.APPDATE,         	STG.APPIP,         		STG.PAYERID,			STG.OVERRIDEBUDGETFLAG
        ,STG.REQUESTID,         STG.RELEASEAMOUNT,		STG.READSTATUS,         STG.VATYPE
        ,STG.BUDID,         	STG.ENTITYID,			STG.BUDREFID,			STG.SUBBUDID
        ,STG.ADDITIONALINFO,	STG.MERCHANTCATEGORYCODE,STG.VACARDID,			STG.TXNNARRATION
--        ,MAUSR.USERID,APUSR.USERID
    FROM VAM_MIGVTSMVAEARMARK STG
    WHERE  STG.BATCHRUNID1 =IN_BATCHRUNID AND MIGSTATUSCODE='S';

    UPDATE VT_VAM.VTSMVAEARMARK SET CRTBY=102051,APPBY=102051 WHERE CRTIP='MIGVAM';

    UPDATE VAM_MIGVTSMVAEARMARKEXP SET BATCHRUNID1=IN_BATCHRUNID WHERE BATCHRUNID1 IS NULL AND MIGSTATUSCODE='P';

--UPDATE VAM_MIGVTSMVAEARMARKEXP STG SET STG.MIGSTATUSCODE='F', STG.MIGSTATUSDESC = 'ACCOUNT NUMBER IS NOT AVAILABLE IN GCN'
--WHERE ACCNO NOT IN (SELECT ACCNO FROM VT_COB.VTCMCUSTACC ) AND BATCHRUNID1=IN_BATCHRUNID AND ACCNO IS NOT NULL ;

UPDATE VAM_MIGVTSMVAEARMARKEXP SET MIGSTATUSCODE='F',MIGSTATUSDESC='EARMARK EXP REFID IS ALREADY AVAILABLE'
WHERE EARMARKEXPID IN (SELECT EARMARKEXPID FROM VT_VAM.VTSMVAEARMARKEXP);

UPDATE VAM_MIGVTSMVAEARMARKEXP
    SET MIGSTATUSCODE='S', MIGSTATUSDESC = 'Validation Successfull'
    WHERE BATCHRUNID1=IN_BATCHRUNID AND MIGSTATUSCODE='P';

    INSERT INTO VT_VAM.VTSMVAEARMARKEXP
        (EARMARKEXPID,          EARMARKREFNO,           CHNREFNO,               ACCNO
        ,AMOUNT,                CHNID,                  CHNCODE,                EARMARKTYPE
        ,STATUSCODE,            STATUSDESC,             MAKERREMARKS,           CHECKERREMARKS
        ,EXPSTATUSCODE,         EXPSTATUSDESC,          PAYERID,                OVERRIDEBUDGETFLAG
        ,REQUESTID,             RELEASEAMOUNT,                            CRTDATE
        ,CRTIP,                                  APPDATE,                APPIP
        ,                 MDYDATE,                MDYIP,                  BUDREFID
        ,SUBBUDID,              ENTITYID,               VATYPE,                 BUDID
        ,MERCHANTCATEGORYCODE,  VACARDID,               ADDITIONALINFO,         TXNNARRATION
--        ,CRTBY, APPBY, MDYBY
        )
    SELECT
         STG.EARMARKEXPID,      STG.EARMARKREFNO,       STG.CHNREFNO,           STG.ACCNO
        ,STG.AMOUNT,            STG.CHNID,              STG.CHNCODE,            STG.EARMARKTYPE
        ,STG.STATUSCODE,        STG.STATUSDESC,         STG.MAKERREMARKS,       STG.CHECKERREMARKS
        ,STG.EXPSTATUSCODE,     STG.EXPSTATUSDESC,      STG.PAYERID,            STG.OVERRIDEBUDGETFLAG
        ,STG.REQUESTID,         STG.RELEASEAMOUNT,                    STG.CRTDATE
        ,'MIGVAM' AS CRTIP,                           STG.APPDATE,            STG.APPIP
        ,             STG.MDYDATE,            STG.MDYIP,              STG.BUDREFID
        ,STG.SUBBUDID,          STG.ENTITYID,           STG.VATYPE,             STG.BUDID
        ,STG.MERCHANTCATEGORYCODE,STG.VACARDID,         STG.ADDITIONALINFO,     STG.TXNNARRATION
        --,MAUSR.USERID,APUSR.USERID,MDUSR.USERID
    FROM VAM_MIGVTSMVAEARMARKEXP STG
    WHERE BATCHRUNID1=IN_BATCHRUNID AND MIGSTATUSCODE='S';

        UPDATE VT_VAM.VTSMVAEARMARKEXP SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';
        
        
--        -----ADDITIONAL INFORMATION --------
--Insert INTO VTCMCUSTADDTLSPARAM (CUSTPARAMID,CUSTID,PARAMTYPE,PARAMCODE1,PARAMCODE2,PARAMVALUE,STATUS,ISDELETED,CRTBY,CRTDATE,CRTIP,
--                                 MDYBY,MDYDATE,MDYIP,APPBY,APPDATE,APPIP) 
--SELECT ADDTLSPARAM_CUSTPARAMID_SEQ.NEXTVAL,
--C1.CUSTID,'VAIDNT','GCIF',C.GCIFNO,E.VAENTITYID,S.STATUS,'N',null,TO_DATE( SUBSTR(s.crtdate, 1, 19),'YYYY-MM-DD HH24:MI:SS' ),'MIGVAM',
--                               '2',TO_DATE( SUBSTR(s.MDYdate, 1, 19),'YYYY-MM-DD HH24:MI:SS' ),null, '101086',TO_DATE( SUBSTR(s.appdate, 1, 19),'YYYY-MM-DD HH24:MI:SS' ),null  
--from VT_MIGRATION.STGVTCMTPTENTACCESS s 
--INNER JOIN VT_COB.VAM_MIGVTCMCUST MIG  ON MIG.OLDCUSTID = S.CUSTID 
--INNER JOIN VT_COB.VTCMCUST C1 ON C1.GCIFNO = MIG.GCIFNO
--INNER JOIN VT_COB.VTCMCUST C  ON C.GCIFNO = s.TPTGCIFNO 
--INNER JOIN VT_VAM.VTCMVAENTITY E ON  E.VACUSTIDNT = S.TPTVACUSTIDNT
--INNER JOIN VT_COB.VTCMCUSTACC A ON A.ACCID = E.ACCID
--INNER JOIN VT_COB.VTCMCUSTACCCIF AC ON AC.ACCID = A.ACCID AND AC.CUSTID =C.CUSTID
--INNER JOIN VT_COB.VTCMCUSTCIF CIF ON CIF.CIFID = AC.CIFID;
--        

   
DBMS_OUTPUT.PUT_LINE('PROCEDURE COMPLETED AT '||TO_CHAR(SYSDATE,'DD-MM-YY HH24:MI:SS'));


  COMMIT;
    EXCEPTION
	WHEN NO_DATA_FOUND THEN
	BEGIN
		ROLLBACK;
        OUT_STATUSCODE :='83';
		OUT_STATUSDESC := SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
		DBMS_OUTPUT.PUT_LINE('NO Data found');
        DBMS_OUTPUT.PUT_LINE('PROCEDURE COMPLETED AT '||TO_CHAR(SYSDATE,'DD-MM-YY HH24:MI:SS'));
INSERT INTO VT_COB.VTSMERRLOG(ERRMSG,ERRPROC,ERRDATETIME)
SELECT OUT_STATUSDESC,'PRC_MIG_VAM_EXEC_VAM',SYSTIMESTAMP FROM dual;

		RETURN;
	END;
	WHEN OTHERS THEN
	BEGIN
		ROLLBACK;
		OUT_STATUSCODE :='84';
		OUT_STATUSDESC := SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
       ROLLBACK; 
INSERT INTO VT_COB.VTSMERRLOG(ERRMSG,ERRPROC,ERRDATETIME)
SELECT OUT_STATUSDESC,'PRC_MIG_VAM_EXEC_VAM',SYSTIMESTAMP FROM dual;

		RETURN;
                DBMS_OUTPUT.PUT_LINE('PROCEDURE COMPLETED AT '||TO_CHAR(SYSDATE,'DD-MM-YY HH24:MI:SS'));

	END;

--		
END PRC_MIG_VAM_EXEC_VAM;


/


---------------3 VT_VAM --------------

create or replace PROCEDURE "PRC_MIG_VAM_EXEC_MERGE" ( IN_BATCHRUNID NUMBER,
OUT_STATUSCODE OUT VARCHAR2 ,
OUT_STATUSDESC OUT VARCHAR2)
AS
BEGIN

--VTSTBATCHPRCTSRN START-----

  MERGE INTO VTSTBATCHPRCSTRN STG
      USING
      (
         SELECT STG.BATCHRUNID,USR.USERID AS USR
        FROM VT_MIGRATION.STGVTSTBATCHPRCSTRN  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.CRTBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.CRTBY IS NOT NULL
           GROUP BY STG.BATCHRUNID,USR.USERID
           )A
      ON (A.BATCHRUNID=STG.BATCHRUNID) 
      WHEN MATCHED THEN
      UPDATE SET STG.CRTBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.CRTBY IS NOT NULL;
     
     MERGE INTO VTSTBATCHPRCSTRN STG
      USING
      (
         SELECT STG.BATCHRUNID,USR.USERID AS USR
        FROM VT_MIGRATION.STGVTSTBATCHPRCSTRN  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.APPBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.APPBY IS NOT NULL
           GROUP BY STG.BATCHRUNID,USR.USERID
           )A
      ON (A.BATCHRUNID=STG.BATCHRUNID) 
      WHEN MATCHED THEN
      UPDATE SET STG.APPBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.APPBY IS NOT NULL;


  MERGE INTO VTSTBATCHPRCSTRN STG
      USING
      (
         SELECT STG.BATCHRUNID,USR.USERID AS USR
        FROM VT_MIGRATION.STGVTSTBATCHPRCSTRN  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.MDYBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.MDYBY IS NOT NULL
           GROUP BY STG.BATCHRUNID,USR.USERID
           )A
      ON (A.BATCHRUNID=STG.BATCHRUNID) 
      WHEN MATCHED THEN
      UPDATE SET STG.MDYBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.MDYBY IS NOT NULL;

UPDATE VTSTBATCHPRCSTRN SET CRTBY=102051 WHERE CRTIP='MIGVAM' AND CRTBY IS NULL;
UPDATE VTSTBATCHPRCSTRN SET APPBY=102051 WHERE CRTIP='MIGVAM' AND APPBY IS NULL;
UPDATE VTSTBATCHPRCSTRN SET MDYBY=102051 WHERE CRTIP='MIGVAM' AND MDYBY IS NULL;

--VTSTBATCHPRCTSRN END------

--VTCMVAENTITY START----

UPDATE VTCMVAENTITY SET CRTBY=102051,APPBY=102051,MDYBY=102051 WHERE CRTIP='MIGVAM';

--VTCMVAENTITY END-----

UPDATE VTCMVAENTCHNMAP SET CRTBY=102051,APPBY=102051,MDYBY=102051  WHERE CRTIP='MIGVAM' ;

---VTSMVACCOUNTS START------

 MERGE INTO VTSMVACCOUNTS STG
      USING
      (
        SELECT STG.VAIBANID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTSMVACCOUNTS  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.CRTBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE  STG.CRTBY IS NOT NULL
           GROUP BY STG.VAIBANID,USR.USERID
           )A
      ON (A.VAIBANID=STG.VIRTUALACCID) 
      WHEN MATCHED THEN
      UPDATE SET STG.CRTBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.CRTBY IS NOT NULL;

MERGE INTO VTSMVACCOUNTS STG
      USING
      (
        SELECT STG.VAIBANID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTSMVACCOUNTS  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.APPBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE  STG.APPBY IS NOT NULL
           GROUP BY STG.VAIBANID,USR.USERID
           )A
      ON (A.VAIBANID=STG.VIRTUALACCID) 
      WHEN MATCHED THEN
      UPDATE SET STG.APPBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.APPBY IS NOT NULL;
      
      MERGE INTO VTSMVACCOUNTS STG
      USING
      (
        SELECT STG.VAIBANID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTSMVACCOUNTS  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.MDYBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE  STG.MDYBY IS NOT NULL
           GROUP BY STG.VAIBANID,USR.USERID
           )A
      ON (A.VAIBANID=STG.VIRTUALACCID) 
      WHEN MATCHED THEN
      UPDATE SET STG.MDYBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.MDYBY IS NOT NULL;

UPDATE VTSMVACCOUNTS SET CRTBY=102051 WHERE CRTIP='MIGVAM' AND CRTBY IS NULL;
UPDATE VTSMVACCOUNTS SET APPBY=102051 WHERE CRTIP='MIGVAM' AND APPBY IS NULL;
UPDATE VTSMVACCOUNTS SET MDYBY=102051 WHERE CRTIP='MIGVAM' AND MDYBY IS NULL;

---VTSMVACCOUNTS END------

---VTSMVACHNMAP START------

MERGE INTO VTSMVACHNMAP STG
      USING
      (
        SELECT STG.VAIBANID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTSMVACHNMAP  STG
        INNER JOIN VT_MIGRATION.STGVTSMVACCOUNTS  VACC ON VACC.VAIBANID=STG.VAIBANID
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON VACC.CRTBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.CRTBY IS NOT NULL
        GROUP BY STG.VAIBANID,USR.USERID )A
      ON (A.VAIBANID=STG.VIRTUALACCID) 
      WHEN MATCHED THEN
      UPDATE SET STG.CRTBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.CRTBY IS NOT NULL;
      
      MERGE INTO VTSMVACHNMAP STG
      USING
      (
        SELECT STG.VAIBANID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTSMVACHNMAP  STG
        INNER JOIN VT_MIGRATION.STGVTSMVACCOUNTS  VACC ON VACC.VAIBANID=STG.VAIBANID
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON VACC.APPBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.APPBY IS NOT NULL
        GROUP BY STG.VAIBANID,USR.USERID )A
      ON (A.VAIBANID=STG.VIRTUALACCID) 
      WHEN MATCHED THEN
      UPDATE SET STG.APPBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.APPBY IS NOT NULL;
      
    
UPDATE VTSMVACHNMAP SET CRTBY=102051 WHERE CRTIP='MIGVAM' AND CRTBY IS NULL;
UPDATE VTSMVACHNMAP SET APPBY=102051 WHERE CRTIP='MIGVAM' AND APPBY IS NULL;

---VTSMVACHNMAP END------


--VTSTPAYERUPL START-----

 MERGE INTO VTSTPAYERUPL STG
      USING
      (
        SELECT STG.BATCHRUNID,USR.USERID AS USR
        FROM VT_MIGRATION.STGVTSTPAYERUPL  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.REQBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.REQBY IS NOT NULL
           GROUP BY STG.BATCHRUNID,USR.USERID
           )A
      ON (A.BATCHRUNID=STG.BATCHRUNID) 
      WHEN MATCHED THEN
      UPDATE SET STG.REQBY=A.USR
      WHERE  STG.REQIP='MIGVAM' AND STG.REQBY IS NOT NULL;
      
    MERGE INTO VTSTPAYERUPL STG
      USING
      (
        SELECT STG.BATCHRUNID,USR.USERID AS USR
        FROM VT_MIGRATION.STGVTSTPAYERUPL  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.APPREJBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE  STG.APPREJBY IS NOT NULL
           GROUP BY STG.BATCHRUNID,USR.USERID
           )A
      ON (A.BATCHRUNID=STG.BATCHRUNID) 
      WHEN MATCHED THEN
      UPDATE SET STG.APPREJBY=A.USR
      WHERE  STG.REQIP='MIGVAM' AND STG.APPREJBY IS NOT NULL;


UPDATE VTSTPAYERUPL SET REQBY=102051 WHERE REQIP='MIGVAM' AND REQBY IS NULL;
UPDATE VTSTPAYERUPL SET APPREJBY=102051 WHERE REQIP='MIGVAM' AND APPREJBY IS NULL;

--VTSTPAYERUPL END------


--VTCMBUDSETUP START-----

 MERGE INTO VTCMBUDSETUP STG
      USING
      (
        SELECT STG.BUDREFID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTCMBUDSETUP  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.CRTBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE  STG.CRTBY IS NOT NULL
           GROUP BY STG.BUDREFID,USR.USERID
           )A
      ON (A.BUDREFID=STG.BUDREFID) 
      WHEN MATCHED THEN
      UPDATE SET STG.CRTBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.CRTBY IS NOT NULL;
      
      MERGE INTO VTCMBUDSETUP STG
      USING
      (
        SELECT STG.BUDREFID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTCMBUDSETUP  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.APPBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.APPBY IS NOT NULL
           GROUP BY STG.BUDREFID,USR.USERID
           )A
      ON (A.BUDREFID=STG.BUDREFID) 
      WHEN MATCHED THEN
      UPDATE SET STG.APPBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.APPBY IS NOT NULL;
      
      MERGE INTO VTCMBUDSETUP STG
      USING
      (
        SELECT STG.BUDREFID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTCMBUDSETUP  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.MDYBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.MDYBY IS NOT NULL
           GROUP BY STG.BUDREFID,USR.USERID
           )A
      ON (A.BUDREFID=STG.BUDREFID) 
      WHEN MATCHED THEN
      UPDATE SET STG.MDYBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.MDYBY IS NOT NULL;


UPDATE VTCMBUDSETUP SET CRTBY=102051 WHERE CRTIP='MIGVAM' AND CRTBY IS NULL;
UPDATE VTCMBUDSETUP SET APPBY=102051 WHERE CRTIP='MIGVAM' AND APPBY IS NULL;
UPDATE VTCMBUDSETUP SET MDYBY=102051 WHERE CRTIP='MIGVAM' AND MDYBY IS NULL;

--VTCMBUDSETUP END------


--VTCMBUDGETLOG START-----

 MERGE INTO VTCMBUDGETLOG STG
      USING
      (
        SELECT STG.BUDLOGID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTCMBUDGETLOG  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.CRTBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE  STG.CRTBY IS NOT NULL
           GROUP BY STG.BUDLOGID,USR.USERID
           )A
      ON (A.BUDLOGID=STG.BUDLOGID) 
      WHEN MATCHED THEN
      UPDATE SET STG.CRTBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.CRTBY IS NOT NULL;
      
      MERGE INTO VTCMBUDGETLOG STG
      USING
      (
        SELECT STG.BUDLOGID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTCMBUDGETLOG  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.APPBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.APPBY IS NOT NULL
           GROUP BY STG.BUDLOGID,USR.USERID
           )A
      ON (A.BUDLOGID=STG.BUDLOGID) 
      WHEN MATCHED THEN
      UPDATE SET STG.APPBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.APPBY IS NOT NULL;
      
      MERGE INTO VTCMBUDGETLOG STG
      USING
      (
        SELECT STG.BUDLOGID ,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTCMBUDGETLOG  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.MDYBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.MDYBY IS NOT NULL
           GROUP BY STG.BUDLOGID,USR.USERID
           )A
      ON (A.BUDLOGID=STG.BUDLOGID) 
      WHEN MATCHED THEN
      UPDATE SET STG.MDYBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.MDYBY IS NOT NULL;


UPDATE VTCMBUDGETLOG SET CRTBY=102051 WHERE CRTIP='MIGVAM' AND CRTBY IS NULL;
UPDATE VTCMBUDGETLOG SET APPBY=102051 WHERE CRTIP='MIGVAM' AND APPBY IS NULL;
UPDATE VTCMBUDGETLOG SET MDYBY=102051 WHERE CRTIP='MIGVAM' AND MDYBY IS NULL;

--VTCMBUDGETLOG END------

--VTSMVACARDS START-----

 MERGE INTO VTSMVACARDS STG
      USING
      (
        SELECT STG.VACARDID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTSMVACARDS  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.CRTBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE  STG.CRTBY IS NOT NULL
           GROUP BY STG.VACARDID,USR.USERID
           )A
      ON (A.VACARDID=STG.VACARDID) 
      WHEN MATCHED THEN
      UPDATE SET STG.CRTBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.CRTBY IS NOT NULL;
      
       MERGE INTO VTSMVACARDS STG
      USING
      (
        SELECT STG.VACARDID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTSMVACARDS  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.APPBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.APPBY IS NOT NULL
           GROUP BY STG.VACARDID,USR.USERID
           )A
      ON (A.VACARDID=STG.VACARDID) 
      WHEN MATCHED THEN
      UPDATE SET STG.APPBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.APPBY IS NOT NULL;
      
      MERGE INTO VTSMVACARDS STG
      USING
      (
        SELECT STG.VACARDID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTSMVACARDS  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.MDYBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.MDYBY IS NOT NULL
           GROUP BY STG.VACARDID,USR.USERID
           )A
      ON (A.VACARDID=STG.VACARDID) 
      WHEN MATCHED THEN
      UPDATE SET STG.MDYBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.MDYBY IS NOT NULL;


UPDATE VTSMVACARDS SET CRTBY=102051 WHERE CRTIP='MIGVAM' AND CRTBY IS NULL;
UPDATE VTSMVACARDS SET APPBY=102051 WHERE CRTIP='MIGVAM' AND APPBY IS NULL;
UPDATE VTSMVACARDS SET MDYBY=102051 WHERE CRTIP='MIGVAM' AND MDYBY IS NULL;

--VTSMVACARDS END------

--VTSTVACARDSUPL START-----

 MERGE INTO VTSTVACARDSUPL STG
      USING
      (
        SELECT STG.VACARDSUPLID,USR.USERID AS USR
        FROM VT_MIGRATION.STGVTSTVACARDSUPL  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.CRTBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.CRTBY IS NOT NULL
           GROUP BY STG.VACARDSUPLID,USR.USERID
           )A
      ON (A.VACARDSUPLID=STG.VACARDSUPLID) 
      WHEN MATCHED THEN
      UPDATE SET STG.CRTBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.CRTBY IS NOT NULL;
      
UPDATE VTSTVACARDSUPL SET CRTBY=102051 WHERE CRTIP='MIGVAM' AND CRTBY IS NULL;

--VTSTVACARDSUPL END------


--VTPTTXN START-----

 MERGE INTO VTPTTXN STG
      USING
      (
        SELECT STG.PAYTRNREFNO,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTPTTXN  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.CRTBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.CRTBY IS NOT NULL
           GROUP BY STG.PAYTRNREFNO,USR.USERID
           )A
      ON (A.PAYTRNREFNO=STG.PAYTRNREFNO) 
      WHEN MATCHED THEN
      UPDATE SET STG.CRTBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.CRTBY IS NOT NULL;
      
      MERGE INTO VTPTTXN STG
      USING
      (
        SELECT STG.PAYTRNREFNO,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTPTTXN  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.APPBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE  STG.APPBY IS NOT NULL
           GROUP BY STG.PAYTRNREFNO,USR.USERID
           )A
      ON (A.PAYTRNREFNO=STG.PAYTRNREFNO) 
      WHEN MATCHED THEN
      UPDATE SET STG.APPBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.APPBY IS NOT NULL;
    
      MERGE INTO VTPTTXN STG
      USING
      (
        SELECT STG.PAYTRNREFNO,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTPTTXN  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.MDYBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.MDYBY IS NOT NULL
           GROUP BY STG.PAYTRNREFNO,USR.USERID
           )A
      ON (A.PAYTRNREFNO=STG.PAYTRNREFNO) 
      WHEN MATCHED THEN
      UPDATE SET STG.MDYBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.MDYBY IS NOT NULL;

UPDATE VTPTTXN SET CRTBY=102051 WHERE CRTIP='MIGVAM' AND CRTBY IS NULL;
UPDATE VTPTTXN SET APPBY=102051 WHERE CRTIP='MIGVAM' AND APPBY IS NULL;
UPDATE VTPTTXN SET MDYBY=102051 WHERE CRTIP='MIGVAM' AND MDYBY IS NULL;

--VTPTTXN END------

--VTPTTXNEXP START-----

 MERGE INTO VTPTTXNEXP STG
      USING
      (
        SELECT STG.TXNEXPID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTPTTXNEXP  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.CRTBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE  STG.CRTBY IS NOT NULL
           GROUP BY STG.TXNEXPID,USR.USERID
           )A
      ON (A.TXNEXPID=STG.TXNEXPID) 
      WHEN MATCHED THEN
      UPDATE SET STG.CRTBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.CRTBY IS NOT NULL;
      
      MERGE INTO VTPTTXNEXP STG
      USING
      (
        SELECT STG.TXNEXPID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTPTTXNEXP  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.APPBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.APPBY IS NOT NULL
           GROUP BY STG.TXNEXPID,USR.USERID
           )A
      ON (A.TXNEXPID=STG.TXNEXPID) 
      WHEN MATCHED THEN
      UPDATE SET STG.APPBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.APPBY IS NOT NULL;
      
      MERGE INTO VTPTTXNEXP STG
      USING
      (
        SELECT STG.TXNEXPID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTPTTXNEXP  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.MDYBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.MDYBY IS NOT NULL
           GROUP BY STG.TXNEXPID,USR.USERID
           )A
      ON (A.TXNEXPID=STG.TXNEXPID) 
      WHEN MATCHED THEN
      UPDATE SET STG.MDYBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.MDYBY IS NOT NULL;

UPDATE VTPTTXNEXP SET CRTBY=102051 WHERE CRTIP='MIGVAM' AND CRTBY IS NULL;
UPDATE VTPTTXNEXP SET APPBY=102051 WHERE CRTIP='MIGVAM' AND APPBY IS NULL;
UPDATE VTPTTXNEXP SET MDYBY=102051 WHERE CRTIP='MIGVAM' AND MDYBY IS NULL;
--VTPTTXNEXP END------

--VTFTLEDPOSTING START-----

 MERGE INTO VTFTLEDPOSTING STG
      USING
      (
        SELECT STG.LEDGERNO,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTFTLEDPOSTING  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.CRTBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.CRTBY IS NOT NULL
           GROUP BY STG.LEDGERNO,USR.USERID
           )A
      ON (A.LEDGERNO=STG.LEDGERNO) 
      WHEN MATCHED THEN
      UPDATE SET STG.CRTBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.CRTBY IS NOT NULL;
      
      MERGE INTO VTFTLEDPOSTING STG
      USING
      (
        SELECT STG.LEDGERNO,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTFTLEDPOSTING  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.MDYBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.MDYBY IS NOT NULL
           GROUP BY STG.LEDGERNO,USR.USERID
           )A
      ON (A.LEDGERNO=STG.LEDGERNO) 
      WHEN MATCHED THEN
      UPDATE SET STG.MDYBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.MDYBY IS NOT NULL;
    

UPDATE VTFTLEDPOSTING SET CRTBY=102051 WHERE CRTIP='MIGVAM' AND CRTBY IS NULL;
UPDATE VTFTLEDPOSTING SET APPBY=102051 WHERE CRTIP='MIGVAM' AND APPBY IS NULL;
UPDATE VTFTLEDPOSTING SET MDYBY=102051 WHERE CRTIP='MIGVAM' AND MDYBY IS NULL;

--VTFTLEDPOSTING END------


--VTPMNARRATION START-----

 MERGE INTO VTPMNARRATION STG
      USING
      (
        SELECT STG.NARRATIONID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTPMNARRATION  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.CRTBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.CRTBY IS NOT NULL
           GROUP BY STG.NARRATIONID,USR.USERID
           )A
      ON (A.NARRATIONID=STG.NARRATIONID) 
      WHEN MATCHED THEN
      UPDATE SET STG.CRTBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.CRTBY IS NOT NULL;
      
      MERGE INTO VTPMNARRATION STG
      USING
      (
        SELECT STG.NARRATIONID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTPMNARRATION  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.APPBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.APPBY IS NOT NULL
           GROUP BY STG.NARRATIONID,USR.USERID
           )A
      ON (A.NARRATIONID=STG.NARRATIONID) 
      WHEN MATCHED THEN
      UPDATE SET STG.APPBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.APPBY IS NOT NULL;
      
      MERGE INTO VTPMNARRATION STG
      USING
      (
        SELECT STG.NARRATIONID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTPMNARRATION  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.MDYBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.MDYBY IS NOT NULL
           GROUP BY STG.NARRATIONID,USR.USERID
           )A
      ON (A.NARRATIONID=STG.NARRATIONID) 
      WHEN MATCHED THEN
      UPDATE SET STG.MDYBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.MDYBY IS NOT NULL;

UPDATE VTPMNARRATION SET CRTBY=102051 WHERE CRTIP='MIGVAM' AND CRTBY IS NULL;
UPDATE VTPMNARRATION SET APPBY=102051 WHERE CRTIP='MIGVAM' AND APPBY IS NULL;
UPDATE VTPMNARRATION SET MDYBY=102051 WHERE CRTIP='MIGVAM' AND MDYBY IS NULL;

--VTPMNARRATION END------

--VTSMVAEARMARK START-----

 MERGE INTO VTSMVAEARMARK STG
      USING
      (
        SELECT STG.EARMARKREFID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTSMVAEARMARK  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.CRTBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE  STG.CRTBY IS NOT NULL
           GROUP BY STG.EARMARKREFID,USR.USERID
           )A
      ON (A.EARMARKREFID=STG.EARMARKREFID) 
      WHEN MATCHED THEN
      UPDATE SET STG.CRTBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.CRTBY IS NOT NULL;
      
      MERGE INTO VTSMVAEARMARK STG
      USING
      (
        SELECT STG.EARMARKREFID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTSMVAEARMARK  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.APPBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.APPBY IS NOT NULL
           GROUP BY STG.EARMARKREFID,USR.USERID
           )A
      ON (A.EARMARKREFID=STG.EARMARKREFID) 
      WHEN MATCHED THEN
      UPDATE SET STG.APPBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.APPBY IS NOT NULL;
      

UPDATE VTSMVAEARMARK SET CRTBY=102051 WHERE CRTIP='MIGVAM' AND CRTBY IS NULL;
UPDATE VTSMVAEARMARK SET APPBY=102051 WHERE CRTIP='MIGVAM' AND APPBY IS NULL;

--VTSMVAEARMARK END------

--VTSMVAEARMARKEXP START-----

 MERGE INTO VTSMVAEARMARKEXP STG
      USING
      (
        SELECT STG.EARMARKEXPID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTSMVAEARMARKEXP  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.CRTBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.CRTBY IS NOT NULL
           GROUP BY STG.EARMARKEXPID,USR.USERID
           )A
      ON (A.EARMARKEXPID=STG.EARMARKEXPID) 
      WHEN MATCHED THEN
      UPDATE SET STG.CRTBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.CRTBY IS NOT NULL;
      
      MERGE INTO VTSMVAEARMARKEXP STG
      USING
      (
        SELECT STG.EARMARKEXPID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTSMVAEARMARKEXP  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.APPBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.APPBY IS NOT NULL
           GROUP BY STG.EARMARKEXPID,USR.USERID
           )A
      ON (A.EARMARKEXPID=STG.EARMARKEXPID) 
      WHEN MATCHED THEN
      UPDATE SET STG.APPBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.APPBY IS NOT NULL;
      
      MERGE INTO VTSMVAEARMARKEXP STG
      USING
      (
        SELECT STG.EARMARKEXPID,(USR.USERID) AS USR
        FROM VT_MIGRATION.STGVTSMVAEARMARKEXP  STG
        INNER JOIN VT_MIGRATION.STGVTAMPCUSER  STUSR ON STG.MDYBY=TO_CHAR(STUSR.USERID) 
        INNER JOIN VT_COB.VTCMCUST CUST ON CUST.GCIFNO=STUSR.GCIFNO
        INNER JOIN VT_COB.VTAMPCUSER USR ON UPPER(USR.LOGINID)= UPPER(STUSR.LOGINID) AND CUST.CUSTID=USR.ENTITYID
        WHERE STG.MDYBY IS NOT NULL
           GROUP BY STG.EARMARKEXPID,USR.USERID
           )A
      ON (A.EARMARKEXPID=STG.EARMARKEXPID) 
      WHEN MATCHED THEN
      UPDATE SET STG.MDYBY=A.USR
      WHERE  STG.CRTIP='MIGVAM' AND STG.MDYBY IS NOT NULL;


UPDATE VTSMVAEARMARKEXP SET CRTBY=102051 WHERE CRTIP='MIGVAM' AND CRTBY IS NULL;
UPDATE VTSMVAEARMARKEXP SET APPBY=102051 WHERE CRTIP='MIGVAM' AND APPBY IS NULL;
UPDATE VTSMVAEARMARKEXP SET MDYBY=102051 WHERE CRTIP='MIGVAM' AND MDYBY IS NULL;


MERGE INTO VTSMVACCOUNTS V 
USING (
SELECT U.LOGINID,V.VIRTUALACCID
FROM VTAMPCUSER U
INNER JOIN VTSMVACCOUNTS V ON V.CRTBY = U.USERID
WHERE V.CRTIP='MIGVAM'
)A ON (A.VIRTUALACCID = V.VIRTUALACCID)
WHEN MATCHED THEN 
UPDATE 
SET  LOGINID = A.LOGINID
WHERE CRTIP='MIGVAM';

--VTSMVAEARMARKEXP END------

 COMMIT;
    EXCEPTION
	WHEN NO_DATA_FOUND THEN
	BEGIN
		ROLLBACK;
        OUT_STATUSCODE :='83';
		OUT_STATUSDESC := SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
		DBMS_OUTPUT.PUT_LINE('NO Data found');
        DBMS_OUTPUT.PUT_LINE('PROCEDURE COMPLETED AT '||TO_CHAR(SYSDATE,'DD-MM-YY HH24:MI:SS'));
INSERT INTO VT_COB.VTSMERRLOG(ERRMSG,ERRPROC,ERRDATETIME)
SELECT OUT_STATUSDESC,'PRC_MIG_VAM_EXEC_MERGE_VAM',SYSTIMESTAMP FROM dual;

		RETURN;
	END;
	WHEN OTHERS THEN
	BEGIN
		ROLLBACK;
		OUT_STATUSCODE :='84';
		OUT_STATUSDESC := SQLERRM || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE;
       ROLLBACK; 
INSERT INTO VT_COB.VTSMERRLOG(ERRMSG,ERRPROC,ERRDATETIME)
SELECT OUT_STATUSDESC,'PRC_MIG_VAM_EXEC_MERGE_VAM',SYSTIMESTAMP FROM dual;

		RETURN;
DBMS_OUTPUT.PUT_LINE('PROCEDURE COMPLETED AT '||TO_CHAR(SYSDATE,'DD-MM-YY HH24:MI:SS'));

	END;

--		
END PRC_MIG_VAM_EXEC_MERGE;

/


